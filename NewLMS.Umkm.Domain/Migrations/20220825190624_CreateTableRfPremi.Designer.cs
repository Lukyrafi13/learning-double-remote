// <auto-generated />
using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using NewLMS.UMKM.Domain.Context;

#nullable disable

namespace NewLMS.Domain.Migrations
{
    [DbContext(typeof(UserContext))]
    [Migration("20220825190624_CreateTableRfPremi")]
    partial class CreateTableRfPremi
    {
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "6.0.7")
                .HasAnnotation("Relational:MaxIdentifierLength", 128);

            SqlServerModelBuilderExtensions.UseIdentityColumns(modelBuilder, 1L, 1);

            modelBuilder.Entity("NewLMS.Data.Action", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<Guid>("CreatedBy")
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTime>("CreatedDate")
                        .HasColumnType("datetime2");

                    b.Property<Guid?>("DeletedBy")
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTime?>("DeletedDate")
                        .HasColumnType("datetime2");

                    b.Property<bool>("IsDeleted")
                        .HasColumnType("bit");

                    b.Property<Guid?>("ModifiedBy")
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTime?>("ModifiedDate")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("datetime2")
                        .HasDefaultValueSql("getdate()");

                    b.Property<string>("Name")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.HasIndex("CreatedBy");

                    b.HasIndex("DeletedBy");

                    b.HasIndex("ModifiedBy");

                    b.ToTable("Actions");
                });

            modelBuilder.Entity("NewLMS.Data.AppSetting", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<Guid>("CreatedBy")
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTime>("CreatedDate")
                        .HasColumnType("datetime2");

                    b.Property<Guid?>("DeletedBy")
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTime?>("DeletedDate")
                        .HasColumnType("datetime2");

                    b.Property<bool>("IsDeleted")
                        .HasColumnType("bit");

                    b.Property<string>("Key")
                        .HasColumnType("nvarchar(max)");

                    b.Property<Guid?>("ModifiedBy")
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTime?>("ModifiedDate")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("datetime2")
                        .HasDefaultValueSql("getdate()");

                    b.Property<string>("Name")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Value")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.ToTable("AppSettings");
                });

            modelBuilder.Entity("NewLMS.Data.EmailSMTPSetting", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<Guid>("CreatedBy")
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTime>("CreatedDate")
                        .HasColumnType("datetime2");

                    b.Property<Guid?>("DeletedBy")
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTime?>("DeletedDate")
                        .HasColumnType("datetime2");

                    b.Property<string>("Host")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<bool>("IsDefault")
                        .HasColumnType("bit");

                    b.Property<bool>("IsDeleted")
                        .HasColumnType("bit");

                    b.Property<bool>("IsEnableSSL")
                        .HasColumnType("bit");

                    b.Property<Guid?>("ModifiedBy")
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTime?>("ModifiedDate")
                        .HasColumnType("datetime2");

                    b.Property<string>("Password")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("Port")
                        .HasColumnType("int");

                    b.Property<string>("UserName")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.HasIndex("CreatedBy");

                    b.HasIndex("DeletedBy");

                    b.HasIndex("ModifiedBy");

                    b.ToTable("EmailSMTPSettings");
                });

            modelBuilder.Entity("NewLMS.Data.EmailTemplate", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("Body")
                        .HasColumnType("nvarchar(max)");

                    b.Property<Guid>("CreatedBy")
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTime>("CreatedDate")
                        .HasColumnType("datetime2");

                    b.Property<Guid?>("DeletedBy")
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTime?>("DeletedDate")
                        .HasColumnType("datetime2");

                    b.Property<bool>("IsDeleted")
                        .HasColumnType("bit");

                    b.Property<Guid?>("ModifiedBy")
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTime?>("ModifiedDate")
                        .HasColumnType("datetime2");

                    b.Property<string>("Name")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Subject")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.ToTable("EmailTemplates");
                });

            modelBuilder.Entity("NewLMS.Data.Entities.Debtor", b =>
                {
                    b.Property<string>("NoIdentity")
                        .HasMaxLength(16)
                        .HasColumnType("nvarchar(16)");

                    b.Property<bool>("Active")
                        .HasColumnType("bit");

                    b.Property<string>("Address")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Citizenship")
                        .HasMaxLength(3)
                        .HasColumnType("nvarchar(3)");

                    b.Property<Guid>("CreatedBy")
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTime>("CreatedDate")
                        .HasColumnType("datetime2");

                    b.Property<DateTime>("DateOfBirth")
                        .HasColumnType("datetime2");

                    b.Property<Guid?>("DeletedBy")
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTime?>("DeletedDate")
                        .HasColumnType("datetime2");

                    b.Property<string>("EducationLevel")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Email")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Fullname")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Gender")
                        .IsRequired()
                        .HasColumnType("nvarchar(1)");

                    b.Property<bool>("IsDeleted")
                        .HasColumnType("bit");

                    b.Property<string>("MartialStatus")
                        .HasColumnType("nvarchar(max)");

                    b.Property<Guid?>("ModifiedBy")
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTime?>("ModifiedDate")
                        .HasColumnType("datetime2");

                    b.Property<string>("MotherName")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("NPWP")
                        .HasMaxLength(15)
                        .HasColumnType("nvarchar(15)");

                    b.Property<string>("Neighborhoods")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("NoBankAccount")
                        .HasMaxLength(13)
                        .HasColumnType("nvarchar(13)");

                    b.Property<int>("NumberOfDependents")
                        .HasColumnType("int");

                    b.Property<string>("Phone")
                        .HasMaxLength(13)
                        .HasColumnType("nvarchar(13)");

                    b.Property<string>("PlaceOfBirth")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("RT")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("RW")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("ResidenceStatus")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("RfZipCodeId")
                        .HasColumnType("int");

                    b.Property<string>("UnderwriterName")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Whatsapp")
                        .HasMaxLength(13)
                        .HasColumnType("nvarchar(13)");

                    b.HasKey("NoIdentity");

                    b.HasIndex("RfZipCodeId");

                    b.ToTable("Debtors");
                });

            modelBuilder.Entity("NewLMS.Data.Entities.DebtorCollateral", b =>
                {
                    b.Property<Guid>("DebtorCollateralId")
                        .ValueGeneratedOnAdd()
                        .HasMaxLength(16)
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("CollateralOnBehalfOf")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("CollateralValue")
                        .HasColumnType("int");

                    b.Property<Guid>("CreatedBy")
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTime>("CreatedDate")
                        .HasColumnType("datetime2");

                    b.Property<string>("DebtorId")
                        .HasMaxLength(16)
                        .HasColumnType("nvarchar(16)");

                    b.Property<Guid?>("DeletedBy")
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTime?>("DeletedDate")
                        .HasColumnType("datetime2");

                    b.Property<bool>("IsDeleted")
                        .HasColumnType("bit");

                    b.Property<Guid?>("ModifiedBy")
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTime?>("ModifiedDate")
                        .HasColumnType("datetime2");

                    b.Property<string>("NoOwnershipProof")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("RelationWithDebtor")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("DebtorCollateralId");

                    b.HasIndex("DebtorId");

                    b.ToTable("DebtorCollaterals");
                });

            modelBuilder.Entity("NewLMS.Data.Entities.DebtorCouple", b =>
                {
                    b.Property<string>("DebtorCoupleId")
                        .HasMaxLength(16)
                        .HasColumnType("nvarchar(16)");

                    b.Property<Guid>("CreatedBy")
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTime>("CreatedDate")
                        .HasColumnType("datetime2");

                    b.Property<DateTime>("DateMarriageCertificate")
                        .HasColumnType("datetime2");

                    b.Property<DateTime>("DateOfBirth")
                        .HasColumnType("datetime2");

                    b.Property<string>("DebtorCoupleNoIdentity")
                        .HasColumnType("nvarchar(max)");

                    b.Property<Guid?>("DeletedBy")
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTime?>("DeletedDate")
                        .HasColumnType("datetime2");

                    b.Property<string>("Fullname")
                        .HasColumnType("nvarchar(max)");

                    b.Property<bool>("IsDeleted")
                        .HasColumnType("bit");

                    b.Property<string>("MarriageCertificateReleasedBy")
                        .HasColumnType("nvarchar(max)");

                    b.Property<Guid?>("ModifiedBy")
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTime?>("ModifiedDate")
                        .HasColumnType("datetime2");

                    b.Property<string>("NoMarriageCertificate")
                        .HasMaxLength(15)
                        .HasColumnType("nvarchar(15)");

                    b.Property<string>("Occupation")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Phone")
                        .HasMaxLength(13)
                        .HasColumnType("nvarchar(13)");

                    b.Property<string>("PlaceOfBirth")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("Salary")
                        .HasColumnType("int");

                    b.HasKey("DebtorCoupleId");

                    b.ToTable("DebtorCouples");
                });

            modelBuilder.Entity("NewLMS.Data.Entities.DebtorEmergency", b =>
                {
                    b.Property<Guid>("DebtorEmergencyId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("Addres")
                        .HasColumnType("nvarchar(max)");

                    b.Property<Guid>("CreatedBy")
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTime>("CreatedDate")
                        .HasColumnType("datetime2");

                    b.Property<string>("DebtorId")
                        .HasMaxLength(16)
                        .HasColumnType("nvarchar(16)");

                    b.Property<string>("DebtorRelation")
                        .HasColumnType("nvarchar(max)");

                    b.Property<Guid?>("DeletedBy")
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTime?>("DeletedDate")
                        .HasColumnType("datetime2");

                    b.Property<string>("Fullname")
                        .HasColumnType("nvarchar(max)");

                    b.Property<bool>("IsDeleted")
                        .HasColumnType("bit");

                    b.Property<Guid?>("ModifiedBy")
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTime?>("ModifiedDate")
                        .HasColumnType("datetime2");

                    b.Property<string>("Neighborhoods")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Phone")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("PlaceOfBirth")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("RT")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("RW")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("RfZipCodeId")
                        .HasColumnType("int");

                    b.HasKey("DebtorEmergencyId");

                    b.HasIndex("DebtorId");

                    b.HasIndex("RfZipCodeId");

                    b.ToTable("DebtorEmergencies");
                });

            modelBuilder.Entity("NewLMS.Data.Entities.DebtorFinance", b =>
                {
                    b.Property<string>("DebtorFinanceId")
                        .HasMaxLength(16)
                        .HasColumnType("nvarchar(16)");

                    b.Property<string>("Address")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("BasicSallary")
                        .HasColumnType("int");

                    b.Property<int>("CertificationAllowance")
                        .HasColumnType("int");

                    b.Property<string>("CompanyId")
                        .HasColumnType("nvarchar(450)");

                    b.Property<Guid>("CreatedBy")
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTime>("CreatedDate")
                        .HasColumnType("datetime2");

                    b.Property<Guid?>("DeletedBy")
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTime?>("DeletedDate")
                        .HasColumnType("datetime2");

                    b.Property<bool>("IsDeleted")
                        .HasColumnType("bit");

                    b.Property<Guid?>("ModifiedBy")
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTime?>("ModifiedDate")
                        .HasColumnType("datetime2");

                    b.Property<string>("Neighborhoods")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("NetSalary")
                        .HasColumnType("int");

                    b.Property<string>("NoCandidateDecree")
                        .HasMaxLength(5)
                        .HasColumnType("nvarchar(5)");

                    b.Property<string>("NoEducationDecree")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("NoEmployeeDecree")
                        .HasMaxLength(5)
                        .HasColumnType("nvarchar(5)");

                    b.Property<string>("NoLastRankDecree")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("NoOtherDecree")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("NoPeriodicallyDecree")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("NoTaspenDecree")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Occupation")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("OfficePhone")
                        .HasColumnType("nvarchar(max)");

                    b.Property<bool>("PayrollInBjb")
                        .HasColumnType("bit");

                    b.Property<int>("PerformanceAllowance")
                        .HasColumnType("int");

                    b.Property<string>("RT")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("RW")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime?>("RetirementDate")
                        .HasColumnType("datetime2");

                    b.Property<int>("RfZipCodeId")
                        .HasColumnType("int");

                    b.Property<DateTime?>("StipulationDate")
                        .HasColumnType("datetime2");

                    b.HasKey("DebtorFinanceId");

                    b.HasIndex("CompanyId");

                    b.HasIndex("RfZipCodeId");

                    b.ToTable("DebtorFinance");
                });

            modelBuilder.Entity("NewLMS.Data.Entities.DownloadProspect", b =>
                {
                    b.Property<string>("AccountOfficer")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Address")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("Age")
                        .HasColumnType("int");

                    b.Property<string>("BookingBranch")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("BranchId")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("City")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("CompanyId")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime>("DateOfBirth")
                        .HasColumnType("datetime2");

                    b.Property<string>("District")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime?>("EstimateProcessDate")
                        .HasColumnType("datetime2");

                    b.Property<string>("Fullname")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("Gender")
                        .HasColumnType("int");

                    b.Property<int>("Length")
                        .HasColumnType("int");

                    b.Property<DateTime?>("MaturityDate")
                        .HasColumnType("datetime2");

                    b.Property<string>("MotherName")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Neighborhoods")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("NoIdentity")
                        .HasColumnType("nvarchar(max)");

                    b.Property<double?>("OUTSTANDING")
                        .HasColumnType("float");

                    b.Property<double?>("PLAFOND")
                        .HasColumnType("float");

                    b.Property<int>("Page")
                        .HasColumnType("int");

                    b.Property<string>("PhoneNumber")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("PlaceOfBirth")
                        .HasColumnType("nvarchar(max)");

                    b.Property<byte?>("ProcessStatus")
                        .HasColumnType("tinyint");

                    b.Property<string>("ProspectId")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Province")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("RfSectorLBU3Code")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Rt")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Rw")
                        .HasColumnType("nvarchar(max)");

                    b.Property<double?>("Sisa")
                        .HasColumnType("float");

                    b.Property<string>("SourceApplication")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Status")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("SubProductID")
                        .HasColumnType("nvarchar(max)");

                    b.Property<double?>("TargetPlafond")
                        .HasColumnType("float");

                    b.Property<int>("TotalData")
                        .HasColumnType("int");

                    b.Property<string>("ZipCode")
                        .HasColumnType("nvarchar(max)");

                    b.ToTable("DownloadProspects");
                });

            modelBuilder.Entity("NewLMS.Data.Entities.LoanApplication", b =>
                {
                    b.Property<string>("LoanApplicationId")
                        .HasMaxLength(20)
                        .HasColumnType("nvarchar(20)");

                    b.Property<string>("BankRelation")
                        .HasColumnType("nvarchar(max)");

                    b.Property<Guid>("CreatedBy")
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTime>("CreatedDate")
                        .HasColumnType("datetime2");

                    b.Property<string>("CreditStatus")
                        .HasColumnType("nvarchar(max)");

                    b.Property<Guid?>("DeletedBy")
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTime?>("DeletedDate")
                        .HasColumnType("datetime2");

                    b.Property<bool>("IsDeleted")
                        .HasColumnType("bit");

                    b.Property<Guid?>("ModifiedBy")
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTime?>("ModifiedDate")
                        .HasColumnType("datetime2");

                    b.Property<string>("ProspectId")
                        .IsRequired()
                        .HasMaxLength(20)
                        .HasColumnType("nvarchar(20)");

                    b.Property<string>("RfProgramId")
                        .HasColumnType("nvarchar(15)");

                    b.HasKey("LoanApplicationId");

                    b.HasIndex("ProspectId");

                    b.HasIndex("RfProgramId");

                    b.ToTable("LoanApplications");
                });

            modelBuilder.Entity("NewLMS.Data.Entities.LoanApplicationSubProgram", b =>
                {
                    b.Property<Guid>("LoanApplicationSubProgramId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<Guid>("CreatedBy")
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTime>("CreatedDate")
                        .HasColumnType("datetime2");

                    b.Property<Guid?>("DeletedBy")
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTime?>("DeletedDate")
                        .HasColumnType("datetime2");

                    b.Property<bool>("IsDeleted")
                        .HasColumnType("bit");

                    b.Property<string>("LoanApplicationId")
                        .HasMaxLength(20)
                        .HasColumnType("nvarchar(20)");

                    b.Property<Guid?>("ModifiedBy")
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTime?>("ModifiedDate")
                        .HasColumnType("datetime2");

                    b.Property<string>("SubProgramId")
                        .HasColumnType("nvarchar(15)");

                    b.HasKey("LoanApplicationSubProgramId");

                    b.HasIndex("LoanApplicationId");

                    b.HasIndex("SubProgramId");

                    b.ToTable("LoanApplicationSubProgram");
                });

            modelBuilder.Entity("NewLMS.Data.Entities.Prospect", b =>
                {
                    b.Property<string>("ProspectId")
                        .HasMaxLength(20)
                        .HasColumnType("nvarchar(20)");

                    b.Property<string>("AccountOfficer")
                        .HasMaxLength(20)
                        .HasColumnType("nvarchar(20)");

                    b.Property<string>("Address")
                        .HasMaxLength(450)
                        .HasColumnType("nvarchar(450)");

                    b.Property<string>("BookingBranch")
                        .HasMaxLength(10)
                        .HasColumnType("nvarchar(10)");

                    b.Property<string>("BranchId")
                        .HasMaxLength(4)
                        .HasColumnType("nvarchar(4)");

                    b.Property<string>("City")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<string>("CompanyId")
                        .HasColumnType("nvarchar(450)");

                    b.Property<Guid>("CreatedBy")
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTime>("CreatedDate")
                        .HasColumnType("datetime2");

                    b.Property<DateTime>("DateOfBirth")
                        .HasColumnType("datetime2");

                    b.Property<string>("DealRef")
                        .HasMaxLength(13)
                        .HasColumnType("nvarchar(13)");

                    b.Property<Guid?>("DeletedBy")
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTime?>("DeletedDate")
                        .HasColumnType("datetime2");

                    b.Property<string>("District")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<DateTime?>("EstimateProcessDate")
                        .HasColumnType("datetime2");

                    b.Property<string>("Fullname")
                        .HasMaxLength(80)
                        .HasColumnType("nvarchar(80)");

                    b.Property<int>("Gender")
                        .HasColumnType("int");

                    b.Property<bool>("IsDeleted")
                        .HasColumnType("bit");

                    b.Property<Guid?>("ModifiedBy")
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTime?>("ModifiedDate")
                        .HasColumnType("datetime2");

                    b.Property<string>("MotherName")
                        .HasMaxLength(80)
                        .HasColumnType("nvarchar(80)");

                    b.Property<string>("Neighborhoods")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<string>("NoHandphone")
                        .HasMaxLength(16)
                        .HasColumnType("nvarchar(16)");

                    b.Property<string>("NoIdentity")
                        .HasMaxLength(16)
                        .HasColumnType("nvarchar(16)");

                    b.Property<string>("PlaceOfBirth")
                        .HasColumnType("nvarchar(max)");

                    b.Property<byte>("ProcessStatus")
                        .HasMaxLength(4)
                        .HasColumnType("tinyint");

                    b.Property<string>("Province")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<string>("RfSectorLBU3Code")
                        .HasColumnType("nvarchar(450)");

                    b.Property<string>("Rt")
                        .HasMaxLength(3)
                        .HasColumnType("nvarchar(3)");

                    b.Property<string>("Rw")
                        .HasMaxLength(4)
                        .HasColumnType("nvarchar(4)");

                    b.Property<string>("SourceApplication")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<string>("SubProductId")
                        .HasColumnType("nvarchar(450)");

                    b.Property<double?>("TargetPladfond")
                        .HasColumnType("float");

                    b.Property<string>("ZipCode")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("ProspectId");

                    b.HasIndex("BranchId");

                    b.HasIndex("CompanyId");

                    b.HasIndex("NoIdentity");

                    b.HasIndex("RfSectorLBU3Code");

                    b.HasIndex("SubProductId");

                    b.ToTable("Prospects");
                });

            modelBuilder.Entity("NewLMS.Data.Entities.ReceivedFacility", b =>
                {
                    b.Property<string>("FacilityId")
                        .HasMaxLength(20)
                        .HasColumnType("nvarchar(20)");

                    b.Property<float>("AdministrationFee")
                        .HasColumnType("real");

                    b.Property<int>("ApprovedFacilityTotal")
                        .HasColumnType("int");

                    b.Property<Guid>("CreatedBy")
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTime>("CreatedDate")
                        .HasColumnType("datetime2");

                    b.Property<float>("CreditInterest")
                        .HasColumnType("real");

                    b.Property<string>("DealType")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("DebtorId")
                        .HasMaxLength(16)
                        .HasColumnType("nvarchar(16)");

                    b.Property<Guid?>("DeletedBy")
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTime?>("DeletedDate")
                        .HasColumnType("datetime2");

                    b.Property<float>("FloatingRate")
                        .HasColumnType("real");

                    b.Property<int>("InstallmentFee")
                        .HasColumnType("int");

                    b.Property<int>("InsuranceFee")
                        .HasColumnType("int");

                    b.Property<bool>("IsDeleted")
                        .HasColumnType("bit");

                    b.Property<string>("LoanStatus")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime>("MaturityDate")
                        .HasColumnType("datetime2");

                    b.Property<Guid?>("ModifiedBy")
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTime?>("ModifiedDate")
                        .HasColumnType("datetime2");

                    b.Property<int>("NotaryFee")
                        .HasColumnType("int");

                    b.Property<float>("OneMonthFloatingRate")
                        .HasColumnType("real");

                    b.Property<int>("Outstanding")
                        .HasColumnType("int");

                    b.Property<int>("Payment")
                        .HasColumnType("int");

                    b.Property<int>("Plafond")
                        .HasColumnType("int");

                    b.Property<int>("ProvisionFee")
                        .HasColumnType("int");

                    b.Property<int>("ReceivedFacilityTotal")
                        .HasColumnType("int");

                    b.Property<DateTime>("StartDate")
                        .HasColumnType("datetime2");

                    b.Property<int>("UnderlyingRemainder")
                        .HasColumnType("int");

                    b.HasKey("FacilityId");

                    b.HasIndex("DebtorId");

                    b.ToTable("ReceivedFacilities");
                });

            modelBuilder.Entity("NewLMS.Data.Entities.RfBranch", b =>
                {
                    b.Property<string>("Code")
                        .HasMaxLength(4)
                        .HasColumnType("nvarchar(4)");

                    b.Property<Guid>("CreatedBy")
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTime>("CreatedDate")
                        .HasColumnType("datetime2");

                    b.Property<string>("Dati")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<Guid?>("DeletedBy")
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTime?>("DeletedDate")
                        .HasColumnType("datetime2");

                    b.Property<string>("GroupBranch")
                        .HasMaxLength(4)
                        .HasColumnType("nvarchar(4)");

                    b.Property<bool>("IsDeleted")
                        .HasColumnType("bit");

                    b.Property<string>("Kanwil")
                        .HasMaxLength(4)
                        .HasColumnType("nvarchar(4)");

                    b.Property<string>("KanwilName")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<string>("KanwilOri")
                        .HasMaxLength(4)
                        .HasColumnType("nvarchar(4)");

                    b.Property<string>("Kc")
                        .HasMaxLength(4)
                        .HasColumnType("nvarchar(4)");

                    b.Property<string>("KcName")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<string>("Kcp")
                        .HasMaxLength(3)
                        .HasColumnType("nvarchar(3)");

                    b.Property<Guid?>("ModifiedBy")
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTime?>("ModifiedDate")
                        .HasColumnType("datetime2");

                    b.Property<string>("Name")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("OfficeType")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<string>("OriKanwilName")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<string>("Sandi")
                        .HasMaxLength(10)
                        .HasColumnType("nvarchar(10)");

                    b.HasKey("Code");

                    b.HasIndex("CreatedBy");

                    b.HasIndex("DeletedBy");

                    b.HasIndex("ModifiedBy");

                    b.ToTable("RfBranches");
                });

            modelBuilder.Entity("NewLMS.Data.Entities.RfCompany", b =>
                {
                    b.Property<string>("CompId")
                        .HasColumnType("nvarchar(450)");

                    b.Property<string>("Address")
                        .HasColumnType("nvarchar(max)");

                    b.Property<double>("Allowances")
                        .HasColumnType("float");

                    b.Property<string>("BranchId")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("City")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("CompName")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("CoreCode")
                        .HasColumnType("nvarchar(max)");

                    b.Property<Guid>("CreatedBy")
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTime>("CreatedDate")
                        .HasColumnType("datetime2");

                    b.Property<Guid?>("DeletedBy")
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTime?>("DeletedDate")
                        .HasColumnType("datetime2");

                    b.Property<string>("District")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Email")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("EscrowNo")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("FaxArea")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("FaxNumber")
                        .HasColumnType("nvarchar(max)");

                    b.Property<bool>("IsDeleted")
                        .HasColumnType("bit");

                    b.Property<double>("MaxLimit")
                        .HasColumnType("float");

                    b.Property<double>("MaxRpc")
                        .HasColumnType("float");

                    b.Property<int>("MaxTenor")
                        .HasColumnType("int");

                    b.Property<int>("MaximumYearBeforeRetirement")
                        .HasColumnType("int");

                    b.Property<Guid?>("ModifiedBy")
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTime?>("ModifiedDate")
                        .HasColumnType("datetime2");

                    b.Property<bool>("Mou")
                        .HasColumnType("bit");

                    b.Property<string>("Neighborhoods")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("PhoneArea")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("PhoneExt")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("PhoneNumber")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Province")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("RT")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("RW")
                        .HasColumnType("nvarchar(max)");

                    b.Property<bool>("RpcPortion")
                        .HasColumnType("bit");

                    b.Property<double>("Salaray")
                        .HasColumnType("float");

                    b.Property<string>("ZIPCode")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("CompId");

                    b.ToTable("RfCompanies");
                });

            modelBuilder.Entity("NewLMS.Data.Entities.RfInsurance", b =>
                {
                    b.Property<string>("CompId")
                        .HasMaxLength(20)
                        .HasColumnType("nvarchar(20)");

                    b.Property<bool>("Active")
                        .HasColumnType("bit");

                    b.Property<string>("Addr1")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Addr2")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Addr3")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("BankAccount")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("City")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("CompName")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("CompType")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("CoreId")
                        .HasColumnType("nvarchar(max)");

                    b.Property<Guid>("CreatedBy")
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTime>("CreatedDate")
                        .HasColumnType("datetime2");

                    b.Property<Guid?>("DeletedBy")
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTime?>("DeletedDate")
                        .HasColumnType("datetime2");

                    b.Property<string>("Email")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("FaxArea")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("FaxNum")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("FormulaId")
                        .HasColumnType("nvarchar(max)");

                    b.Property<bool>("IsDeleted")
                        .HasColumnType("bit");

                    b.Property<Guid?>("ModifiedBy")
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTime?>("ModifiedDate")
                        .HasColumnType("datetime2");

                    b.Property<string>("PhoneArea")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("PhoneExt")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("PhoneNum")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("RekFire")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("RekLife")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("ZipCode")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("CompId");

                    b.ToTable("RfInsurances");
                });

            modelBuilder.Entity("NewLMS.Data.Entities.RfInsuranceCoverage", b =>
                {
                    b.Property<string>("RiskCode")
                        .HasMaxLength(20)
                        .HasColumnType("nvarchar(20)");

                    b.Property<string>("Active")
                        .HasColumnType("nvarchar(max)");

                    b.Property<Guid>("CreatedBy")
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTime>("CreatedDate")
                        .HasColumnType("datetime2");

                    b.Property<Guid?>("DeletedBy")
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTime?>("DeletedDate")
                        .HasColumnType("datetime2");

                    b.Property<bool>("IsDeleted")
                        .HasColumnType("bit");

                    b.Property<Guid?>("ModifiedBy")
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTime?>("ModifiedDate")
                        .HasColumnType("datetime2");

                    b.Property<string>("RiskDesc")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("RiskCode");

                    b.ToTable("RfInsuranceCoverages");
                });

            modelBuilder.Entity("NewLMS.Data.Entities.RfParameter", b =>
                {
                    b.Property<int>("ParameterId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("ParameterId"), 1L, 1);

                    b.Property<bool>("Active")
                        .HasColumnType("bit");

                    b.Property<Guid>("CreatedBy")
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTime>("CreatedDate")
                        .HasColumnType("datetime2");

                    b.Property<Guid?>("DeletedBy")
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTime?>("DeletedDate")
                        .HasColumnType("datetime2");

                    b.Property<string>("Description")
                        .HasColumnType("nvarchar(max)");

                    b.Property<bool>("IsDeleted")
                        .HasColumnType("bit");

                    b.Property<Guid?>("ModifiedBy")
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTime?>("ModifiedDate")
                        .HasColumnType("datetime2");

                    b.Property<string>("Name")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("ParameterId");

                    b.ToTable("RfParameters");
                });

            modelBuilder.Entity("NewLMS.Data.Entities.RfParameterDetail", b =>
                {
                    b.Property<int>("ParameterDetailId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("ParameterDetailId"), 1L, 1);

                    b.Property<bool>("Active")
                        .HasColumnType("bit");

                    b.Property<string>("Code")
                        .HasColumnType("nvarchar(max)");

                    b.Property<Guid>("CreatedBy")
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTime>("CreatedDate")
                        .HasColumnType("datetime2");

                    b.Property<Guid?>("DeletedBy")
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTime?>("DeletedDate")
                        .HasColumnType("datetime2");

                    b.Property<string>("Description")
                        .HasColumnType("nvarchar(max)");

                    b.Property<bool>("IsDeleted")
                        .HasColumnType("bit");

                    b.Property<Guid?>("ModifiedBy")
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTime?>("ModifiedDate")
                        .HasColumnType("datetime2");

                    b.Property<string>("Name")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("Order")
                        .HasColumnType("int");

                    b.Property<int>("ParameterId")
                        .HasColumnType("int");

                    b.HasKey("ParameterDetailId");

                    b.HasIndex("ParameterId");

                    b.ToTable("RfParameterDetails");
                });

            modelBuilder.Entity("NewLMS.Data.Entities.RfPremi", b =>
                {
                    b.Property<string>("InsRateCode")
                        .HasMaxLength(20)
                        .HasColumnType("nvarchar(20)");

                    b.Property<bool>("Active")
                        .HasColumnType("bit");

                    b.Property<string>("AreaCode")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("BtsRiskCode")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("ColusiaCode")
                        .HasColumnType("nvarchar(max)");

                    b.Property<Guid>("CreatedBy")
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTime>("CreatedDate")
                        .HasColumnType("datetime2");

                    b.Property<int>("DebiturAge")
                        .HasColumnType("int");

                    b.Property<Guid?>("DeletedBy")
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTime?>("DeletedDate")
                        .HasColumnType("datetime2");

                    b.Property<float>("InsRate")
                        .HasColumnType("real");

                    b.Property<bool>("IsDeleted")
                        .HasColumnType("bit");

                    b.Property<string>("JobCode")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("KetreCode")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("KetvehCode")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("LoanType")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("MaxTenor")
                        .HasColumnType("int");

                    b.Property<float>("MaxTtg")
                        .HasColumnType("real");

                    b.Property<int>("MinTenor")
                        .HasColumnType("int");

                    b.Property<float>("MinTtg")
                        .HasColumnType("real");

                    b.Property<Guid?>("ModifiedBy")
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTime?>("ModifiedDate")
                        .HasColumnType("datetime2");

                    b.Property<string>("PurposeCode")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("RiskCode")
                        .HasMaxLength(20)
                        .HasColumnType("nvarchar(20)");

                    b.Property<string>("TplCode")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("ZoneCode")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("InsRateCode");

                    b.HasIndex("RiskCode");

                    b.ToTable("RfPremis");
                });

            modelBuilder.Entity("NewLMS.Data.Entities.RfProduct", b =>
                {
                    b.Property<string>("ProductId")
                        .HasColumnType("nvarchar(450)");

                    b.Property<int>("BlockParam")
                        .HasColumnType("int");

                    b.Property<string>("CoreCode")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("CoreProvCode")
                        .HasColumnType("nvarchar(max)");

                    b.Property<Guid>("CreatedBy")
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTime>("CreatedDate")
                        .HasColumnType("datetime2");

                    b.Property<double>("DefAdminFee")
                        .HasColumnType("float");

                    b.Property<double>("DefInterest")
                        .HasColumnType("float");

                    b.Property<double>("DefProvPctFee")
                        .HasColumnType("float");

                    b.Property<double>("DefSpread")
                        .HasColumnType("float");

                    b.Property<int>("DefTenor")
                        .HasColumnType("int");

                    b.Property<string>("DefintType")
                        .HasColumnType("nvarchar(max)");

                    b.Property<Guid?>("DeletedBy")
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTime?>("DeletedDate")
                        .HasColumnType("datetime2");

                    b.Property<string>("Description")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Division")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<bool>("IsDeleted")
                        .HasColumnType("bit");

                    b.Property<double>("LimitColumnReq")
                        .HasColumnType("float");

                    b.Property<int>("MaxAge")
                        .HasColumnType("int");

                    b.Property<double>("MaxInterest")
                        .HasColumnType("float");

                    b.Property<double>("MaxLimit")
                        .HasColumnType("float");

                    b.Property<double>("MaxProvPctFee")
                        .HasColumnType("float");

                    b.Property<int>("MaxRpc")
                        .HasColumnType("int");

                    b.Property<int>("MaxTenor")
                        .HasColumnType("int");

                    b.Property<double>("MinInterest")
                        .HasColumnType("float");

                    b.Property<Guid?>("ModifiedBy")
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTime?>("ModifiedDate")
                        .HasColumnType("datetime2");

                    b.Property<double>("PenaltyPSJT")
                        .HasColumnType("float");

                    b.Property<double>("PenaltyTopup")
                        .HasColumnType("float");

                    b.Property<string>("Type")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("ProductId");

                    b.ToTable("RfProducts");
                });

            modelBuilder.Entity("NewLMS.Data.Entities.RfProgram", b =>
                {
                    b.Property<string>("ProgramId")
                        .HasMaxLength(15)
                        .HasColumnType("nvarchar(15)");

                    b.Property<bool>("Active")
                        .HasColumnType("bit");

                    b.Property<string>("CoreCode")
                        .HasColumnType("nvarchar(max)");

                    b.Property<Guid>("CreatedBy")
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTime>("CreatedDate")
                        .HasColumnType("datetime2");

                    b.Property<float>("DefProvPctFee")
                        .HasColumnType("real");

                    b.Property<Guid?>("DeletedBy")
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTime?>("DeletedDate")
                        .HasColumnType("datetime2");

                    b.Property<string>("Description")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime>("EndDate")
                        .HasColumnType("datetime2");

                    b.Property<bool>("IsDeleted")
                        .HasColumnType("bit");

                    b.Property<double>("MaxProvPctFee")
                        .HasColumnType("float");

                    b.Property<Guid?>("ModifiedBy")
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTime?>("ModifiedDate")
                        .HasColumnType("datetime2");

                    b.Property<bool>("RepaymentDisc")
                        .HasColumnType("bit");

                    b.Property<DateTime>("StartDate")
                        .HasColumnType("datetime2");

                    b.HasKey("ProgramId");

                    b.ToTable("RfPrograms");
                });

            modelBuilder.Entity("NewLMS.Data.Entities.RfSectorLBU1", b =>
                {
                    b.Property<string>("Code")
                        .HasColumnType("nvarchar(450)");

                    b.Property<string>("CoreCode")
                        .HasColumnType("nvarchar(max)");

                    b.Property<Guid>("CreatedBy")
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTime>("CreatedDate")
                        .HasColumnType("datetime2");

                    b.Property<Guid?>("DeletedBy")
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTime?>("DeletedDate")
                        .HasColumnType("datetime2");

                    b.Property<string>("Description")
                        .HasColumnType("nvarchar(max)");

                    b.Property<bool>("IsDeleted")
                        .HasColumnType("bit");

                    b.Property<Guid?>("ModifiedBy")
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTime?>("ModifiedDate")
                        .HasColumnType("datetime2");

                    b.HasKey("Code");

                    b.ToTable("RfSectorLBU1s");
                });

            modelBuilder.Entity("NewLMS.Data.Entities.RfSectorLBU2", b =>
                {
                    b.Property<string>("Code")
                        .HasColumnType("nvarchar(450)");

                    b.Property<string>("CoreCode")
                        .HasColumnType("nvarchar(max)");

                    b.Property<Guid>("CreatedBy")
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTime>("CreatedDate")
                        .HasColumnType("datetime2");

                    b.Property<Guid?>("DeletedBy")
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTime?>("DeletedDate")
                        .HasColumnType("datetime2");

                    b.Property<string>("Description")
                        .HasColumnType("nvarchar(max)");

                    b.Property<bool>("IsDeleted")
                        .HasColumnType("bit");

                    b.Property<string>("LBCode1")
                        .HasColumnType("nvarchar(max)");

                    b.Property<Guid?>("ModifiedBy")
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTime?>("ModifiedDate")
                        .HasColumnType("datetime2");

                    b.Property<string>("RfSectorLBU1Code")
                        .HasColumnType("nvarchar(450)");

                    b.HasKey("Code");

                    b.HasIndex("RfSectorLBU1Code");

                    b.ToTable("RfSectorLBU2s");
                });

            modelBuilder.Entity("NewLMS.Data.Entities.RfSectorLBU3", b =>
                {
                    b.Property<string>("Code")
                        .HasColumnType("nvarchar(450)");

                    b.Property<string>("CategoryCode")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("CoreCode")
                        .HasColumnType("nvarchar(max)");

                    b.Property<Guid>("CreatedBy")
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTime>("CreatedDate")
                        .HasColumnType("datetime2");

                    b.Property<Guid?>("DeletedBy")
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTime?>("DeletedDate")
                        .HasColumnType("datetime2");

                    b.Property<string>("Description")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("Group")
                        .HasColumnType("int");

                    b.Property<bool>("IsDeleted")
                        .HasColumnType("bit");

                    b.Property<string>("LBCode2")
                        .HasColumnType("nvarchar(max)");

                    b.Property<Guid?>("ModifiedBy")
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTime?>("ModifiedDate")
                        .HasColumnType("datetime2");

                    b.Property<string>("RfSectorLBU2Code")
                        .HasColumnType("nvarchar(450)");

                    b.Property<string>("Type")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Code");

                    b.HasIndex("RfSectorLBU2Code");

                    b.ToTable("RfSectorLBU3s");
                });

            modelBuilder.Entity("NewLMS.Data.Entities.RfSubProduct", b =>
                {
                    b.Property<string>("SubProductId")
                        .HasColumnType("nvarchar(450)");

                    b.Property<bool>("BjbMusisi")
                        .HasColumnType("bit");

                    b.Property<int>("BlockParam")
                        .HasColumnType("int");

                    b.Property<string>("CoreCode")
                        .HasColumnType("nvarchar(max)");

                    b.Property<Guid>("CreatedBy")
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTime>("CreatedDate")
                        .HasColumnType("datetime2");

                    b.Property<double>("DefAdmPcmFee")
                        .HasColumnType("float");

                    b.Property<string>("DefIntType")
                        .HasColumnType("nvarchar(max)");

                    b.Property<double>("DefProvPctFee")
                        .HasColumnType("float");

                    b.Property<string>("DefpayCode")
                        .HasColumnType("nvarchar(max)");

                    b.Property<Guid?>("DeletedBy")
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTime?>("DeletedDate")
                        .HasColumnType("datetime2");

                    b.Property<string>("Description")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("DivisionCode")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("GracePeriod")
                        .HasColumnType("int");

                    b.Property<bool>("IsDeleted")
                        .HasColumnType("bit");

                    b.Property<double>("MaxPlanfond")
                        .HasColumnType("float");

                    b.Property<double>("MaxProvPctFee")
                        .HasColumnType("float");

                    b.Property<int>("MaximumMonthBeforeRetirement")
                        .HasColumnType("int");

                    b.Property<int>("MaximumYearBeforeRetirement")
                        .HasColumnType("int");

                    b.Property<Guid?>("ModifiedBy")
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTime?>("ModifiedDate")
                        .HasColumnType("datetime2");

                    b.Property<string>("Payroll")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("ProductId")
                        .HasColumnType("nvarchar(450)");

                    b.Property<string>("SchemaMaxInstallment")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("TplSurveyCode")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("SubProductId");

                    b.HasIndex("ProductId");

                    b.ToTable("RfSubProducts");
                });

            modelBuilder.Entity("NewLMS.Data.Entities.RfSubProgram", b =>
                {
                    b.Property<string>("SubProgramId")
                        .HasMaxLength(15)
                        .HasColumnType("nvarchar(15)");

                    b.Property<Guid>("CreatedBy")
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTime>("CreatedDate")
                        .HasColumnType("datetime2");

                    b.Property<Guid?>("DeletedBy")
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTime?>("DeletedDate")
                        .HasColumnType("datetime2");

                    b.Property<string>("Description")
                        .HasColumnType("nvarchar(max)");

                    b.Property<bool>("IsDeleted")
                        .HasColumnType("bit");

                    b.Property<Guid?>("ModifiedBy")
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTime?>("ModifiedDate")
                        .HasColumnType("datetime2");

                    b.Property<string>("ProgramId")
                        .HasColumnType("nvarchar(15)");

                    b.HasKey("SubProgramId");

                    b.HasIndex("ProgramId");

                    b.ToTable("RfSubPrograms");
                });

            modelBuilder.Entity("NewLMS.Data.Entities.RfZipCode", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"), 1L, 1);

                    b.Property<bool>("Active")
                        .HasColumnType("bit");

                    b.Property<Guid>("CreatedBy")
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTime>("CreatedDate")
                        .HasColumnType("datetime2");

                    b.Property<string>("Dati_II")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Dati_II_Code")
                        .HasColumnType("nvarchar(max)");

                    b.Property<Guid?>("DeletedBy")
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTime?>("DeletedDate")
                        .HasColumnType("datetime2");

                    b.Property<bool>("IsDeleted")
                        .HasColumnType("bit");

                    b.Property<string>("Kecamatan")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Kelurahan")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("KodeKabKota")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("KodeKabupaten")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("KodeKecamatan")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("KodeKelurahan")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("KodeProvinsi")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Kota")
                        .HasColumnType("nvarchar(max)");

                    b.Property<Guid?>("ModifiedBy")
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTime?>("ModifiedDate")
                        .HasColumnType("datetime2");

                    b.Property<string>("Negara")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Provinsi")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("SandiWilayahBI")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("Seq")
                        .HasColumnType("int");

                    b.Property<string>("ZipCode")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("ZipDesc")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.ToTable("RfZipCodes");
                });

            modelBuilder.Entity("NewLMS.Data.Entities.SubmittedFacility", b =>
                {
                    b.Property<string>("SubmittedFacilityId")
                        .HasMaxLength(20)
                        .HasColumnType("nvarchar(20)");

                    b.Property<string>("BindingMethod")
                        .HasColumnType("nvarchar(max)");

                    b.Property<Guid>("CreatedBy")
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTime>("CreatedDate")
                        .HasColumnType("datetime2");

                    b.Property<string>("CreditPurpose")
                        .HasColumnType("nvarchar(max)");

                    b.Property<Guid?>("DeletedBy")
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTime?>("DeletedDate")
                        .HasColumnType("datetime2");

                    b.Property<string>("FacilityPurpose")
                        .HasColumnType("nvarchar(max)");

                    b.Property<float>("Interest")
                        .HasColumnType("real");

                    b.Property<float>("InterestSpread")
                        .HasColumnType("real");

                    b.Property<float>("InterestTotal")
                        .HasColumnType("real");

                    b.Property<string>("InterestType")
                        .HasColumnType("nvarchar(max)");

                    b.Property<bool>("IsDeleted")
                        .HasColumnType("bit");

                    b.Property<int>("LoanTerm")
                        .HasColumnType("int");

                    b.Property<int>("MaximumPlafond")
                        .HasColumnType("int");

                    b.Property<Guid?>("ModifiedBy")
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTime?>("ModifiedDate")
                        .HasColumnType("datetime2");

                    b.Property<int>("MonthlyInstallment")
                        .HasColumnType("int");

                    b.Property<string>("PaymentPlan")
                        .HasColumnType("nvarchar(max)");

                    b.Property<float>("RPC")
                        .HasColumnType("real");

                    b.Property<string>("SubmissionType")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("SubmittedPlafond")
                        .HasColumnType("int");

                    b.HasKey("SubmittedFacilityId");

                    b.ToTable("SubmittedFacilities");
                });

            modelBuilder.Entity("NewLMS.Data.LoginAudit", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("Latitude")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<DateTime>("LoginTime")
                        .HasColumnType("datetime2");

                    b.Property<string>("Longitude")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<string>("Provider")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("RemoteIP")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<string>("Status")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("UserName")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.ToTable("LoginAudits");
                });

            modelBuilder.Entity("NewLMS.Data.NLog", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("Callsite")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Exception")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Level")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime>("Logged")
                        .HasColumnType("datetime2");

                    b.Property<string>("Logger")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("MachineName")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Message")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Properties")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Source")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.HasKey("Id");

                    b.ToTable("NLog");
                });

            modelBuilder.Entity("NewLMS.Data.Page", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<Guid>("CreatedBy")
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTime>("CreatedDate")
                        .HasColumnType("datetime2");

                    b.Property<Guid?>("DeletedBy")
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTime?>("DeletedDate")
                        .HasColumnType("datetime2");

                    b.Property<bool>("IsDeleted")
                        .HasColumnType("bit");

                    b.Property<Guid?>("ModifiedBy")
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTime?>("ModifiedDate")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("datetime2")
                        .HasDefaultValueSql("getdate()");

                    b.Property<string>("Name")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Url")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.HasIndex("CreatedBy");

                    b.HasIndex("DeletedBy");

                    b.HasIndex("ModifiedBy");

                    b.ToTable("Pages");
                });

            modelBuilder.Entity("NewLMS.Data.PageAction", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<Guid>("ActionId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<Guid>("CreatedBy")
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTime>("CreatedDate")
                        .HasColumnType("datetime2");

                    b.Property<Guid?>("DeletedBy")
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTime?>("DeletedDate")
                        .HasColumnType("datetime2");

                    b.Property<bool>("IsDeleted")
                        .HasColumnType("bit");

                    b.Property<Guid?>("ModifiedBy")
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTime?>("ModifiedDate")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("datetime2")
                        .HasDefaultValueSql("getdate()");

                    b.Property<Guid>("PageId")
                        .HasColumnType("uniqueidentifier");

                    b.HasKey("Id");

                    b.HasIndex("ActionId");

                    b.HasIndex("CreatedBy");

                    b.HasIndex("DeletedBy");

                    b.HasIndex("ModifiedBy");

                    b.HasIndex("PageId");

                    b.ToTable("PageActions");
                });

            modelBuilder.Entity("NewLMS.Data.Role", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("ConcurrencyStamp")
                        .IsConcurrencyToken()
                        .HasColumnType("nvarchar(max)");

                    b.Property<Guid?>("CreatedBy")
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTime>("CreatedDate")
                        .HasColumnType("datetime2");

                    b.Property<Guid?>("DeletedBy")
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTime?>("DeletedDate")
                        .HasColumnType("datetime2");

                    b.Property<bool>("IsDeleted")
                        .HasColumnType("bit");

                    b.Property<Guid>("ModifiedBy")
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTime>("ModifiedDate")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("datetime2")
                        .HasDefaultValueSql("getdate()");

                    b.Property<string>("Name")
                        .HasMaxLength(256)
                        .HasColumnType("nvarchar(256)");

                    b.Property<string>("NormalizedName")
                        .HasMaxLength(256)
                        .HasColumnType("nvarchar(256)");

                    b.HasKey("Id");

                    b.HasIndex("CreatedBy");

                    b.HasIndex("DeletedBy");

                    b.HasIndex("ModifiedBy");

                    b.HasIndex("NormalizedName")
                        .IsUnique()
                        .HasDatabaseName("RoleNameIndex")
                        .HasFilter("[NormalizedName] IS NOT NULL");

                    b.ToTable("Roles", (string)null);
                });

            modelBuilder.Entity("NewLMS.Data.RoleClaim", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"), 1L, 1);

                    b.Property<Guid>("ActionId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("ClaimType")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("ClaimValue")
                        .HasColumnType("nvarchar(max)");

                    b.Property<Guid>("PageId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<Guid>("RoleId")
                        .HasColumnType("uniqueidentifier");

                    b.HasKey("Id");

                    b.HasIndex("ActionId");

                    b.HasIndex("PageId");

                    b.HasIndex("RoleId");

                    b.ToTable("RoleClaims", (string)null);
                });

            modelBuilder.Entity("NewLMS.Data.User", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<int>("AccessFailedCount")
                        .HasColumnType("int");

                    b.Property<string>("Address")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("ConcurrencyStamp")
                        .IsConcurrencyToken()
                        .HasColumnType("nvarchar(max)");

                    b.Property<Guid?>("CreatedBy")
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTime>("CreatedDate")
                        .HasColumnType("datetime2");

                    b.Property<Guid?>("DeletedBy")
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTime?>("DeletedDate")
                        .HasColumnType("datetime2");

                    b.Property<string>("Email")
                        .HasMaxLength(256)
                        .HasColumnType("nvarchar(256)");

                    b.Property<bool>("EmailConfirmed")
                        .HasColumnType("bit");

                    b.Property<string>("FirstName")
                        .HasColumnType("nvarchar(max)");

                    b.Property<bool>("IsActive")
                        .HasColumnType("bit");

                    b.Property<bool>("IsDeleted")
                        .HasColumnType("bit");

                    b.Property<string>("LastName")
                        .HasColumnType("nvarchar(max)");

                    b.Property<bool>("LockoutEnabled")
                        .HasColumnType("bit");

                    b.Property<DateTimeOffset?>("LockoutEnd")
                        .HasColumnType("datetimeoffset");

                    b.Property<Guid?>("ModifiedBy")
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTime>("ModifiedDate")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("datetime2")
                        .HasDefaultValueSql("getdate()");

                    b.Property<string>("NormalizedEmail")
                        .HasMaxLength(256)
                        .HasColumnType("nvarchar(256)");

                    b.Property<string>("NormalizedUserName")
                        .HasMaxLength(256)
                        .HasColumnType("nvarchar(256)");

                    b.Property<string>("PasswordHash")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("PhoneNumber")
                        .HasColumnType("nvarchar(max)");

                    b.Property<bool>("PhoneNumberConfirmed")
                        .HasColumnType("bit");

                    b.Property<string>("ProfilePhoto")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Provider")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("SecurityStamp")
                        .HasColumnType("nvarchar(max)");

                    b.Property<bool>("TwoFactorEnabled")
                        .HasColumnType("bit");

                    b.Property<string>("UserName")
                        .HasMaxLength(256)
                        .HasColumnType("nvarchar(256)");

                    b.HasKey("Id");

                    b.HasIndex("NormalizedEmail")
                        .HasDatabaseName("EmailIndex");

                    b.HasIndex("NormalizedUserName")
                        .IsUnique()
                        .HasDatabaseName("UserNameIndex")
                        .HasFilter("[NormalizedUserName] IS NOT NULL");

                    b.ToTable("Users", (string)null);
                });

            modelBuilder.Entity("NewLMS.Data.UserAllowedIP", b =>
                {
                    b.Property<Guid>("UserId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("IPAddress")
                        .HasColumnType("nvarchar(450)");

                    b.HasKey("UserId", "IPAddress");

                    b.ToTable("UserAllowedIPs");
                });

            modelBuilder.Entity("NewLMS.Data.UserClaim", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"), 1L, 1);

                    b.Property<Guid>("ActionId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("ClaimType")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("ClaimValue")
                        .HasColumnType("nvarchar(max)");

                    b.Property<Guid>("PageId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<Guid>("UserId")
                        .HasColumnType("uniqueidentifier");

                    b.HasKey("Id");

                    b.HasIndex("ActionId");

                    b.HasIndex("PageId");

                    b.HasIndex("UserId");

                    b.ToTable("UserClaims", (string)null);
                });

            modelBuilder.Entity("NewLMS.Data.UserLogin", b =>
                {
                    b.Property<string>("LoginProvider")
                        .HasColumnType("nvarchar(450)");

                    b.Property<string>("ProviderKey")
                        .HasColumnType("nvarchar(450)");

                    b.Property<string>("ProviderDisplayName")
                        .HasColumnType("nvarchar(max)");

                    b.Property<Guid>("UserId")
                        .HasColumnType("uniqueidentifier");

                    b.HasKey("LoginProvider", "ProviderKey");

                    b.HasIndex("UserId");

                    b.ToTable("UserLogins", (string)null);
                });

            modelBuilder.Entity("NewLMS.Data.UserRole", b =>
                {
                    b.Property<Guid>("UserId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<Guid>("RoleId")
                        .HasColumnType("uniqueidentifier");

                    b.HasKey("UserId", "RoleId");

                    b.HasIndex("RoleId");

                    b.ToTable("UserRoles", (string)null);
                });

            modelBuilder.Entity("NewLMS.Data.UserToken", b =>
                {
                    b.Property<Guid>("UserId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("LoginProvider")
                        .HasColumnType("nvarchar(450)");

                    b.Property<string>("Name")
                        .HasColumnType("nvarchar(450)");

                    b.Property<string>("Value")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("UserId", "LoginProvider", "Name");

                    b.ToTable("UserTokens", (string)null);
                });

            modelBuilder.Entity("NewLMS.Data.Action", b =>
                {
                    b.HasOne("NewLMS.Data.User", "CreatedByUser")
                        .WithMany()
                        .HasForeignKey("CreatedBy")
                        .OnDelete(DeleteBehavior.NoAction)
                        .IsRequired();

                    b.HasOne("NewLMS.Data.User", "DeletedByUser")
                        .WithMany()
                        .HasForeignKey("DeletedBy")
                        .OnDelete(DeleteBehavior.NoAction);

                    b.HasOne("NewLMS.Data.User", "ModifiedByUser")
                        .WithMany()
                        .HasForeignKey("ModifiedBy")
                        .OnDelete(DeleteBehavior.NoAction);

                    b.Navigation("CreatedByUser");

                    b.Navigation("DeletedByUser");

                    b.Navigation("ModifiedByUser");
                });

            modelBuilder.Entity("NewLMS.Data.EmailSMTPSetting", b =>
                {
                    b.HasOne("NewLMS.Data.User", "CreatedByUser")
                        .WithMany()
                        .HasForeignKey("CreatedBy")
                        .OnDelete(DeleteBehavior.NoAction)
                        .IsRequired();

                    b.HasOne("NewLMS.Data.User", "DeletedByUser")
                        .WithMany()
                        .HasForeignKey("DeletedBy")
                        .OnDelete(DeleteBehavior.NoAction);

                    b.HasOne("NewLMS.Data.User", "ModifiedByUser")
                        .WithMany()
                        .HasForeignKey("ModifiedBy")
                        .OnDelete(DeleteBehavior.NoAction);

                    b.Navigation("CreatedByUser");

                    b.Navigation("DeletedByUser");

                    b.Navigation("ModifiedByUser");
                });

            modelBuilder.Entity("NewLMS.Data.Entities.Debtor", b =>
                {
                    b.HasOne("NewLMS.Data.Entities.RfZipCode", "RfZipCode")
                        .WithMany()
                        .HasForeignKey("RfZipCodeId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("RfZipCode");
                });

            modelBuilder.Entity("NewLMS.Data.Entities.DebtorCollateral", b =>
                {
                    b.HasOne("NewLMS.Data.Entities.Debtor", "Debtor")
                        .WithMany("DebtorCollaterals")
                        .HasForeignKey("DebtorId");

                    b.Navigation("Debtor");
                });

            modelBuilder.Entity("NewLMS.Data.Entities.DebtorCouple", b =>
                {
                    b.HasOne("NewLMS.Data.Entities.Debtor", "Debtor")
                        .WithOne("DebtorCouple")
                        .HasForeignKey("NewLMS.Data.Entities.DebtorCouple", "DebtorCoupleId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Debtor");
                });

            modelBuilder.Entity("NewLMS.Data.Entities.DebtorEmergency", b =>
                {
                    b.HasOne("NewLMS.Data.Entities.Debtor", "Debtor")
                        .WithMany("Emergency")
                        .HasForeignKey("DebtorId");

                    b.HasOne("NewLMS.Data.Entities.RfZipCode", "RfZipCode")
                        .WithMany()
                        .HasForeignKey("RfZipCodeId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Debtor");

                    b.Navigation("RfZipCode");
                });

            modelBuilder.Entity("NewLMS.Data.Entities.DebtorFinance", b =>
                {
                    b.HasOne("NewLMS.Data.Entities.RfCompany", "Company")
                        .WithMany()
                        .HasForeignKey("CompanyId");

                    b.HasOne("NewLMS.Data.Entities.Debtor", "Debtor")
                        .WithOne("DebtorFinance")
                        .HasForeignKey("NewLMS.Data.Entities.DebtorFinance", "DebtorFinanceId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("NewLMS.Data.Entities.RfZipCode", "RfZipCode")
                        .WithMany()
                        .HasForeignKey("RfZipCodeId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Company");

                    b.Navigation("Debtor");

                    b.Navigation("RfZipCode");
                });

            modelBuilder.Entity("NewLMS.Data.Entities.LoanApplication", b =>
                {
                    b.HasOne("NewLMS.Data.Entities.Prospect", "Prospect")
                        .WithMany()
                        .HasForeignKey("ProspectId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("NewLMS.Data.Entities.RfProgram", "RfProgram")
                        .WithMany("LoanApplications")
                        .HasForeignKey("RfProgramId");

                    b.Navigation("Prospect");

                    b.Navigation("RfProgram");
                });

            modelBuilder.Entity("NewLMS.Data.Entities.LoanApplicationSubProgram", b =>
                {
                    b.HasOne("NewLMS.Data.Entities.LoanApplication", "LoanApplications")
                        .WithMany()
                        .HasForeignKey("LoanApplicationId");

                    b.HasOne("NewLMS.Data.Entities.RfSubProgram", "SubPrograms")
                        .WithMany("LoanApplicationSubPrograms")
                        .HasForeignKey("SubProgramId");

                    b.Navigation("LoanApplications");

                    b.Navigation("SubPrograms");
                });

            modelBuilder.Entity("NewLMS.Data.Entities.Prospect", b =>
                {
                    b.HasOne("NewLMS.Data.Entities.RfBranch", "Branch")
                        .WithMany()
                        .HasForeignKey("BranchId");

                    b.HasOne("NewLMS.Data.Entities.RfCompany", "Company")
                        .WithMany("Prospects")
                        .HasForeignKey("CompanyId");

                    b.HasOne("NewLMS.Data.Entities.Debtor", "Debtor")
                        .WithMany()
                        .HasForeignKey("NoIdentity");

                    b.HasOne("NewLMS.Data.Entities.RfSectorLBU3", "RfSectorLBU3")
                        .WithMany("Prospects")
                        .HasForeignKey("RfSectorLBU3Code");

                    b.HasOne("NewLMS.Data.Entities.RfSubProduct", "SubProduct")
                        .WithMany("Prospects")
                        .HasForeignKey("SubProductId");

                    b.Navigation("Branch");

                    b.Navigation("Company");

                    b.Navigation("Debtor");

                    b.Navigation("RfSectorLBU3");

                    b.Navigation("SubProduct");
                });

            modelBuilder.Entity("NewLMS.Data.Entities.ReceivedFacility", b =>
                {
                    b.HasOne("NewLMS.Data.Entities.Debtor", "Debtor")
                        .WithMany("ReceivedFacilities")
                        .HasForeignKey("DebtorId");

                    b.HasOne("NewLMS.Data.Entities.LoanApplication", "LoanApplication")
                        .WithOne("ReceivedFacility")
                        .HasForeignKey("NewLMS.Data.Entities.ReceivedFacility", "FacilityId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Debtor");

                    b.Navigation("LoanApplication");
                });

            modelBuilder.Entity("NewLMS.Data.Entities.RfBranch", b =>
                {
                    b.HasOne("NewLMS.Data.User", "CreatedByUser")
                        .WithMany()
                        .HasForeignKey("CreatedBy")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("NewLMS.Data.User", "DeletedByUser")
                        .WithMany()
                        .HasForeignKey("DeletedBy");

                    b.HasOne("NewLMS.Data.User", "ModifiedByUser")
                        .WithMany()
                        .HasForeignKey("ModifiedBy");

                    b.Navigation("CreatedByUser");

                    b.Navigation("DeletedByUser");

                    b.Navigation("ModifiedByUser");
                });

            modelBuilder.Entity("NewLMS.Data.Entities.RfParameterDetail", b =>
                {
                    b.HasOne("NewLMS.Data.Entities.RfParameter", "RfParameter")
                        .WithMany("RfParameterDetails")
                        .HasForeignKey("ParameterId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("RfParameter");
                });

            modelBuilder.Entity("NewLMS.Data.Entities.RfPremi", b =>
                {
                    b.HasOne("NewLMS.Data.Entities.RfInsuranceCoverage", "RfInsuranceCoverage")
                        .WithMany()
                        .HasForeignKey("RiskCode");

                    b.Navigation("RfInsuranceCoverage");
                });

            modelBuilder.Entity("NewLMS.Data.Entities.RfSectorLBU2", b =>
                {
                    b.HasOne("NewLMS.Data.Entities.RfSectorLBU1", "RfSectorLBU1")
                        .WithMany("RfSectorLBU2s")
                        .HasForeignKey("RfSectorLBU1Code");

                    b.Navigation("RfSectorLBU1");
                });

            modelBuilder.Entity("NewLMS.Data.Entities.RfSectorLBU3", b =>
                {
                    b.HasOne("NewLMS.Data.Entities.RfSectorLBU2", "RfSectorLBU2")
                        .WithMany("RfSectorLBU3s")
                        .HasForeignKey("RfSectorLBU2Code");

                    b.Navigation("RfSectorLBU2");
                });

            modelBuilder.Entity("NewLMS.Data.Entities.RfSubProduct", b =>
                {
                    b.HasOne("NewLMS.Data.Entities.RfProduct", "Product")
                        .WithMany("RfSubProducts")
                        .HasForeignKey("ProductId");

                    b.Navigation("Product");
                });

            modelBuilder.Entity("NewLMS.Data.Entities.RfSubProgram", b =>
                {
                    b.HasOne("NewLMS.Data.Entities.RfProgram", "Program")
                        .WithMany()
                        .HasForeignKey("ProgramId");

                    b.Navigation("Program");
                });

            modelBuilder.Entity("NewLMS.Data.Entities.SubmittedFacility", b =>
                {
                    b.HasOne("NewLMS.Data.Entities.LoanApplication", "LoanApplication")
                        .WithOne("SubmittedFacility")
                        .HasForeignKey("NewLMS.Data.Entities.SubmittedFacility", "SubmittedFacilityId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("LoanApplication");
                });

            modelBuilder.Entity("NewLMS.Data.Page", b =>
                {
                    b.HasOne("NewLMS.Data.User", "CreatedByUser")
                        .WithMany()
                        .HasForeignKey("CreatedBy")
                        .OnDelete(DeleteBehavior.NoAction)
                        .IsRequired();

                    b.HasOne("NewLMS.Data.User", "DeletedByUser")
                        .WithMany()
                        .HasForeignKey("DeletedBy")
                        .OnDelete(DeleteBehavior.NoAction);

                    b.HasOne("NewLMS.Data.User", "ModifiedByUser")
                        .WithMany()
                        .HasForeignKey("ModifiedBy")
                        .OnDelete(DeleteBehavior.NoAction);

                    b.Navigation("CreatedByUser");

                    b.Navigation("DeletedByUser");

                    b.Navigation("ModifiedByUser");
                });

            modelBuilder.Entity("NewLMS.Data.PageAction", b =>
                {
                    b.HasOne("NewLMS.Data.Action", "Action")
                        .WithMany()
                        .HasForeignKey("ActionId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("NewLMS.Data.User", "CreatedByUser")
                        .WithMany()
                        .HasForeignKey("CreatedBy")
                        .OnDelete(DeleteBehavior.NoAction)
                        .IsRequired();

                    b.HasOne("NewLMS.Data.User", "DeletedByUser")
                        .WithMany()
                        .HasForeignKey("DeletedBy")
                        .OnDelete(DeleteBehavior.NoAction);

                    b.HasOne("NewLMS.Data.User", "ModifiedByUser")
                        .WithMany()
                        .HasForeignKey("ModifiedBy")
                        .OnDelete(DeleteBehavior.NoAction);

                    b.HasOne("NewLMS.Data.Page", "Page")
                        .WithMany()
                        .HasForeignKey("PageId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Action");

                    b.Navigation("CreatedByUser");

                    b.Navigation("DeletedByUser");

                    b.Navigation("ModifiedByUser");

                    b.Navigation("Page");
                });

            modelBuilder.Entity("NewLMS.Data.Role", b =>
                {
                    b.HasOne("NewLMS.Data.User", "CreatedByUser")
                        .WithMany()
                        .HasForeignKey("CreatedBy")
                        .OnDelete(DeleteBehavior.NoAction);

                    b.HasOne("NewLMS.Data.User", "DeletedByUser")
                        .WithMany()
                        .HasForeignKey("DeletedBy")
                        .OnDelete(DeleteBehavior.NoAction);

                    b.HasOne("NewLMS.Data.User", "ModifiedByUser")
                        .WithMany()
                        .HasForeignKey("ModifiedBy")
                        .OnDelete(DeleteBehavior.NoAction)
                        .IsRequired();

                    b.Navigation("CreatedByUser");

                    b.Navigation("DeletedByUser");

                    b.Navigation("ModifiedByUser");
                });

            modelBuilder.Entity("NewLMS.Data.RoleClaim", b =>
                {
                    b.HasOne("NewLMS.Data.Action", "Action")
                        .WithMany()
                        .HasForeignKey("ActionId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("NewLMS.Data.Page", "Page")
                        .WithMany()
                        .HasForeignKey("PageId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("NewLMS.Data.Role", "Role")
                        .WithMany("RoleClaims")
                        .HasForeignKey("RoleId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Action");

                    b.Navigation("Page");

                    b.Navigation("Role");
                });

            modelBuilder.Entity("NewLMS.Data.UserAllowedIP", b =>
                {
                    b.HasOne("NewLMS.Data.User", "User")
                        .WithMany("UserAllowedIPs")
                        .HasForeignKey("UserId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("User");
                });

            modelBuilder.Entity("NewLMS.Data.UserClaim", b =>
                {
                    b.HasOne("NewLMS.Data.Action", "Action")
                        .WithMany()
                        .HasForeignKey("ActionId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("NewLMS.Data.Page", "Page")
                        .WithMany()
                        .HasForeignKey("PageId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("NewLMS.Data.User", "User")
                        .WithMany("UserClaims")
                        .HasForeignKey("UserId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Action");

                    b.Navigation("Page");

                    b.Navigation("User");
                });

            modelBuilder.Entity("NewLMS.Data.UserLogin", b =>
                {
                    b.HasOne("NewLMS.Data.User", "User")
                        .WithMany("UserLogins")
                        .HasForeignKey("UserId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("User");
                });

            modelBuilder.Entity("NewLMS.Data.UserRole", b =>
                {
                    b.HasOne("NewLMS.Data.Role", "Role")
                        .WithMany("UserRoles")
                        .HasForeignKey("RoleId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("NewLMS.Data.User", "User")
                        .WithMany("UserRoles")
                        .HasForeignKey("UserId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Role");

                    b.Navigation("User");
                });

            modelBuilder.Entity("NewLMS.Data.UserToken", b =>
                {
                    b.HasOne("NewLMS.Data.User", "User")
                        .WithMany("UserTokens")
                        .HasForeignKey("UserId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("User");
                });

            modelBuilder.Entity("NewLMS.Data.Entities.Debtor", b =>
                {
                    b.Navigation("DebtorCollaterals");

                    b.Navigation("DebtorCouple");

                    b.Navigation("DebtorFinance");

                    b.Navigation("Emergency");

                    b.Navigation("ReceivedFacilities");
                });

            modelBuilder.Entity("NewLMS.Data.Entities.LoanApplication", b =>
                {
                    b.Navigation("ReceivedFacility");

                    b.Navigation("SubmittedFacility");
                });

            modelBuilder.Entity("NewLMS.Data.Entities.RfCompany", b =>
                {
                    b.Navigation("Prospects");
                });

            modelBuilder.Entity("NewLMS.Data.Entities.RfParameter", b =>
                {
                    b.Navigation("RfParameterDetails");
                });

            modelBuilder.Entity("NewLMS.Data.Entities.RfProduct", b =>
                {
                    b.Navigation("RfSubProducts");
                });

            modelBuilder.Entity("NewLMS.Data.Entities.RfProgram", b =>
                {
                    b.Navigation("LoanApplications");
                });

            modelBuilder.Entity("NewLMS.Data.Entities.RfSectorLBU1", b =>
                {
                    b.Navigation("RfSectorLBU2s");
                });

            modelBuilder.Entity("NewLMS.Data.Entities.RfSectorLBU2", b =>
                {
                    b.Navigation("RfSectorLBU3s");
                });

            modelBuilder.Entity("NewLMS.Data.Entities.RfSectorLBU3", b =>
                {
                    b.Navigation("Prospects");
                });

            modelBuilder.Entity("NewLMS.Data.Entities.RfSubProduct", b =>
                {
                    b.Navigation("Prospects");
                });

            modelBuilder.Entity("NewLMS.Data.Entities.RfSubProgram", b =>
                {
                    b.Navigation("LoanApplicationSubPrograms");
                });

            modelBuilder.Entity("NewLMS.Data.Role", b =>
                {
                    b.Navigation("RoleClaims");

                    b.Navigation("UserRoles");
                });

            modelBuilder.Entity("NewLMS.Data.User", b =>
                {
                    b.Navigation("UserAllowedIPs");

                    b.Navigation("UserClaims");

                    b.Navigation("UserLogins");

                    b.Navigation("UserRoles");

                    b.Navigation("UserTokens");
                });
#pragma warning restore 612, 618
        }
    }
}
