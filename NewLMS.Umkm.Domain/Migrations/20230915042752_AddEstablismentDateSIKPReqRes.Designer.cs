// <auto-generated />
using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using NewLMS.UMKM.Domain.Context;

#nullable disable

namespace NewLMS.Umkm.Domain.Migrations
{
    [DbContext(typeof(UserContext))]
    [Migration("20230915042752_AddEstablismentDateSIKPReqRes")]
    partial class AddEstablismentDateSIKPReqRes
    {
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "6.0.12")
                .HasAnnotation("Relational:MaxIdentifierLength", 128);

            SqlServerModelBuilderExtensions.UseIdentityColumns(modelBuilder, 1L, 1);

            modelBuilder.Entity("NewLMS.UMKM.Data.Action", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<Guid>("CreatedBy")
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTime>("CreatedDate")
                        .HasColumnType("datetime2");

                    b.Property<Guid?>("DeletedBy")
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTime?>("DeletedDate")
                        .HasColumnType("datetime2");

                    b.Property<bool>("IsDeleted")
                        .HasColumnType("bit");

                    b.Property<Guid?>("ModifiedBy")
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTime?>("ModifiedDate")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("datetime2")
                        .HasDefaultValueSql("getdate()");

                    b.Property<string>("Name")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.HasIndex("CreatedBy");

                    b.HasIndex("DeletedBy");

                    b.HasIndex("ModifiedBy");

                    b.ToTable("Actions");
                });

            modelBuilder.Entity("NewLMS.UMKM.Data.AppSetting", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<Guid>("CreatedBy")
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTime>("CreatedDate")
                        .HasColumnType("datetime2");

                    b.Property<Guid?>("DeletedBy")
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTime?>("DeletedDate")
                        .HasColumnType("datetime2");

                    b.Property<bool>("IsDeleted")
                        .HasColumnType("bit");

                    b.Property<string>("Key")
                        .HasColumnType("nvarchar(max)");

                    b.Property<Guid?>("ModifiedBy")
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTime?>("ModifiedDate")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("datetime2")
                        .HasDefaultValueSql("getdate()");

                    b.Property<string>("Name")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Value")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.ToTable("AppSettings");
                });

            modelBuilder.Entity("NewLMS.UMKM.Data.EmailSMTPSetting", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<Guid>("CreatedBy")
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTime>("CreatedDate")
                        .HasColumnType("datetime2");

                    b.Property<Guid?>("DeletedBy")
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTime?>("DeletedDate")
                        .HasColumnType("datetime2");

                    b.Property<string>("Host")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<bool>("IsDefault")
                        .HasColumnType("bit");

                    b.Property<bool>("IsDeleted")
                        .HasColumnType("bit");

                    b.Property<bool>("IsEnableSSL")
                        .HasColumnType("bit");

                    b.Property<Guid?>("ModifiedBy")
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTime?>("ModifiedDate")
                        .HasColumnType("datetime2");

                    b.Property<string>("Password")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("Port")
                        .HasColumnType("int");

                    b.Property<string>("UserName")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.HasIndex("CreatedBy");

                    b.HasIndex("DeletedBy");

                    b.HasIndex("ModifiedBy");

                    b.ToTable("EmailSMTPSettings");
                });

            modelBuilder.Entity("NewLMS.UMKM.Data.EmailTemplate", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("Body")
                        .HasColumnType("nvarchar(max)");

                    b.Property<Guid>("CreatedBy")
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTime>("CreatedDate")
                        .HasColumnType("datetime2");

                    b.Property<Guid?>("DeletedBy")
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTime?>("DeletedDate")
                        .HasColumnType("datetime2");

                    b.Property<bool>("IsDeleted")
                        .HasColumnType("bit");

                    b.Property<Guid?>("ModifiedBy")
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTime?>("ModifiedDate")
                        .HasColumnType("datetime2");

                    b.Property<string>("Name")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Subject")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.ToTable("EmailTemplates");
                });

            modelBuilder.Entity("NewLMS.UMKM.Data.Entities.Debtor", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("Address")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("CIF")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("City")
                        .HasColumnType("nvarchar(max)");

                    b.Property<Guid>("CreatedBy")
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTime>("CreatedDate")
                        .HasColumnType("datetime2");

                    b.Property<DateTime?>("DateOfBirth")
                        .HasColumnType("datetime2");

                    b.Property<Guid?>("DeletedBy")
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTime?>("DeletedDate")
                        .HasColumnType("datetime2");

                    b.Property<string>("District")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("EducationId")
                        .HasColumnType("nvarchar(450)");

                    b.Property<string>("Fullname")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("GenderId")
                        .HasColumnType("nvarchar(450)");

                    b.Property<DateTime?>("IdentityExpiredDate")
                        .HasColumnType("datetime2");

                    b.Property<bool?>("IdentityLifetime")
                        .HasColumnType("bit");

                    b.Property<bool>("IsDeleted")
                        .HasColumnType("bit");

                    b.Property<string>("JobCode")
                        .HasColumnType("nvarchar(450)");

                    b.Property<string>("MaritalStatusId")
                        .HasColumnType("nvarchar(450)");

                    b.Property<DateTime?>("MarriageCertificateDate")
                        .HasColumnType("datetime2");

                    b.Property<string>("MarriageCertificateIssuer")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("MarriageCertificateNumber")
                        .HasColumnType("nvarchar(max)");

                    b.Property<Guid?>("ModifiedBy")
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTime?>("ModifiedDate")
                        .HasColumnType("datetime2");

                    b.Property<string>("MotherName")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("NPWP")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Neighborhoods")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("NoIdentity")
                        .HasMaxLength(16)
                        .HasColumnType("nvarchar(16)");

                    b.Property<int?>("NumberOfDependents")
                        .HasColumnType("int");

                    b.Property<string>("PhoneNumber")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("PlaceOfBirth")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Province")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int?>("ResidenceLiveTime")
                        .HasColumnType("int");

                    b.Property<int?>("ResidenceStatusId")
                        .HasColumnType("int");

                    b.Property<int?>("ZipCodeId")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("EducationId");

                    b.HasIndex("GenderId");

                    b.HasIndex("JobCode");

                    b.HasIndex("MaritalStatusId");

                    b.HasIndex("ResidenceStatusId");

                    b.HasIndex("ZipCodeId");

                    b.ToTable("Debtors");
                });

            modelBuilder.Entity("NewLMS.UMKM.Data.Entities.DebtorCompany", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("Address")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("City")
                        .HasColumnType("nvarchar(max)");

                    b.Property<Guid>("CreatedBy")
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTime>("CreatedDate")
                        .HasColumnType("datetime2");

                    b.Property<Guid?>("DeletedBy")
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTime?>("DeletedDate")
                        .HasColumnType("datetime2");

                    b.Property<string>("District")
                        .HasColumnType("nvarchar(max)");

                    b.Property<bool>("IsDeleted")
                        .HasColumnType("bit");

                    b.Property<Guid?>("ModifiedBy")
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTime?>("ModifiedDate")
                        .HasColumnType("datetime2");

                    b.Property<string>("Name")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Neighborhoods")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("PhoneNumber")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Province")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int?>("ZipCodeId")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("ZipCodeId");

                    b.ToTable("DebtorCompanies");
                });

            modelBuilder.Entity("NewLMS.UMKM.Data.Entities.DebtorCompanyLegal", b =>
                {
                    b.Property<Guid>("Id")
                        .HasColumnType("uniqueidentifier");

                    b.Property<Guid>("CreatedBy")
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTime>("CreatedDate")
                        .HasColumnType("datetime2");

                    b.Property<DateTime>("DeedDate")
                        .HasColumnType("datetime2");

                    b.Property<Guid?>("DeletedBy")
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTime?>("DeletedDate")
                        .HasColumnType("datetime2");

                    b.Property<DateTime>("EstablishmentDeedDate")
                        .HasColumnType("datetime2");

                    b.Property<string>("EstablishmentDeedNumber")
                        .HasColumnType("nvarchar(max)");

                    b.Property<bool>("IsDeleted")
                        .HasColumnType("bit");

                    b.Property<string>("LatestDeedChange")
                        .HasColumnType("nvarchar(max)");

                    b.Property<Guid?>("ModifiedBy")
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTime?>("ModifiedDate")
                        .HasColumnType("datetime2");

                    b.Property<string>("NPWP")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("RegisterNumber")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime>("SIUPDate")
                        .HasColumnType("datetime2");

                    b.Property<string>("SIUPNumber")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime>("SKDPDate")
                        .HasColumnType("datetime2");

                    b.Property<string>("SKDPNumber")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime?>("SKDate")
                        .HasColumnType("datetime2");

                    b.Property<DateTime>("SKDueDate")
                        .HasColumnType("datetime2");

                    b.Property<string>("SKNumber")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime>("TDPDate")
                        .HasColumnType("datetime2");

                    b.Property<DateTime>("TDPDueDate")
                        .HasColumnType("datetime2");

                    b.Property<string>("TDPNumber")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.ToTable("DebtorCompanyLegals");
                });

            modelBuilder.Entity("NewLMS.UMKM.Data.Entities.DebtorCouple", b =>
                {
                    b.Property<Guid>("Id")
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("Address")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("City")
                        .HasColumnType("nvarchar(max)");

                    b.Property<Guid>("CreatedBy")
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTime>("CreatedDate")
                        .HasColumnType("datetime2");

                    b.Property<DateTime>("DateOfBirth")
                        .HasColumnType("datetime2");

                    b.Property<Guid?>("DeletedBy")
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTime?>("DeletedDate")
                        .HasColumnType("datetime2");

                    b.Property<string>("District")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Fullname")
                        .HasColumnType("nvarchar(max)");

                    b.Property<bool?>("IsAddressSameAsDebtor")
                        .HasColumnType("bit");

                    b.Property<bool>("IsDeleted")
                        .HasColumnType("bit");

                    b.Property<string>("JobCode")
                        .HasColumnType("nvarchar(450)");

                    b.Property<Guid?>("ModifiedBy")
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTime?>("ModifiedDate")
                        .HasColumnType("datetime2");

                    b.Property<string>("NPWP")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Neighborhoods")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("NoIdentity")
                        .HasMaxLength(16)
                        .HasColumnType("nvarchar(16)");

                    b.Property<string>("PlaceOfBirth")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Province")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int?>("ZipCodeId")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("JobCode");

                    b.HasIndex("ZipCodeId");

                    b.ToTable("DebtorCouples");
                });

            modelBuilder.Entity("NewLMS.UMKM.Data.Entities.DebtorEmergency", b =>
                {
                    b.Property<Guid>("Id")
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("Address")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("City")
                        .HasColumnType("nvarchar(max)");

                    b.Property<Guid>("CreatedBy")
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTime>("CreatedDate")
                        .HasColumnType("datetime2");

                    b.Property<Guid?>("DeletedBy")
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTime?>("DeletedDate")
                        .HasColumnType("datetime2");

                    b.Property<string>("District")
                        .HasColumnType("nvarchar(max)");

                    b.Property<bool>("IsDeleted")
                        .HasColumnType("bit");

                    b.Property<Guid?>("ModifiedBy")
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTime?>("ModifiedDate")
                        .HasColumnType("datetime2");

                    b.Property<string>("Name")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Neighborhoods")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("PhoneNumber")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Province")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("ZipCodeId")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("ZipCodeId");

                    b.ToTable("DebtorEmergencies");
                });

            modelBuilder.Entity("NewLMS.UMKM.Data.Entities.Document", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<Guid>("CreatedBy")
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTime>("CreatedDate")
                        .HasColumnType("datetime2");

                    b.Property<Guid?>("DeletedBy")
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTime?>("DeletedDate")
                        .HasColumnType("datetime2");

                    b.Property<string>("DocumentId")
                        .HasColumnType("nvarchar(450)");

                    b.Property<string>("DocumentNo")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int?>("DocumentStatusId")
                        .HasColumnType("int");

                    b.Property<int>("DocumentType")
                        .HasColumnType("int");

                    b.Property<DateTime?>("ExpireDate")
                        .HasColumnType("datetime2");

                    b.Property<bool>("IsDeleted")
                        .HasColumnType("bit");

                    b.Property<string>("Justification")
                        .HasColumnType("nvarchar(max)");

                    b.Property<Guid>("LoanApplicationId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<Guid?>("ModifiedBy")
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTime?>("ModifiedDate")
                        .HasColumnType("datetime2");

                    b.Property<DateTime?>("TBODate")
                        .HasColumnType("datetime2");

                    b.Property<string>("TBODesc")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.HasIndex("DocumentId");

                    b.HasIndex("DocumentStatusId");

                    b.HasIndex("DocumentType");

                    b.HasIndex("LoanApplicationId");

                    b.ToTable("Documents");
                });

            modelBuilder.Entity("NewLMS.UMKM.Data.Entities.DocumentFileUrl", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<Guid>("CreatedBy")
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTime>("CreatedDate")
                        .HasColumnType("datetime2");

                    b.Property<Guid?>("DeletedBy")
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTime?>("DeletedDate")
                        .HasColumnType("datetime2");

                    b.Property<Guid>("DocumentId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<Guid>("FileUrlId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<bool>("IsDeleted")
                        .HasColumnType("bit");

                    b.Property<Guid?>("ModifiedBy")
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTime?>("ModifiedDate")
                        .HasColumnType("datetime2");

                    b.HasKey("Id");

                    b.HasIndex("DocumentId");

                    b.HasIndex("FileUrlId");

                    b.ToTable("DocumentFileUrls");
                });

            modelBuilder.Entity("NewLMS.UMKM.Data.Entities.FileUrl", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<Guid>("CreatedBy")
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTime>("CreatedDate")
                        .HasColumnType("datetime2");

                    b.Property<Guid?>("DeletedBy")
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTime?>("DeletedDate")
                        .HasColumnType("datetime2");

                    b.Property<string>("FileName")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("FileSize")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("FileType")
                        .HasColumnType("nvarchar(max)");

                    b.Property<bool>("IsDeleted")
                        .HasColumnType("bit");

                    b.Property<Guid?>("ModifiedBy")
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTime?>("ModifiedDate")
                        .HasColumnType("datetime2");

                    b.Property<string>("Url")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.ToTable("FileUrls");
                });

            modelBuilder.Entity("NewLMS.UMKM.Data.Entities.LoanApplication", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("BookingBranchId")
                        .HasColumnType("nvarchar(4)");

                    b.Property<string>("BranchId")
                        .HasColumnType("nvarchar(4)");

                    b.Property<int?>("BusinessCycleId")
                        .HasColumnType("int");

                    b.Property<int?>("BusinessCycleMonth")
                        .HasColumnType("int");

                    b.Property<Guid>("CreatedBy")
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTime>("CreatedDate")
                        .HasColumnType("datetime2");

                    b.Property<string>("DataSource")
                        .HasColumnType("nvarchar(max)");

                    b.Property<Guid?>("DebtorCompanyId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<Guid?>("DebtorId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<Guid?>("DecisionMakerId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<Guid?>("DeletedBy")
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTime?>("DeletedDate")
                        .HasColumnType("datetime2");

                    b.Property<bool>("DuplicationsVerified")
                        .HasColumnType("bit");

                    b.Property<bool?>("IsBusinessCycle")
                        .HasColumnType("bit");

                    b.Property<bool>("IsDeleted")
                        .HasColumnType("bit");

                    b.Property<string>("LoanApplicationId")
                        .IsRequired()
                        .HasMaxLength(20)
                        .HasColumnType("nvarchar(20)");

                    b.Property<Guid?>("ModifiedBy")
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTime?>("ModifiedDate")
                        .HasColumnType("datetime2");

                    b.Property<int>("OwnerCategoryId")
                        .HasColumnType("int");

                    b.Property<Guid?>("OwnerId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("ProductId")
                        .HasColumnType("nvarchar(450)");

                    b.Property<Guid?>("ProspectId")
                        .IsRequired()
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("RfSectorLBU3Code")
                        .HasColumnType("nvarchar(450)");

                    b.Property<Guid>("StageId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<int>("Status")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("BookingBranchId");

                    b.HasIndex("BranchId");

                    b.HasIndex("BusinessCycleId");

                    b.HasIndex("DebtorCompanyId");

                    b.HasIndex("DebtorId");

                    b.HasIndex("DecisionMakerId");

                    b.HasIndex("OwnerCategoryId");

                    b.HasIndex("OwnerId");

                    b.HasIndex("ProductId");

                    b.HasIndex("ProspectId");

                    b.HasIndex("RfSectorLBU3Code");

                    b.HasIndex("StageId");

                    b.ToTable("LoanApplications");
                });

            modelBuilder.Entity("NewLMS.UMKM.Data.Entities.LoanApplicationAppraisal", b =>
                {
                    b.Property<Guid>("AppraisalId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("AppraisalStatus")
                        .HasMaxLength(25)
                        .HasColumnType("nvarchar(25)");

                    b.Property<Guid>("CreatedBy")
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTime>("CreatedDate")
                        .HasColumnType("datetime2");

                    b.Property<Guid?>("DeletedBy")
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTime?>("DeletedDate")
                        .HasColumnType("datetime2");

                    b.Property<string>("Estimator")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<bool>("IsDeleted")
                        .HasColumnType("bit");

                    b.Property<string>("Kjpp")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<Guid>("LoanApplicationCollateralId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<Guid>("LoanApplicationId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<Guid?>("ModifiedBy")
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTime?>("ModifiedDate")
                        .HasColumnType("datetime2");

                    b.Property<string>("PropertyCategory")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<Guid>("StageId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<bool>("isExternal")
                        .HasColumnType("bit");

                    b.Property<bool>("isInternal")
                        .HasColumnType("bit");

                    b.HasKey("AppraisalId");

                    b.HasIndex("LoanApplicationCollateralId");

                    b.HasIndex("LoanApplicationId");

                    b.HasIndex("StageId");

                    b.ToTable("LoanApplicationAppraisals");
                });

            modelBuilder.Entity("NewLMS.UMKM.Data.Entities.LoanApplicationCollateral", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("Address")
                        .HasColumnType("nvarchar(max)");

                    b.Property<double?>("BuildingArea")
                        .HasColumnType("float");

                    b.Property<string>("BuildingPermit")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("ChassisNumber")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("City")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("CityDocumentCollateral")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("CityDomisili")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("CollateralBCId")
                        .HasColumnType("nvarchar(450)");

                    b.Property<Guid>("CreatedBy")
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTime>("CreatedDate")
                        .HasColumnType("datetime2");

                    b.Property<DateTime?>("DateMeasurementLetterNumber")
                        .HasColumnType("datetime2");

                    b.Property<Guid?>("DeletedBy")
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTime?>("DeletedDate")
                        .HasColumnType("datetime2");

                    b.Property<string>("District")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("DistrictDocumentCollateral")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("DocumentCode")
                        .HasColumnType("nvarchar(450)");

                    b.Property<DateTime?>("DocumentExpireDate")
                        .HasColumnType("datetime2");

                    b.Property<string>("DocumentNumber")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("DocumentPublisher")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime>("DocumentReleaseDate")
                        .HasColumnType("datetime2");

                    b.Property<string>("EastBoundaries")
                        .HasColumnType("nvarchar(max)");

                    b.Property<bool>("IsDeleted")
                        .HasColumnType("bit");

                    b.Property<double?>("LanArea")
                        .HasColumnType("float");

                    b.Property<string>("LandLocation")
                        .HasColumnType("nvarchar(max)");

                    b.Property<Guid>("LoanApplicationId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("MachineNumber")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("MeasurementLetterNumber")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("MeasurementLetterNumberImageSituation")
                        .HasColumnType("nvarchar(max)");

                    b.Property<Guid?>("ModifiedBy")
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTime?>("ModifiedDate")
                        .HasColumnType("datetime2");

                    b.Property<string>("NJOPPBBNumber")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("NOPNumber")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("NameCollateralHolder")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("NameMarketLocation")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("NeigborhoodDocumentCollateral")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Neighborhoods")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("NorthBoundaries")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Province")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("ProvinceDocumentCollateral")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("RangkingHT")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("SouthBoundaries")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("TransportationTypeCode")
                        .HasColumnType("nvarchar(450)");

                    b.Property<string>("VehClassCode")
                        .HasColumnType("nvarchar(450)");

                    b.Property<string>("VehMakerCode")
                        .HasColumnType("nvarchar(450)");

                    b.Property<string>("VehModelCode")
                        .HasColumnType("nvarchar(450)");

                    b.Property<string>("WestBoundaries")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int?>("YearProduction")
                        .HasColumnType("int");

                    b.Property<int>("ZipCodeId")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("CollateralBCId");

                    b.HasIndex("DocumentCode");

                    b.HasIndex("LoanApplicationId");

                    b.HasIndex("TransportationTypeCode");

                    b.HasIndex("VehClassCode");

                    b.HasIndex("VehMakerCode");

                    b.HasIndex("VehModelCode");

                    b.HasIndex("ZipCodeId");

                    b.ToTable("LoanApplicationCollaterals");
                });

            modelBuilder.Entity("NewLMS.UMKM.Data.Entities.LoanApplicationCollateralOwner", b =>
                {
                    b.Property<Guid>("Id")
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("Address")
                        .HasColumnType("nvarchar(max)");

                    b.Property<bool>("AddressSameAsIdentity")
                        .HasColumnType("bit");

                    b.Property<string>("City")
                        .HasColumnType("nvarchar(max)");

                    b.Property<Guid>("CreatedBy")
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTime>("CreatedDate")
                        .HasColumnType("datetime2");

                    b.Property<Guid?>("DeletedBy")
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTime?>("DeletedDate")
                        .HasColumnType("datetime2");

                    b.Property<string>("District")
                        .HasColumnType("nvarchar(max)");

                    b.Property<bool>("IsDeleted")
                        .HasColumnType("bit");

                    b.Property<Guid?>("ModifiedBy")
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTime?>("ModifiedDate")
                        .HasColumnType("datetime2");

                    b.Property<string>("Neighborhoods")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("OtherRelationCollateral")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("OwnerCoupleAddress")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("OwnerCoupleCity")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime?>("OwnerCoupleDateOfBirth")
                        .HasColumnType("datetime2");

                    b.Property<string>("OwnerCoupleDistrict")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime?>("OwnerCoupleIdentityExpiredDate")
                        .HasColumnType("datetime2");

                    b.Property<bool?>("OwnerCoupleIdentityLifetime")
                        .HasColumnType("bit");

                    b.Property<string>("OwnerCoupleJob")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("OwnerCoupleNPWP")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("OwnerCoupleName")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("OwnerCoupleNeighborhoods")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("OwnerCoupleNoIdentity")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("OwnerCouplePlaceOfBirth")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("OwnerCoupleProvince")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime?>("OwnerDateOfBirth")
                        .HasColumnType("datetime2");

                    b.Property<string>("OwnerEmegencyNumber")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("OwnerEmergencyName")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime?>("OwnerIdentityExpireDate")
                        .HasColumnType("datetime2");

                    b.Property<bool>("OwnerIdentityLifetime")
                        .HasColumnType("bit");

                    b.Property<bool>("OwnerIsDebtor")
                        .HasColumnType("bit");

                    b.Property<string>("OwnerJob")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("OwnerMaritalId")
                        .HasColumnType("nvarchar(450)");

                    b.Property<string>("OwnerNPWP")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("OwnerName")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("OwnerNoIdentity")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("OwnerPlaceOfBirth")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Province")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int?>("RelationCollateralId")
                        .HasColumnType("int");

                    b.Property<int?>("RfZipCodeIdOwnerCouple")
                        .HasColumnType("int");

                    b.Property<int>("ZipCodeId")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("OwnerMaritalId");

                    b.HasIndex("RelationCollateralId");

                    b.HasIndex("RfZipCodeIdOwnerCouple");

                    b.HasIndex("ZipCodeId");

                    b.ToTable("LoanApplicationCollateralOwners");
                });

            modelBuilder.Entity("NewLMS.UMKM.Data.Entities.LoanApplicationCreditScoring", b =>
                {
                    b.Property<Guid>("Id")
                        .HasColumnType("uniqueidentifier");

                    b.Property<Guid>("CreatedBy")
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTime>("CreatedDate")
                        .HasColumnType("datetime2");

                    b.Property<Guid?>("DeletedBy")
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTime?>("DeletedDate")
                        .HasColumnType("datetime2");

                    b.Property<bool>("IsDeleted")
                        .HasColumnType("bit");

                    b.Property<Guid?>("ModifiedBy")
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTime?>("ModifiedDate")
                        .HasColumnType("datetime2");

                    b.Property<int>("ScoAverageAccBalanceId")
                        .HasColumnType("int");

                    b.Property<int>("ScoBJBCreditHistoryId")
                        .HasColumnType("int");

                    b.Property<int>("ScoBankRelationId")
                        .HasColumnType("int");

                    b.Property<int>("ScoBusinesLocationId")
                        .HasColumnType("int");

                    b.Property<int>("ScoCollateralId")
                        .HasColumnType("int");

                    b.Property<int>("ScoFinanceManagerId")
                        .HasColumnType("int");

                    b.Property<int?>("ScoMonthlyMutationId")
                        .HasColumnType("int");

                    b.Property<int>("ScoNeedLevelId")
                        .HasColumnType("int");

                    b.Property<int>("ScoOtherPartyDebtId")
                        .HasColumnType("int");

                    b.Property<int>("ScoResidentialReputationId")
                        .HasColumnType("int");

                    b.Property<int>("ScoTransacMethodId")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("ScoAverageAccBalanceId");

                    b.HasIndex("ScoBJBCreditHistoryId");

                    b.HasIndex("ScoBankRelationId");

                    b.HasIndex("ScoBusinesLocationId");

                    b.HasIndex("ScoCollateralId");

                    b.HasIndex("ScoFinanceManagerId");

                    b.HasIndex("ScoMonthlyMutationId");

                    b.HasIndex("ScoNeedLevelId");

                    b.HasIndex("ScoOtherPartyDebtId");

                    b.HasIndex("ScoResidentialReputationId");

                    b.HasIndex("ScoTransacMethodId");

                    b.ToTable("LoanApplicationCreditScorings");
                });

            modelBuilder.Entity("NewLMS.UMKM.Data.Entities.LoanApplicationFacility", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<int>("ApplicationTypeId")
                        .HasColumnType("int");

                    b.Property<Guid>("CreatedBy")
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTime>("CreatedDate")
                        .HasColumnType("datetime2");

                    b.Property<Guid?>("DeletedBy")
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTime?>("DeletedDate")
                        .HasColumnType("datetime2");

                    b.Property<string>("FacilityPurpose")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("InstallmentType")
                        .HasColumnType("nvarchar(max)");

                    b.Property<double>("Interest")
                        .HasColumnType("float");

                    b.Property<long>("InterestInstallment")
                        .HasColumnType("bigint");

                    b.Property<bool>("IsDeleted")
                        .HasColumnType("bit");

                    b.Property<Guid>("LoanApplicationId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("LoanPurposeId")
                        .HasColumnType("nvarchar(450)");

                    b.Property<Guid?>("ModifiedBy")
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTime?>("ModifiedDate")
                        .HasColumnType("datetime2");

                    b.Property<int>("NatureOfCreditId")
                        .HasColumnType("int");

                    b.Property<string>("PlacementCountryCode")
                        .HasColumnType("nvarchar(450)");

                    b.Property<long>("PrincipalInstallment")
                        .HasColumnType("bigint");

                    b.Property<string>("SectorLBU3Code")
                        .HasColumnType("nvarchar(450)");

                    b.Property<string>("SubProductId")
                        .HasColumnType("nvarchar(450)");

                    b.Property<long>("SubmittedPlafond")
                        .HasColumnType("bigint");

                    b.Property<string>("TenorCode")
                        .HasColumnType("nvarchar(450)");

                    b.HasKey("Id");

                    b.HasIndex("ApplicationTypeId");

                    b.HasIndex("LoanApplicationId");

                    b.HasIndex("LoanPurposeId");

                    b.HasIndex("NatureOfCreditId");

                    b.HasIndex("PlacementCountryCode");

                    b.HasIndex("SectorLBU3Code");

                    b.HasIndex("SubProductId");

                    b.HasIndex("TenorCode");

                    b.ToTable("LoanApplicationFacilities");
                });

            modelBuilder.Entity("NewLMS.UMKM.Data.Entities.LoanApplicationKeyPerson", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("Address")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("City")
                        .HasColumnType("nvarchar(max)");

                    b.Property<Guid>("CreatedBy")
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTime>("CreatedDate")
                        .HasColumnType("datetime2");

                    b.Property<DateTime>("DateOfBirth")
                        .HasColumnType("datetime2");

                    b.Property<Guid?>("DeletedBy")
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTime?>("DeletedDate")
                        .HasColumnType("datetime2");

                    b.Property<string>("District")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("EducationId")
                        .HasColumnType("nvarchar(450)");

                    b.Property<DateTime?>("IdentityDueDate")
                        .HasColumnType("datetime2");

                    b.Property<bool>("IsDeleted")
                        .HasColumnType("bit");

                    b.Property<bool>("LifetimeIdentity")
                        .HasColumnType("bit");

                    b.Property<Guid>("LoanApplicationId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("MaritalStatusId")
                        .HasColumnType("nvarchar(450)");

                    b.Property<Guid?>("ModifiedBy")
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTime?>("ModifiedDate")
                        .HasColumnType("datetime2");

                    b.Property<string>("NPWP")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Name")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Neighborhoods")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("NoIdentity")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("PhoneNumber")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("PlaceOfBirth")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Position")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Province")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("ZipCodeId")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("EducationId");

                    b.HasIndex("LoanApplicationId");

                    b.HasIndex("MaritalStatusId");

                    b.HasIndex("ZipCodeId");

                    b.ToTable("LoanApplicationKeyPersons");
                });

            modelBuilder.Entity("NewLMS.UMKM.Data.Entities.LoanApplicationRAC", b =>
                {
                    b.Property<Guid>("Id")
                        .HasColumnType("uniqueidentifier");

                    b.Property<bool?>("BICollectibility")
                        .HasColumnType("bit");

                    b.Property<bool?>("BPJSTKParticipants")
                        .HasColumnType("bit");

                    b.Property<Guid>("CreatedBy")
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTime>("CreatedDate")
                        .HasColumnType("datetime2");

                    b.Property<Guid?>("DeletedBy")
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTime?>("DeletedDate")
                        .HasColumnType("datetime2");

                    b.Property<bool?>("HasAge")
                        .HasColumnType("bit");

                    b.Property<bool?>("HasNoCreditFacilities")
                        .HasColumnType("bit");

                    b.Property<bool?>("IdentityCard")
                        .HasColumnType("bit");

                    b.Property<bool>("IsDeleted")
                        .HasColumnType("bit");

                    b.Property<bool?>("MaximumAge")
                        .HasColumnType("bit");

                    b.Property<bool?>("MinimumAge")
                        .HasColumnType("bit");

                    b.Property<Guid?>("ModifiedBy")
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTime?>("ModifiedDate")
                        .HasColumnType("datetime2");

                    b.Property<bool?>("NationalBlacklist")
                        .HasColumnType("bit");

                    b.Property<bool?>("NeverReceivedCredit")
                        .HasColumnType("bit");

                    b.Property<bool?>("NotCollectibility")
                        .HasColumnType("bit");

                    b.HasKey("Id");

                    b.ToTable("LoanApplicationRACs");
                });

            modelBuilder.Entity("NewLMS.UMKM.Data.Entities.LoanApplicationStage", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<Guid>("CreatedBy")
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTime>("CreatedDate")
                        .HasColumnType("datetime2");

                    b.Property<Guid?>("DeletedBy")
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTime?>("DeletedDate")
                        .HasColumnType("datetime2");

                    b.Property<bool>("IsDeleted")
                        .HasColumnType("bit");

                    b.Property<Guid>("LoanApplicationId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<Guid?>("ModifiedBy")
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTime?>("ModifiedDate")
                        .HasColumnType("datetime2");

                    b.Property<Guid>("OwnerRoleId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<Guid>("OwnerUserId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<bool>("Processed")
                        .HasColumnType("bit");

                    b.Property<Guid?>("ProcessedBy")
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTime?>("ProcessedDate")
                        .HasColumnType("datetime2");

                    b.Property<Guid>("StageId")
                        .HasColumnType("uniqueidentifier");

                    b.HasKey("Id");

                    b.HasIndex("LoanApplicationId");

                    b.HasIndex("OwnerRoleId");

                    b.HasIndex("OwnerUserId");

                    b.HasIndex("ProcessedBy");

                    b.HasIndex("StageId");

                    b.ToTable("LoanApplicationStages");
                });

            modelBuilder.Entity("NewLMS.UMKM.Data.Entities.Prospect", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("AccountOfficer")
                        .HasMaxLength(20)
                        .HasColumnType("nvarchar(20)");

                    b.Property<string>("Address")
                        .HasMaxLength(450)
                        .HasColumnType("nvarchar(450)");

                    b.Property<int?>("ApplicationTypeId")
                        .HasColumnType("int");

                    b.Property<string>("BranchId")
                        .HasMaxLength(4)
                        .HasColumnType("nvarchar(4)");

                    b.Property<int?>("CategoryId")
                        .HasColumnType("int");

                    b.Property<string>("City")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<string>("CompanyAddress")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("CompanyCity")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<string>("CompanyDistrict")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<string>("CompanyFullAddress")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int?>("CompanyGroupId")
                        .HasColumnType("int");

                    b.Property<string>("CompanyName")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("CompanyNeighborhoods")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<string>("CompanyProvince")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<int?>("CompanyStatusId")
                        .HasColumnType("int");

                    b.Property<string>("CompanyTypeId")
                        .HasColumnType("nvarchar(450)");

                    b.Property<int?>("CompanyZipCodeId")
                        .HasColumnType("int");

                    b.Property<Guid>("CreatedBy")
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTime>("CreatedDate")
                        .HasColumnType("datetime2");

                    b.Property<string>("DataSource")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime?>("DateOfBirth")
                        .HasColumnType("datetime2");

                    b.Property<Guid?>("DeletedBy")
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTime?>("DeletedDate")
                        .HasColumnType("datetime2");

                    b.Property<string>("District")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<DateTime?>("EstimateProcessDate")
                        .HasColumnType("datetime2");

                    b.Property<string>("Fullname")
                        .HasMaxLength(80)
                        .HasColumnType("nvarchar(80)");

                    b.Property<string>("GenderId")
                        .HasColumnType("nvarchar(450)");

                    b.Property<bool?>("IdCardAddress")
                        .HasColumnType("bit");

                    b.Property<string>("InstituteCode")
                        .HasColumnType("nvarchar(450)");

                    b.Property<bool>("IsDeleted")
                        .HasColumnType("bit");

                    b.Property<Guid?>("ModifiedBy")
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTime?>("ModifiedDate")
                        .HasColumnType("datetime2");

                    b.Property<string>("Neighborhoods")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<string>("NoIdentity")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("OtherCompanyType")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int?>("OwnerCategoryId")
                        .HasColumnType("int");

                    b.Property<string>("PhoneNumber")
                        .HasMaxLength(16)
                        .HasColumnType("nvarchar(16)");

                    b.Property<string>("PlaceAddress")
                        .HasMaxLength(450)
                        .HasColumnType("nvarchar(450)");

                    b.Property<string>("PlaceCity")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<string>("PlaceDistrict")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<string>("PlaceNeighborhoods")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<string>("PlaceOfBirth")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("PlaceProvince")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<int?>("PlaceZipCodeId")
                        .HasColumnType("int");

                    b.Property<string>("ProductId")
                        .HasColumnType("nvarchar(450)");

                    b.Property<string>("ProspectId")
                        .IsRequired()
                        .HasMaxLength(20)
                        .HasColumnType("nvarchar(20)");

                    b.Property<string>("Province")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<string>("Reason")
                        .HasColumnType("nvarchar(max)");

                    b.Property<bool?>("SameAsIdentity")
                        .HasColumnType("bit");

                    b.Property<string>("SectorLBU3Code")
                        .HasColumnType("nvarchar(450)");

                    b.Property<int>("Status")
                        .HasColumnType("int");

                    b.Property<long?>("TargetPlafond")
                        .HasColumnType("bigint");

                    b.Property<int?>("ZipCodeId")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("ApplicationTypeId");

                    b.HasIndex("BranchId");

                    b.HasIndex("CategoryId");

                    b.HasIndex("CompanyGroupId");

                    b.HasIndex("CompanyStatusId");

                    b.HasIndex("CompanyTypeId");

                    b.HasIndex("CompanyZipCodeId");

                    b.HasIndex("GenderId");

                    b.HasIndex("InstituteCode");

                    b.HasIndex("OwnerCategoryId");

                    b.HasIndex("PlaceZipCodeId");

                    b.HasIndex("ProductId");

                    b.HasIndex("SectorLBU3Code");

                    b.HasIndex("ZipCodeId");

                    b.ToTable("Prospects");
                });

            modelBuilder.Entity("NewLMS.UMKM.Data.Entities.RfApplicationType", b =>
                {
                    b.Property<string>("ApplicationTypeId")
                        .HasColumnType("nvarchar(450)");

                    b.Property<string>("ApplicationTypeDesc")
                        .HasColumnType("nvarchar(max)");

                    b.Property<Guid>("CreatedBy")
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTime>("CreatedDate")
                        .HasColumnType("datetime2");

                    b.Property<Guid?>("DeletedBy")
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTime?>("DeletedDate")
                        .HasColumnType("datetime2");

                    b.Property<bool>("IsDeleted")
                        .HasColumnType("bit");

                    b.Property<Guid?>("ModifiedBy")
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTime?>("ModifiedDate")
                        .HasColumnType("datetime2");

                    b.HasKey("ApplicationTypeId");

                    b.ToTable("RfApplicationTypes");
                });

            modelBuilder.Entity("NewLMS.UMKM.Data.Entities.RfAppraisalKJPPMaster", b =>
                {
                    b.Property<string>("KJPPMasterCode")
                        .HasColumnType("nvarchar(450)");

                    b.Property<string>("Active")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("CoreCode")
                        .HasColumnType("nvarchar(max)");

                    b.Property<Guid>("CreatedBy")
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTime>("CreatedDate")
                        .HasColumnType("datetime2");

                    b.Property<Guid?>("DeletedBy")
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTime?>("DeletedDate")
                        .HasColumnType("datetime2");

                    b.Property<bool>("IsDeleted")
                        .HasColumnType("bit");

                    b.Property<string>("KJPPName")
                        .HasColumnType("nvarchar(max)");

                    b.Property<Guid?>("ModifiedBy")
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTime?>("ModifiedDate")
                        .HasColumnType("datetime2");

                    b.Property<string>("PKSEndDate")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("PKSStartDate")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("KJPPMasterCode");

                    b.ToTable("RfAppraisalKJPPMasters");
                });

            modelBuilder.Entity("NewLMS.UMKM.Data.Entities.RfBranch", b =>
                {
                    b.Property<string>("Code")
                        .HasMaxLength(4)
                        .HasColumnType("nvarchar(4)");

                    b.Property<Guid>("CreatedBy")
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTime>("CreatedDate")
                        .HasColumnType("datetime2");

                    b.Property<string>("Dati")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<Guid?>("DeletedBy")
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTime?>("DeletedDate")
                        .HasColumnType("datetime2");

                    b.Property<string>("GroupBranch")
                        .HasMaxLength(4)
                        .HasColumnType("nvarchar(4)");

                    b.Property<bool>("IsDeleted")
                        .HasColumnType("bit");

                    b.Property<string>("Kanwil")
                        .HasMaxLength(4)
                        .HasColumnType("nvarchar(4)");

                    b.Property<string>("KanwilName")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<string>("KanwilOri")
                        .HasMaxLength(4)
                        .HasColumnType("nvarchar(4)");

                    b.Property<string>("Kc")
                        .HasMaxLength(4)
                        .HasColumnType("nvarchar(4)");

                    b.Property<string>("KcName")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<string>("Kcp")
                        .HasMaxLength(3)
                        .HasColumnType("nvarchar(3)");

                    b.Property<Guid?>("ModifiedBy")
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTime?>("ModifiedDate")
                        .HasColumnType("datetime2");

                    b.Property<string>("Name")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("OfficeType")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("OriKanwilName")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<string>("Sandi")
                        .HasMaxLength(10)
                        .HasColumnType("nvarchar(10)");

                    b.HasKey("Code");

                    b.ToTable("RfBranches");
                });

            modelBuilder.Entity("NewLMS.UMKM.Data.Entities.RfBusinessFieldKUR", b =>
                {
                    b.Property<string>("BusinessFieldKURCode")
                        .HasColumnType("nvarchar(450)");

                    b.Property<string>("BusinessFieldKURDesc")
                        .HasColumnType("nvarchar(max)");

                    b.Property<Guid>("CreatedBy")
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTime>("CreatedDate")
                        .HasColumnType("datetime2");

                    b.Property<Guid?>("DeletedBy")
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTime?>("DeletedDate")
                        .HasColumnType("datetime2");

                    b.Property<bool>("IsDeleted")
                        .HasColumnType("bit");

                    b.Property<Guid?>("ModifiedBy")
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTime?>("ModifiedDate")
                        .HasColumnType("datetime2");

                    b.HasKey("BusinessFieldKURCode");

                    b.ToTable("RfBusinessFieldKURs");
                });

            modelBuilder.Entity("NewLMS.UMKM.Data.Entities.RfBusinessLocation", b =>
                {
                    b.Property<string>("BusinessLocationCode")
                        .HasColumnType("nvarchar(450)");

                    b.Property<string>("BusinessLocationDesc")
                        .HasColumnType("nvarchar(max)");

                    b.Property<Guid>("CreatedBy")
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTime>("CreatedDate")
                        .HasColumnType("datetime2");

                    b.Property<Guid?>("DeletedBy")
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTime?>("DeletedDate")
                        .HasColumnType("datetime2");

                    b.Property<bool>("IsDeleted")
                        .HasColumnType("bit");

                    b.Property<Guid?>("ModifiedBy")
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTime?>("ModifiedDate")
                        .HasColumnType("datetime2");

                    b.HasKey("BusinessLocationCode");

                    b.ToTable("RfBusinessLocations");
                });

            modelBuilder.Entity("NewLMS.UMKM.Data.Entities.RfBusinessOwnership", b =>
                {
                    b.Property<string>("BusinessOwnershipCode")
                        .HasColumnType("nvarchar(450)");

                    b.Property<string>("BusinessOwnershipDesc")
                        .HasColumnType("nvarchar(max)");

                    b.Property<Guid>("CreatedBy")
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTime>("CreatedDate")
                        .HasColumnType("datetime2");

                    b.Property<Guid?>("DeletedBy")
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTime?>("DeletedDate")
                        .HasColumnType("datetime2");

                    b.Property<bool>("IsDeleted")
                        .HasColumnType("bit");

                    b.Property<Guid?>("ModifiedBy")
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTime?>("ModifiedDate")
                        .HasColumnType("datetime2");

                    b.HasKey("BusinessOwnershipCode");

                    b.ToTable("RfBusinessOwnerships");
                });

            modelBuilder.Entity("NewLMS.UMKM.Data.Entities.RfBusinessPlaceLocation", b =>
                {
                    b.Property<string>("RfBusinessPlaceLocationCode")
                        .HasColumnType("nvarchar(450)");

                    b.Property<Guid>("CreatedBy")
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTime>("CreatedDate")
                        .HasColumnType("datetime2");

                    b.Property<Guid?>("DeletedBy")
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTime?>("DeletedDate")
                        .HasColumnType("datetime2");

                    b.Property<bool>("IsDeleted")
                        .HasColumnType("bit");

                    b.Property<Guid?>("ModifiedBy")
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTime?>("ModifiedDate")
                        .HasColumnType("datetime2");

                    b.Property<string>("RfBusinessPlaceLocationDesc")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("RfBusinessPlaceLocationCode");

                    b.ToTable("RfBusinessPlaceLocations");
                });

            modelBuilder.Entity("NewLMS.UMKM.Data.Entities.RfBusinessPlaceOwnership", b =>
                {
                    b.Property<string>("BusinessPlaceOwnCode")
                        .HasColumnType("nvarchar(450)");

                    b.Property<string>("BusinessPlaceLocationCode")
                        .HasColumnType("nvarchar(450)");

                    b.Property<string>("BusinessPlaceOwnDesc")
                        .HasColumnType("nvarchar(max)");

                    b.Property<Guid>("CreatedBy")
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTime>("CreatedDate")
                        .HasColumnType("datetime2");

                    b.Property<Guid?>("DeletedBy")
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTime?>("DeletedDate")
                        .HasColumnType("datetime2");

                    b.Property<bool>("IsDeleted")
                        .HasColumnType("bit");

                    b.Property<Guid?>("ModifiedBy")
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTime?>("ModifiedDate")
                        .HasColumnType("datetime2");

                    b.HasKey("BusinessPlaceOwnCode");

                    b.HasIndex("BusinessPlaceLocationCode");

                    b.ToTable("RfBusinessPlaceOwnerships");
                });

            modelBuilder.Entity("NewLMS.UMKM.Data.Entities.RfBusinessPlaceType", b =>
                {
                    b.Property<string>("BusinessPlaceTypeCode")
                        .HasColumnType("nvarchar(450)");

                    b.Property<string>("BusinessPlaceTypeDesc")
                        .HasColumnType("nvarchar(max)");

                    b.Property<Guid>("CreatedBy")
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTime>("CreatedDate")
                        .HasColumnType("datetime2");

                    b.Property<Guid?>("DeletedBy")
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTime?>("DeletedDate")
                        .HasColumnType("datetime2");

                    b.Property<bool>("IsDeleted")
                        .HasColumnType("bit");

                    b.Property<Guid?>("ModifiedBy")
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTime?>("ModifiedDate")
                        .HasColumnType("datetime2");

                    b.HasKey("BusinessPlaceTypeCode");

                    b.ToTable("RfBusinessPlaceTypes");
                });

            modelBuilder.Entity("NewLMS.UMKM.Data.Entities.RfBusinessType", b =>
                {
                    b.Property<string>("BusinessTypeCode")
                        .HasColumnType("nvarchar(450)");

                    b.Property<string>("BusinessTypeDesc")
                        .HasColumnType("nvarchar(max)");

                    b.Property<Guid>("CreatedBy")
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTime>("CreatedDate")
                        .HasColumnType("datetime2");

                    b.Property<Guid?>("DeletedBy")
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTime?>("DeletedDate")
                        .HasColumnType("datetime2");

                    b.Property<bool>("IsDeleted")
                        .HasColumnType("bit");

                    b.Property<Guid?>("ModifiedBy")
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTime?>("ModifiedDate")
                        .HasColumnType("datetime2");

                    b.HasKey("BusinessTypeCode");

                    b.ToTable("RfBusinessTypes");
                });

            modelBuilder.Entity("NewLMS.UMKM.Data.Entities.RfCollateralBC", b =>
                {
                    b.Property<string>("CollateralCode")
                        .HasColumnType("nvarchar(450)");

                    b.Property<bool>("Active")
                        .HasColumnType("bit");

                    b.Property<string>("BeaGroup")
                        .HasColumnType("nvarchar(max)");

                    b.Property<bool>("Building")
                        .HasColumnType("bit");

                    b.Property<string>("CollateralDesc")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("CollateralType")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("ColllatealCatCode")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("CoreCode")
                        .HasColumnType("nvarchar(max)");

                    b.Property<Guid>("CreatedBy")
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTime>("CreatedDate")
                        .HasColumnType("datetime2");

                    b.Property<Guid?>("DeletedBy")
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTime?>("DeletedDate")
                        .HasColumnType("datetime2");

                    b.Property<bool>("IsDeleted")
                        .HasColumnType("bit");

                    b.Property<bool>("Land")
                        .HasColumnType("bit");

                    b.Property<Guid?>("ModifiedBy")
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTime?>("ModifiedDate")
                        .HasColumnType("datetime2");

                    b.HasKey("CollateralCode");

                    b.ToTable("RfCollateralBCs");
                });

            modelBuilder.Entity("NewLMS.UMKM.Data.Entities.RfCompanyType", b =>
                {
                    b.Property<string>("CompanyTypeId")
                        .HasColumnType("nvarchar(450)");

                    b.Property<int?>("CompanyGroupId")
                        .HasColumnType("int");

                    b.Property<string>("CompanyTypeDesc")
                        .HasColumnType("nvarchar(max)");

                    b.Property<Guid>("CreatedBy")
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTime>("CreatedDate")
                        .HasColumnType("datetime2");

                    b.Property<Guid?>("DeletedBy")
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTime?>("DeletedDate")
                        .HasColumnType("datetime2");

                    b.Property<bool>("IsDeleted")
                        .HasColumnType("bit");

                    b.Property<Guid?>("ModifiedBy")
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTime?>("ModifiedDate")
                        .HasColumnType("datetime2");

                    b.HasKey("CompanyTypeId");

                    b.HasIndex("CompanyGroupId");

                    b.ToTable("RfCompanyTypes");
                });

            modelBuilder.Entity("NewLMS.UMKM.Data.Entities.RfCondition", b =>
                {
                    b.Property<string>("ConditionCode")
                        .HasColumnType("nvarchar(450)");

                    b.Property<bool?>("Active")
                        .HasColumnType("bit");

                    b.Property<string>("ConditionCategory")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("ConditionDesc")
                        .HasColumnType("nvarchar(max)");

                    b.Property<Guid>("CreatedBy")
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTime>("CreatedDate")
                        .HasColumnType("datetime2");

                    b.Property<Guid?>("DeletedBy")
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTime?>("DeletedDate")
                        .HasColumnType("datetime2");

                    b.Property<bool>("IsDeleted")
                        .HasColumnType("bit");

                    b.Property<Guid?>("ModifiedBy")
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTime?>("ModifiedDate")
                        .HasColumnType("datetime2");

                    b.HasKey("ConditionCode");

                    b.ToTable("RfConditions");
                });

            modelBuilder.Entity("NewLMS.UMKM.Data.Entities.RfCreditNature", b =>
                {
                    b.Property<string>("CreditNatureCode")
                        .HasColumnType("nvarchar(450)");

                    b.Property<bool>("Active")
                        .HasColumnType("bit");

                    b.Property<string>("CoreCode")
                        .HasColumnType("nvarchar(max)");

                    b.Property<Guid>("CreatedBy")
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTime>("CreatedDate")
                        .HasColumnType("datetime2");

                    b.Property<string>("CreditNatureDesc")
                        .HasColumnType("nvarchar(max)");

                    b.Property<Guid?>("DeletedBy")
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTime?>("DeletedDate")
                        .HasColumnType("datetime2");

                    b.Property<bool>("IsDeleted")
                        .HasColumnType("bit");

                    b.Property<Guid?>("ModifiedBy")
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTime?>("ModifiedDate")
                        .HasColumnType("datetime2");

                    b.HasKey("CreditNatureCode");

                    b.ToTable("RfCreditNatures");
                });

            modelBuilder.Entity("NewLMS.UMKM.Data.Entities.RfCreditType", b =>
                {
                    b.Property<string>("CreditTypeCode")
                        .HasColumnType("nvarchar(450)");

                    b.Property<Guid>("CreatedBy")
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTime>("CreatedDate")
                        .HasColumnType("datetime2");

                    b.Property<bool?>("CreditAgreement")
                        .HasColumnType("bit");

                    b.Property<string>("CreditTypeDesc")
                        .HasColumnType("nvarchar(max)");

                    b.Property<Guid?>("DeletedBy")
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTime?>("DeletedDate")
                        .HasColumnType("datetime2");

                    b.Property<bool>("IsDeleted")
                        .HasColumnType("bit");

                    b.Property<Guid?>("ModifiedBy")
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTime?>("ModifiedDate")
                        .HasColumnType("datetime2");

                    b.HasKey("CreditTypeCode");

                    b.ToTable("RfCreditTypes");
                });

            modelBuilder.Entity("NewLMS.UMKM.Data.Entities.RfDecisionLeterType", b =>
                {
                    b.Property<string>("DecisionLeterTypeCode")
                        .HasColumnType("nvarchar(450)");

                    b.Property<Guid>("CreatedBy")
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTime>("CreatedDate")
                        .HasColumnType("datetime2");

                    b.Property<string>("DecisionLeterTypeDesc")
                        .HasColumnType("nvarchar(max)");

                    b.Property<Guid?>("DeletedBy")
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTime?>("DeletedDate")
                        .HasColumnType("datetime2");

                    b.Property<bool>("IsDeleted")
                        .HasColumnType("bit");

                    b.Property<Guid?>("ModifiedBy")
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTime?>("ModifiedDate")
                        .HasColumnType("datetime2");

                    b.HasKey("DecisionLeterTypeCode");

                    b.ToTable("RfDecisionLeterTypes");
                });

            modelBuilder.Entity("NewLMS.UMKM.Data.Entities.RfDecisionLetter", b =>
                {
                    b.Property<string>("DecisionLeterCode")
                        .HasColumnType("nvarchar(450)");

                    b.Property<Guid>("CreatedBy")
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTime>("CreatedDate")
                        .HasColumnType("datetime2");

                    b.Property<string>("DecisionLeterBy")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("DecisionLeterClausal")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime?>("DecisionLeterDate")
                        .HasColumnType("datetime2");

                    b.Property<string>("DecisionLeterDesc")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime?>("DecisionLeterExpDate")
                        .HasColumnType("datetime2");

                    b.Property<string>("DecisionLeterMatter")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("DecisionLeterNumber")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("DecisionLeterTypeCode")
                        .HasColumnType("nvarchar(450)");

                    b.Property<Guid?>("DeletedBy")
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTime?>("DeletedDate")
                        .HasColumnType("datetime2");

                    b.Property<bool>("IsDeleted")
                        .HasColumnType("bit");

                    b.Property<double?>("Limit")
                        .HasColumnType("float");

                    b.Property<Guid?>("ModifiedBy")
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTime?>("ModifiedDate")
                        .HasColumnType("datetime2");

                    b.HasKey("DecisionLeterCode");

                    b.HasIndex("DecisionLeterTypeCode");

                    b.ToTable("RfDecisionLetters");
                });

            modelBuilder.Entity("NewLMS.UMKM.Data.Entities.RfDecisionMaker", b =>
                {
                    b.Property<string>("DecisionMakerCode")
                        .HasColumnType("nvarchar(450)");

                    b.Property<Guid>("CreatedBy")
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTime>("CreatedDate")
                        .HasColumnType("datetime2");

                    b.Property<string>("DecisionMakerDescription")
                        .HasColumnType("nvarchar(max)");

                    b.Property<Guid?>("DeletedBy")
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTime?>("DeletedDate")
                        .HasColumnType("datetime2");

                    b.Property<bool>("IsDeleted")
                        .HasColumnType("bit");

                    b.Property<Guid?>("ModifiedBy")
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTime?>("ModifiedDate")
                        .HasColumnType("datetime2");

                    b.HasKey("DecisionMakerCode");

                    b.ToTable("RfDecisionMakers");
                });

            modelBuilder.Entity("NewLMS.UMKM.Data.Entities.RfDocument", b =>
                {
                    b.Property<string>("DocumentCode")
                        .HasColumnType("nvarchar(450)");

                    b.Property<bool>("Active")
                        .HasColumnType("bit");

                    b.Property<string>("CoreCode")
                        .HasColumnType("nvarchar(max)");

                    b.Property<Guid>("CreatedBy")
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTime>("CreatedDate")
                        .HasColumnType("datetime2");

                    b.Property<Guid?>("DeletedBy")
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTime?>("DeletedDate")
                        .HasColumnType("datetime2");

                    b.Property<string>("DocumentDesc")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int?>("Due")
                        .HasColumnType("int");

                    b.Property<string>("GroupCode")
                        .HasColumnType("nvarchar(max)");

                    b.Property<bool?>("ISTBO")
                        .HasColumnType("bit");

                    b.Property<bool>("IsDeleted")
                        .HasColumnType("bit");

                    b.Property<bool?>("ManDocNo")
                        .HasColumnType("bit");

                    b.Property<bool?>("Mandatory")
                        .HasColumnType("bit");

                    b.Property<Guid?>("ModifiedBy")
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTime?>("ModifiedDate")
                        .HasColumnType("datetime2");

                    b.HasKey("DocumentCode");

                    b.ToTable("RfDocuments");
                });

            modelBuilder.Entity("NewLMS.UMKM.Data.Entities.RfDocumentCollateral", b =>
                {
                    b.Property<Guid>("DocumentCollateralCode")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<bool>("Active")
                        .HasColumnType("bit");

                    b.Property<string>("CollateralCode")
                        .HasColumnType("nvarchar(450)");

                    b.Property<Guid>("CreatedBy")
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTime>("CreatedDate")
                        .HasColumnType("datetime2");

                    b.Property<Guid?>("DeletedBy")
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTime?>("DeletedDate")
                        .HasColumnType("datetime2");

                    b.Property<string>("DocumentCode")
                        .HasColumnType("nvarchar(450)");

                    b.Property<bool>("IsDeleted")
                        .HasColumnType("bit");

                    b.Property<Guid?>("ModifiedBy")
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTime?>("ModifiedDate")
                        .HasColumnType("datetime2");

                    b.HasKey("DocumentCollateralCode");

                    b.HasIndex("CollateralCode");

                    b.HasIndex("DocumentCode");

                    b.ToTable("RfDocumentCollaterals");
                });

            modelBuilder.Entity("NewLMS.UMKM.Data.Entities.RfEducation", b =>
                {
                    b.Property<string>("EducationCode")
                        .HasColumnType("nvarchar(450)");

                    b.Property<bool>("Active")
                        .HasColumnType("bit");

                    b.Property<string>("CoreCode")
                        .HasColumnType("nvarchar(max)");

                    b.Property<Guid>("CreatedBy")
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTime>("CreatedDate")
                        .HasColumnType("datetime2");

                    b.Property<Guid?>("DeletedBy")
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTime?>("DeletedDate")
                        .HasColumnType("datetime2");

                    b.Property<string>("EducationCodeSIKP")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("EducationDesc")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("EducationDescSIKP")
                        .HasColumnType("nvarchar(max)");

                    b.Property<bool>("IsDeleted")
                        .HasColumnType("bit");

                    b.Property<Guid?>("ModifiedBy")
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTime?>("ModifiedDate")
                        .HasColumnType("datetime2");

                    b.HasKey("EducationCode");

                    b.ToTable("RfEducations");
                });

            modelBuilder.Entity("NewLMS.UMKM.Data.Entities.RfGender", b =>
                {
                    b.Property<string>("GenderCode")
                        .HasColumnType("nvarchar(450)");

                    b.Property<bool>("Active")
                        .HasColumnType("bit");

                    b.Property<string>("CoreCode")
                        .HasColumnType("nvarchar(max)");

                    b.Property<Guid>("CreatedBy")
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTime>("CreatedDate")
                        .HasColumnType("datetime2");

                    b.Property<Guid?>("DeletedBy")
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTime?>("DeletedDate")
                        .HasColumnType("datetime2");

                    b.Property<string>("GenderCodeSIKP")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("GenderDesc")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("GenderDescSIKP")
                        .HasColumnType("nvarchar(max)");

                    b.Property<bool>("IsDeleted")
                        .HasColumnType("bit");

                    b.Property<Guid?>("ModifiedBy")
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTime?>("ModifiedDate")
                        .HasColumnType("datetime2");

                    b.HasKey("GenderCode");

                    b.ToTable("RfGenders");
                });

            modelBuilder.Entity("NewLMS.UMKM.Data.Entities.RfInstallmentType", b =>
                {
                    b.Property<string>("InstallmentTypeCode")
                        .HasColumnType("nvarchar(450)");

                    b.Property<Guid>("CreatedBy")
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTime>("CreatedDate")
                        .HasColumnType("datetime2");

                    b.Property<Guid?>("DeletedBy")
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTime?>("DeletedDate")
                        .HasColumnType("datetime2");

                    b.Property<string>("InstallmentTypeDesc")
                        .HasColumnType("nvarchar(max)");

                    b.Property<bool>("IsDeleted")
                        .HasColumnType("bit");

                    b.Property<Guid?>("ModifiedBy")
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTime?>("ModifiedDate")
                        .HasColumnType("datetime2");

                    b.HasKey("InstallmentTypeCode");

                    b.ToTable("RfInstallmentTypes");
                });

            modelBuilder.Entity("NewLMS.UMKM.Data.Entities.RfJob", b =>
                {
                    b.Property<string>("JobCode")
                        .HasColumnType("nvarchar(450)");

                    b.Property<bool>("Active")
                        .HasColumnType("bit");

                    b.Property<string>("CoreCode")
                        .HasColumnType("nvarchar(max)");

                    b.Property<Guid>("CreatedBy")
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTime>("CreatedDate")
                        .HasColumnType("datetime2");

                    b.Property<Guid?>("DeletedBy")
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTime?>("DeletedDate")
                        .HasColumnType("datetime2");

                    b.Property<bool>("IsDeleted")
                        .HasColumnType("bit");

                    b.Property<string>("JobCodeSIKP")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("JobDesc")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("JobDescSIKP")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("JobSCRType")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("JobType")
                        .HasColumnType("nvarchar(max)");

                    b.Property<Guid?>("ModifiedBy")
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTime?>("ModifiedDate")
                        .HasColumnType("datetime2");

                    b.Property<bool?>("Other")
                        .HasColumnType("bit");

                    b.Property<string>("ProductId")
                        .HasColumnType("nvarchar(450)");

                    b.Property<bool?>("Sensitive")
                        .HasColumnType("bit");

                    b.HasKey("JobCode");

                    b.HasIndex("ProductId");

                    b.ToTable("RfJobs");
                });

            modelBuilder.Entity("NewLMS.UMKM.Data.Entities.RfLinkAge", b =>
                {
                    b.Property<string>("LinkAgeCode")
                        .HasColumnType("nvarchar(450)");

                    b.Property<Guid>("CreatedBy")
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTime>("CreatedDate")
                        .HasColumnType("datetime2");

                    b.Property<Guid?>("DeletedBy")
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTime?>("DeletedDate")
                        .HasColumnType("datetime2");

                    b.Property<bool>("IsDeleted")
                        .HasColumnType("bit");

                    b.Property<string>("LinkAgeDesc")
                        .HasColumnType("nvarchar(max)");

                    b.Property<Guid?>("ModifiedBy")
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTime?>("ModifiedDate")
                        .HasColumnType("datetime2");

                    b.HasKey("LinkAgeCode");

                    b.ToTable("RfLinkAges");
                });

            modelBuilder.Entity("NewLMS.UMKM.Data.Entities.RfLinkAgeType", b =>
                {
                    b.Property<string>("LinkAgeTypeCode")
                        .HasColumnType("nvarchar(450)");

                    b.Property<Guid>("CreatedBy")
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTime>("CreatedDate")
                        .HasColumnType("datetime2");

                    b.Property<Guid?>("DeletedBy")
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTime?>("DeletedDate")
                        .HasColumnType("datetime2");

                    b.Property<bool>("IsDeleted")
                        .HasColumnType("bit");

                    b.Property<string>("LinkAgeTypeDesc")
                        .HasColumnType("nvarchar(max)");

                    b.Property<Guid?>("ModifiedBy")
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTime?>("ModifiedDate")
                        .HasColumnType("datetime2");

                    b.HasKey("LinkAgeTypeCode");

                    b.ToTable("RfLinkAgeTypes");
                });

            modelBuilder.Entity("NewLMS.UMKM.Data.Entities.RfLoanPurpose", b =>
                {
                    b.Property<string>("LoanPurposeCode")
                        .HasColumnType("nvarchar(450)");

                    b.Property<bool>("Active")
                        .HasColumnType("bit");

                    b.Property<string>("CoreCode")
                        .HasColumnType("nvarchar(max)");

                    b.Property<Guid>("CreatedBy")
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTime>("CreatedDate")
                        .HasColumnType("datetime2");

                    b.Property<Guid?>("DeletedBy")
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTime?>("DeletedDate")
                        .HasColumnType("datetime2");

                    b.Property<bool>("IsDeleted")
                        .HasColumnType("bit");

                    b.Property<string>("LoanPurposeDesc")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int?>("MaxProd")
                        .HasColumnType("int");

                    b.Property<Guid?>("ModifiedBy")
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTime?>("ModifiedDate")
                        .HasColumnType("datetime2");

                    b.HasKey("LoanPurposeCode");

                    b.ToTable("RfLoanPurposes");
                });

            modelBuilder.Entity("NewLMS.UMKM.Data.Entities.RfMappingCollateral", b =>
                {
                    b.Property<Guid>("MappingCollateralId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<bool>("Active")
                        .HasColumnType("bit");

                    b.Property<string>("CollateralCode")
                        .HasColumnType("nvarchar(450)");

                    b.Property<Guid>("CreatedBy")
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTime>("CreatedDate")
                        .HasColumnType("datetime2");

                    b.Property<Guid?>("DeletedBy")
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTime?>("DeletedDate")
                        .HasColumnType("datetime2");

                    b.Property<bool>("IsDeleted")
                        .HasColumnType("bit");

                    b.Property<Guid?>("ModifiedBy")
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTime?>("ModifiedDate")
                        .HasColumnType("datetime2");

                    b.Property<string>("ProductId")
                        .HasColumnType("nvarchar(450)");

                    b.HasKey("MappingCollateralId");

                    b.HasIndex("CollateralCode");

                    b.HasIndex("ProductId");

                    b.ToTable("RfMappingCollaterals");
                });

            modelBuilder.Entity("NewLMS.UMKM.Data.Entities.RfMappingTenor", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<Guid>("CreatedBy")
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTime>("CreatedDate")
                        .HasColumnType("datetime2");

                    b.Property<Guid?>("DeletedBy")
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTime?>("DeletedDate")
                        .HasColumnType("datetime2");

                    b.Property<bool>("IsDeleted")
                        .HasColumnType("bit");

                    b.Property<string>("LoanPurposeCode")
                        .HasColumnType("nvarchar(450)");

                    b.Property<Guid?>("ModifiedBy")
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTime?>("ModifiedDate")
                        .HasColumnType("datetime2");

                    b.Property<int?>("ParamApplicationTypeId")
                        .HasColumnType("int");

                    b.Property<string>("ProductId")
                        .HasColumnType("nvarchar(450)");

                    b.Property<string>("SiklusCode")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("SubProductId")
                        .HasColumnType("nvarchar(450)");

                    b.Property<string>("TenorCode")
                        .HasColumnType("nvarchar(450)");

                    b.HasKey("Id");

                    b.HasIndex("LoanPurposeCode");

                    b.HasIndex("ParamApplicationTypeId");

                    b.HasIndex("ProductId");

                    b.HasIndex("SubProductId");

                    b.HasIndex("TenorCode");

                    b.ToTable("RfMappingTenors");
                });

            modelBuilder.Entity("NewLMS.UMKM.Data.Entities.RfMarital", b =>
                {
                    b.Property<string>("MaritalCode")
                        .HasColumnType("nvarchar(450)");

                    b.Property<bool>("Active")
                        .HasColumnType("bit");

                    b.Property<string>("CoreCode")
                        .HasColumnType("nvarchar(max)");

                    b.Property<Guid>("CreatedBy")
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTime>("CreatedDate")
                        .HasColumnType("datetime2");

                    b.Property<Guid?>("DeletedBy")
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTime?>("DeletedDate")
                        .HasColumnType("datetime2");

                    b.Property<bool>("IsDeleted")
                        .HasColumnType("bit");

                    b.Property<string>("MaritalCodeSKIP")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("MaritalDesc")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("MaritalDescSKIP")
                        .HasColumnType("nvarchar(max)");

                    b.Property<Guid?>("ModifiedBy")
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTime?>("ModifiedDate")
                        .HasColumnType("datetime2");

                    b.Property<bool?>("WithSpouse")
                        .HasColumnType("bit");

                    b.HasKey("MaritalCode");

                    b.ToTable("RfMaritals");
                });

            modelBuilder.Entity("NewLMS.UMKM.Data.Entities.RfParameter", b =>
                {
                    b.Property<int>("ParameterId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("ParameterId"), 1L, 1);

                    b.Property<bool>("Active")
                        .HasColumnType("bit");

                    b.Property<Guid>("CreatedBy")
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTime>("CreatedDate")
                        .HasColumnType("datetime2");

                    b.Property<Guid?>("DeletedBy")
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTime?>("DeletedDate")
                        .HasColumnType("datetime2");

                    b.Property<string>("Description")
                        .HasColumnType("nvarchar(max)");

                    b.Property<bool>("IsDeleted")
                        .HasColumnType("bit");

                    b.Property<Guid?>("ModifiedBy")
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTime?>("ModifiedDate")
                        .HasColumnType("datetime2");

                    b.Property<string>("Name")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("ParameterId");

                    b.ToTable("RfParameters");
                });

            modelBuilder.Entity("NewLMS.UMKM.Data.Entities.RfParameterDetail", b =>
                {
                    b.Property<int>("ParameterDetailId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("ParameterDetailId"), 1L, 1);

                    b.Property<bool>("Active")
                        .HasColumnType("bit");

                    b.Property<string>("Code")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Description")
                        .HasColumnType("nvarchar(max)");

                    b.Property<bool>("IsDeleted")
                        .HasColumnType("bit");

                    b.Property<string>("Name")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("Order")
                        .HasColumnType("int");

                    b.Property<int>("ParameterId")
                        .HasColumnType("int");

                    b.HasKey("ParameterDetailId");

                    b.HasIndex("ParameterId");

                    b.ToTable("RfParameterDetails");
                });

            modelBuilder.Entity("NewLMS.UMKM.Data.Entities.RfPlacementCountry", b =>
                {
                    b.Property<string>("PlacementCountryCode")
                        .HasColumnType("nvarchar(450)");

                    b.Property<bool?>("Active")
                        .HasColumnType("bit");

                    b.Property<string>("CoreCode")
                        .HasColumnType("nvarchar(max)");

                    b.Property<Guid>("CreatedBy")
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTime>("CreatedDate")
                        .HasColumnType("datetime2");

                    b.Property<Guid?>("DeletedBy")
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTime?>("DeletedDate")
                        .HasColumnType("datetime2");

                    b.Property<bool>("IsDeleted")
                        .HasColumnType("bit");

                    b.Property<double?>("Kurs")
                        .HasColumnType("float");

                    b.Property<Guid?>("ModifiedBy")
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTime?>("ModifiedDate")
                        .HasColumnType("datetime2");

                    b.Property<string>("PlacementCountryDesc")
                        .HasColumnType("nvarchar(max)");

                    b.Property<bool?>("ShowKUR")
                        .HasColumnType("bit");

                    b.HasKey("PlacementCountryCode");

                    b.ToTable("RfPlacementCountries");
                });

            modelBuilder.Entity("NewLMS.UMKM.Data.Entities.RfProduct", b =>
                {
                    b.Property<string>("ProductId")
                        .HasColumnType("nvarchar(450)");

                    b.Property<bool>("Active")
                        .HasColumnType("bit");

                    b.Property<string>("CoreCode")
                        .HasColumnType("nvarchar(max)");

                    b.Property<Guid>("CreatedBy")
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTime>("CreatedDate")
                        .HasColumnType("datetime2");

                    b.Property<double>("DefAdminFee")
                        .HasColumnType("float");

                    b.Property<string>("DefIntType")
                        .HasColumnType("nvarchar(max)");

                    b.Property<double>("DefInterest")
                        .HasColumnType("float");

                    b.Property<double>("DefProvPCTFee")
                        .HasColumnType("float");

                    b.Property<int>("DefTenor")
                        .HasColumnType("int");

                    b.Property<Guid?>("DeletedBy")
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTime?>("DeletedDate")
                        .HasColumnType("datetime2");

                    b.Property<bool>("IsDeleted")
                        .HasColumnType("bit");

                    b.Property<double>("LimitAppR")
                        .HasColumnType("float");

                    b.Property<double>("MaxInterest")
                        .HasColumnType("float");

                    b.Property<double>("MaxLimit")
                        .HasColumnType("float");

                    b.Property<int>("MaxTenor")
                        .HasColumnType("int");

                    b.Property<double>("MinInterest")
                        .HasColumnType("float");

                    b.Property<double>("MinLimit")
                        .HasColumnType("float");

                    b.Property<Guid?>("ModifiedBy")
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTime?>("ModifiedDate")
                        .HasColumnType("datetime2");

                    b.Property<string>("ProductDesc")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("ProductType")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("ProductId");

                    b.ToTable("RfProducts");
                });

            modelBuilder.Entity("NewLMS.UMKM.Data.Entities.RfRelationCol", b =>
                {
                    b.Property<string>("RelationColCode")
                        .HasColumnType("nvarchar(450)");

                    b.Property<bool>("Active")
                        .HasColumnType("bit");

                    b.Property<string>("CoreCode")
                        .HasColumnType("nvarchar(max)");

                    b.Property<Guid>("CreatedBy")
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTime>("CreatedDate")
                        .HasColumnType("datetime2");

                    b.Property<Guid?>("DeletedBy")
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTime?>("DeletedDate")
                        .HasColumnType("datetime2");

                    b.Property<bool>("IsDeleted")
                        .HasColumnType("bit");

                    b.Property<Guid?>("ModifiedBy")
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTime?>("ModifiedDate")
                        .HasColumnType("datetime2");

                    b.Property<string>("RelationColDesc")
                        .HasColumnType("nvarchar(max)");

                    b.Property<bool>("Spouse")
                        .HasColumnType("bit");

                    b.HasKey("RelationColCode");

                    b.ToTable("RfRelationCols");
                });

            modelBuilder.Entity("NewLMS.UMKM.Data.Entities.RfSandiBI", b =>
                {
                    b.Property<string>("RfSandiBIId")
                        .HasMaxLength(10)
                        .HasColumnType("nvarchar(10)");

                    b.Property<bool>("Active")
                        .HasColumnType("bit");

                    b.Property<string>("BICode")
                        .HasMaxLength(10)
                        .HasColumnType("nvarchar(10)");

                    b.Property<string>("BIDesc")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("BIGroup")
                        .IsRequired()
                        .HasMaxLength(3)
                        .HasColumnType("nvarchar(3)");

                    b.Property<string>("BIType")
                        .HasMaxLength(5)
                        .HasColumnType("nvarchar(5)");

                    b.Property<string>("CategoryCode")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("CoreCode")
                        .HasMaxLength(10)
                        .HasColumnType("nvarchar(10)");

                    b.Property<Guid>("CreatedBy")
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTime>("CreatedDate")
                        .HasColumnType("datetime2");

                    b.Property<Guid?>("DeletedBy")
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTime?>("DeletedDate")
                        .HasColumnType("datetime2");

                    b.Property<bool>("IsDeleted")
                        .HasColumnType("bit");

                    b.Property<string>("LBU2Code")
                        .HasColumnType("nvarchar(max)");

                    b.Property<Guid?>("ModifiedBy")
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTime?>("ModifiedDate")
                        .HasColumnType("datetime2");

                    b.HasKey("RfSandiBIId");

                    b.HasIndex("BIGroup");

                    b.ToTable("RfSandiBIs");
                });

            modelBuilder.Entity("NewLMS.UMKM.Data.Entities.RfSandiBIGroup", b =>
                {
                    b.Property<string>("BIGroup")
                        .HasMaxLength(3)
                        .HasColumnType("nvarchar(3)");

                    b.Property<string>("BIDesc")
                        .HasColumnType("nvarchar(max)");

                    b.Property<Guid>("CreatedBy")
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTime>("CreatedDate")
                        .HasColumnType("datetime2");

                    b.Property<Guid?>("DeletedBy")
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTime?>("DeletedDate")
                        .HasColumnType("datetime2");

                    b.Property<bool>("IsDeleted")
                        .HasColumnType("bit");

                    b.Property<Guid?>("ModifiedBy")
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTime?>("ModifiedDate")
                        .HasColumnType("datetime2");

                    b.HasKey("BIGroup");

                    b.ToTable("RfSandiBIGroups");
                });

            modelBuilder.Entity("NewLMS.UMKM.Data.Entities.RfScPosition", b =>
                {
                    b.Property<string>("ScPositionCode")
                        .HasColumnType("nvarchar(450)");

                    b.Property<bool>("Active")
                        .HasColumnType("bit");

                    b.Property<string>("CoreCode")
                        .HasColumnType("nvarchar(max)");

                    b.Property<Guid>("CreatedBy")
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTime>("CreatedDate")
                        .HasColumnType("datetime2");

                    b.Property<string>("DecisionLeterCode")
                        .HasColumnType("nvarchar(450)");

                    b.Property<Guid?>("DeletedBy")
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTime?>("DeletedDate")
                        .HasColumnType("datetime2");

                    b.Property<bool>("IsDeleted")
                        .HasColumnType("bit");

                    b.Property<Guid?>("ModifiedBy")
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTime?>("ModifiedDate")
                        .HasColumnType("datetime2");

                    b.Property<string>("SKCode")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("ScPositionDesc")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("ScPositionCode");

                    b.HasIndex("DecisionLeterCode");

                    b.ToTable("RfScPositions");
                });

            modelBuilder.Entity("NewLMS.UMKM.Data.Entities.RfSectorLBU1", b =>
                {
                    b.Property<string>("Code")
                        .HasColumnType("nvarchar(450)");

                    b.Property<string>("CoreCode")
                        .HasColumnType("nvarchar(max)");

                    b.Property<Guid>("CreatedBy")
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTime>("CreatedDate")
                        .HasColumnType("datetime2");

                    b.Property<Guid?>("DeletedBy")
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTime?>("DeletedDate")
                        .HasColumnType("datetime2");

                    b.Property<string>("Description")
                        .HasColumnType("nvarchar(max)");

                    b.Property<bool?>("HideKUR")
                        .HasColumnType("bit");

                    b.Property<bool>("IsDeleted")
                        .HasColumnType("bit");

                    b.Property<bool?>("IsShowing")
                        .HasColumnType("bit");

                    b.Property<Guid?>("ModifiedBy")
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTime?>("ModifiedDate")
                        .HasColumnType("datetime2");

                    b.HasKey("Code");

                    b.ToTable("RfSectorLBU1");
                });

            modelBuilder.Entity("NewLMS.UMKM.Data.Entities.RfSectorLBU2", b =>
                {
                    b.Property<string>("Code")
                        .HasColumnType("nvarchar(450)");

                    b.Property<string>("CoreCode")
                        .HasColumnType("nvarchar(max)");

                    b.Property<Guid>("CreatedBy")
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTime>("CreatedDate")
                        .HasColumnType("datetime2");

                    b.Property<Guid?>("DeletedBy")
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTime?>("DeletedDate")
                        .HasColumnType("datetime2");

                    b.Property<string>("Description")
                        .HasColumnType("nvarchar(max)");

                    b.Property<bool>("IsDeleted")
                        .HasColumnType("bit");

                    b.Property<bool>("IsShowing")
                        .HasColumnType("bit");

                    b.Property<string>("LBCode1")
                        .HasColumnType("nvarchar(max)");

                    b.Property<Guid?>("ModifiedBy")
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTime?>("ModifiedDate")
                        .HasColumnType("datetime2");

                    b.Property<string>("RfSectorLBU1Code")
                        .HasColumnType("nvarchar(450)");

                    b.HasKey("Code");

                    b.HasIndex("RfSectorLBU1Code");

                    b.ToTable("RfSectorLBU2");
                });

            modelBuilder.Entity("NewLMS.UMKM.Data.Entities.RfSectorLBU3", b =>
                {
                    b.Property<string>("Code")
                        .HasColumnType("nvarchar(450)");

                    b.Property<string>("CategoryCode")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("CoreCode")
                        .HasColumnType("nvarchar(max)");

                    b.Property<Guid>("CreatedBy")
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTime>("CreatedDate")
                        .HasColumnType("datetime2");

                    b.Property<Guid?>("DeletedBy")
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTime?>("DeletedDate")
                        .HasColumnType("datetime2");

                    b.Property<string>("Description")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("Group")
                        .HasColumnType("int");

                    b.Property<bool>("IsDeleted")
                        .HasColumnType("bit");

                    b.Property<bool>("IsShowing")
                        .HasColumnType("bit");

                    b.Property<string>("LBCode2")
                        .HasColumnType("nvarchar(max)");

                    b.Property<Guid?>("ModifiedBy")
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTime?>("ModifiedDate")
                        .HasColumnType("datetime2");

                    b.Property<string>("RfSectorLBU2Code")
                        .HasColumnType("nvarchar(450)");

                    b.Property<string>("Type")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Code");

                    b.HasIndex("RfSectorLBU2Code");

                    b.ToTable("RfSectorLBU3");
                });

            modelBuilder.Entity("NewLMS.UMKM.Data.Entities.RfStage", b =>
                {
                    b.Property<Guid>("StageId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier")
                        .HasDefaultValueSql("NEWID()");

                    b.Property<string>("Code")
                        .HasMaxLength(5)
                        .HasColumnType("nvarchar(5)");

                    b.Property<Guid>("CreatedBy")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier")
                        .HasDefaultValue(new Guid("113005de-06bc-44cb-b97f-a9c65c0c5465"));

                    b.Property<DateTime>("CreatedDate")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("datetime2")
                        .HasDefaultValueSql("GETDATE()");

                    b.Property<Guid?>("DeletedBy")
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTime?>("DeletedDate")
                        .HasColumnType("datetime2");

                    b.Property<string>("Description")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("GroupName")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("GroupStage")
                        .HasColumnType("int");

                    b.Property<int?>("GroupStageDigiloan")
                        .HasColumnType("int");

                    b.Property<bool>("IsDeleted")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bit")
                        .HasDefaultValue(false);

                    b.Property<bool?>("IsShowInTracking")
                        .HasColumnType("bit");

                    b.Property<Guid?>("ModifiedBy")
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTime?>("ModifiedDate")
                        .HasColumnType("datetime2");

                    b.HasKey("StageId");

                    b.ToTable("RfStages");
                });

            modelBuilder.Entity("NewLMS.UMKM.Data.Entities.RfSubProduct", b =>
                {
                    b.Property<string>("SubProductId")
                        .HasColumnType("nvarchar(450)");

                    b.Property<bool>("Active")
                        .HasColumnType("bit");

                    b.Property<string>("CoreCode")
                        .HasColumnType("nvarchar(max)");

                    b.Property<Guid>("CreatedBy")
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTime>("CreatedDate")
                        .HasColumnType("datetime2");

                    b.Property<Guid?>("DeletedBy")
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTime?>("DeletedDate")
                        .HasColumnType("datetime2");

                    b.Property<bool>("IsDeleted")
                        .HasColumnType("bit");

                    b.Property<string>("LoanPurposeCode")
                        .HasColumnType("nvarchar(450)");

                    b.Property<bool?>("MandNPWP")
                        .HasColumnType("bit");

                    b.Property<Guid?>("ModifiedBy")
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTime?>("ModifiedDate")
                        .HasColumnType("datetime2");

                    b.Property<string>("ProductId")
                        .HasColumnType("nvarchar(450)");

                    b.Property<string>("SIKPParentSkema")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("SIKPSkema")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("SubProductDesc")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("SubProductId");

                    b.HasIndex("LoanPurposeCode");

                    b.HasIndex("ProductId");

                    b.ToTable("RfSubProducts");
                });

            modelBuilder.Entity("NewLMS.UMKM.Data.Entities.RfTenor", b =>
                {
                    b.Property<string>("TenorCode")
                        .HasColumnType("nvarchar(450)");

                    b.Property<bool>("Active")
                        .HasColumnType("bit");

                    b.Property<string>("CoreCode")
                        .HasColumnType("nvarchar(max)");

                    b.Property<Guid>("CreatedBy")
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTime>("CreatedDate")
                        .HasColumnType("datetime2");

                    b.Property<Guid?>("DeletedBy")
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTime?>("DeletedDate")
                        .HasColumnType("datetime2");

                    b.Property<int?>("Due")
                        .HasColumnType("int");

                    b.Property<bool?>("ISTBO")
                        .HasColumnType("bit");

                    b.Property<bool>("IsDeleted")
                        .HasColumnType("bit");

                    b.Property<bool?>("ManDocNo")
                        .HasColumnType("bit");

                    b.Property<bool?>("Mandatory")
                        .HasColumnType("bit");

                    b.Property<Guid?>("ModifiedBy")
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTime?>("ModifiedDate")
                        .HasColumnType("datetime2");

                    b.Property<string>("ProductId")
                        .HasColumnType("nvarchar(450)");

                    b.Property<int?>("Tenor")
                        .HasColumnType("int");

                    b.Property<string>("TenorDesc")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("TenorCode");

                    b.HasIndex("ProductId");

                    b.ToTable("RfTenors");
                });

            modelBuilder.Entity("NewLMS.UMKM.Data.Entities.RfTransportationType", b =>
                {
                    b.Property<string>("TransportationTypeCode")
                        .HasColumnType("nvarchar(450)");

                    b.Property<Guid>("CreatedBy")
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTime>("CreatedDate")
                        .HasColumnType("datetime2");

                    b.Property<Guid?>("DeletedBy")
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTime?>("DeletedDate")
                        .HasColumnType("datetime2");

                    b.Property<bool>("IsDeleted")
                        .HasColumnType("bit");

                    b.Property<Guid?>("ModifiedBy")
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTime?>("ModifiedDate")
                        .HasColumnType("datetime2");

                    b.Property<string>("TransportationTypeDesc")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("TransportationTypeCode");

                    b.ToTable("RfTransportationTypes");
                });

            modelBuilder.Entity("NewLMS.UMKM.Data.Entities.RfVehClass", b =>
                {
                    b.Property<string>("VehClassCode")
                        .HasColumnType("nvarchar(450)");

                    b.Property<bool>("Active")
                        .HasColumnType("bit");

                    b.Property<string>("CoreCode")
                        .HasColumnType("nvarchar(max)");

                    b.Property<Guid>("CreatedBy")
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTime>("CreatedDate")
                        .HasColumnType("datetime2");

                    b.Property<Guid?>("DeletedBy")
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTime?>("DeletedDate")
                        .HasColumnType("datetime2");

                    b.Property<bool>("IsDeleted")
                        .HasColumnType("bit");

                    b.Property<Guid?>("ModifiedBy")
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTime?>("ModifiedDate")
                        .HasColumnType("datetime2");

                    b.Property<string>("VehClassDesc")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("VehCode")
                        .HasColumnType("nvarchar(450)");

                    b.Property<string>("VehMakerCode")
                        .HasColumnType("nvarchar(450)");

                    b.Property<string>("VehModelCode")
                        .HasColumnType("nvarchar(450)");

                    b.HasKey("VehClassCode");

                    b.HasIndex("VehCode");

                    b.HasIndex("VehMakerCode");

                    b.HasIndex("VehModelCode");

                    b.ToTable("RfVehClasss");
                });

            modelBuilder.Entity("NewLMS.UMKM.Data.Entities.RfVehCountry", b =>
                {
                    b.Property<string>("VehCountryCode")
                        .HasColumnType("nvarchar(450)");

                    b.Property<string>("Active")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("CoreCode")
                        .HasColumnType("nvarchar(max)");

                    b.Property<Guid>("CreatedBy")
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTime>("CreatedDate")
                        .HasColumnType("datetime2");

                    b.Property<Guid?>("DeletedBy")
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTime?>("DeletedDate")
                        .HasColumnType("datetime2");

                    b.Property<bool>("IsDeleted")
                        .HasColumnType("bit");

                    b.Property<Guid?>("ModifiedBy")
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTime?>("ModifiedDate")
                        .HasColumnType("datetime2");

                    b.Property<string>("VehCountryDesc")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("VehCountryCode");

                    b.ToTable("RfVehCountries");
                });

            modelBuilder.Entity("NewLMS.UMKM.Data.Entities.RfVehMaker", b =>
                {
                    b.Property<string>("VehMakerCode")
                        .HasColumnType("nvarchar(450)");

                    b.Property<bool>("Active")
                        .HasColumnType("bit");

                    b.Property<string>("CollateralCode")
                        .HasColumnType("nvarchar(450)");

                    b.Property<string>("CoreCode")
                        .HasColumnType("nvarchar(max)");

                    b.Property<Guid>("CreatedBy")
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTime>("CreatedDate")
                        .HasColumnType("datetime2");

                    b.Property<Guid?>("DeletedBy")
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTime?>("DeletedDate")
                        .HasColumnType("datetime2");

                    b.Property<bool>("IsDeleted")
                        .HasColumnType("bit");

                    b.Property<Guid?>("ModifiedBy")
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTime?>("ModifiedDate")
                        .HasColumnType("datetime2");

                    b.Property<string>("VehCode")
                        .HasColumnType("nvarchar(450)");

                    b.Property<string>("VehCountryCode")
                        .HasColumnType("nvarchar(450)");

                    b.Property<string>("VehmakerDesc")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("VehMakerCode");

                    b.HasIndex("CollateralCode");

                    b.HasIndex("VehCode");

                    b.HasIndex("VehCountryCode");

                    b.ToTable("RfVehMakers");
                });

            modelBuilder.Entity("NewLMS.UMKM.Data.Entities.RfVehModel", b =>
                {
                    b.Property<string>("VehModelCode")
                        .HasColumnType("nvarchar(450)");

                    b.Property<bool>("Active")
                        .HasColumnType("bit");

                    b.Property<string>("CoreCode")
                        .HasColumnType("nvarchar(max)");

                    b.Property<Guid>("CreatedBy")
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTime>("CreatedDate")
                        .HasColumnType("datetime2");

                    b.Property<Guid?>("DeletedBy")
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTime?>("DeletedDate")
                        .HasColumnType("datetime2");

                    b.Property<bool>("IsDeleted")
                        .HasColumnType("bit");

                    b.Property<Guid?>("ModifiedBy")
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTime?>("ModifiedDate")
                        .HasColumnType("datetime2");

                    b.Property<string>("VehModelDesc")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("VehModelCode");

                    b.ToTable("RfVehModels");
                });

            modelBuilder.Entity("NewLMS.UMKM.Data.Entities.RfVehType", b =>
                {
                    b.Property<string>("VehCode")
                        .HasColumnType("nvarchar(450)");

                    b.Property<bool>("Active")
                        .HasColumnType("bit");

                    b.Property<int>("CoreCode")
                        .HasColumnType("int");

                    b.Property<Guid>("CreatedBy")
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTime>("CreatedDate")
                        .HasColumnType("datetime2");

                    b.Property<Guid?>("DeletedBy")
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTime?>("DeletedDate")
                        .HasColumnType("datetime2");

                    b.Property<bool>("IsDeleted")
                        .HasColumnType("bit");

                    b.Property<Guid?>("ModifiedBy")
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTime?>("ModifiedDate")
                        .HasColumnType("datetime2");

                    b.Property<string>("VehDesc")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("VehCode");

                    b.ToTable("RfVehTypes");
                });

            modelBuilder.Entity("NewLMS.UMKM.Data.Entities.RfZipCode", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"), 1L, 1);

                    b.Property<bool>("Active")
                        .HasColumnType("bit");

                    b.Property<Guid>("CreatedBy")
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTime>("CreatedDate")
                        .HasColumnType("datetime2");

                    b.Property<string>("Dati_II")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Dati_II_Code")
                        .HasColumnType("nvarchar(max)");

                    b.Property<Guid?>("DeletedBy")
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTime?>("DeletedDate")
                        .HasColumnType("datetime2");

                    b.Property<bool>("IsDeleted")
                        .HasColumnType("bit");

                    b.Property<string>("Kecamatan")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Kelurahan")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("KodeKabKota")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("KodeKabupaten")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("KodeKecamatan")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("KodeKelurahan")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("KodeProvinsi")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Kota")
                        .HasColumnType("nvarchar(max)");

                    b.Property<Guid?>("ModifiedBy")
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTime?>("ModifiedDate")
                        .HasColumnType("datetime2");

                    b.Property<string>("Negara")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Provinsi")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("SandiWilayahBI")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("Seq")
                        .HasColumnType("int");

                    b.Property<string>("ZipCode")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("ZipDesc")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.ToTable("RfZipCodes");
                });

            modelBuilder.Entity("NewLMS.UMKM.Data.Entities.SIKP", b =>
                {
                    b.Property<Guid>("Id")
                        .HasColumnType("uniqueidentifier");

                    b.Property<Guid>("CreatedBy")
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTime>("CreatedDate")
                        .HasColumnType("datetime2");

                    b.Property<Guid?>("DeletedBy")
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTime?>("DeletedDate")
                        .HasColumnType("datetime2");

                    b.Property<bool>("IsDeleted")
                        .HasColumnType("bit");

                    b.Property<Guid?>("ModifiedBy")
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTime?>("ModifiedDate")
                        .HasColumnType("datetime2");

                    b.Property<string>("RegistrationNumber")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.ToTable("SIKPs");
                });

            modelBuilder.Entity("NewLMS.UMKM.Data.Entities.SIKPRequest", b =>
                {
                    b.Property<Guid>("Id")
                        .HasColumnType("uniqueidentifier");

                    b.Property<Guid>("CreatedBy")
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTime>("CreatedDate")
                        .HasColumnType("datetime2");

                    b.Property<DateTime>("DateOfBirth")
                        .HasColumnType("datetime2");

                    b.Property<string>("DebtorAddress")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("DebtorCity")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("DebtorCompanyAddress")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("DebtorCompanyCity")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("DebtorCompanyCollaterals")
                        .HasColumnType("nvarchar(max)");

                    b.Property<long>("DebtorCompanyCreditValue")
                        .HasColumnType("bigint");

                    b.Property<string>("DebtorCompanyDistrict")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("DebtorCompanyEmployee")
                        .HasColumnType("int");

                    b.Property<DateTime>("DebtorCompanyEstablishmentDate")
                        .HasColumnType("datetime2");

                    b.Property<string>("DebtorCompanyEstablishmentDeedNumber")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("DebtorCompanyLingkageId")
                        .HasColumnType("nvarchar(450)");

                    b.Property<string>("DebtorCompanyNeighborhoods")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("DebtorCompanyPermit")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("DebtorCompanyPhone")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("DebtorCompanyPreviousSubsidy")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("DebtorCompanyProvince")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int?>("DebtorCompanyRfZipCodeId")
                        .HasColumnType("int");

                    b.Property<bool>("DebtorCompanySubisdyStatus")
                        .HasColumnType("bit");

                    b.Property<long>("DebtorCompanyVentureCapital")
                        .HasColumnType("bigint");

                    b.Property<string>("DebtorCompanyZipCode")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("DebtorCompanyZipCodeId")
                        .HasColumnType("int");

                    b.Property<string>("DebtorDistrict")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("DebtorEducationId")
                        .HasColumnType("nvarchar(450)");

                    b.Property<string>("DebtorGenderId")
                        .HasColumnType("nvarchar(450)");

                    b.Property<string>("DebtorMaritalStatusId")
                        .HasColumnType("nvarchar(450)");

                    b.Property<string>("DebtorNPWP")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("DebtorNeighborhoods")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("DebtorNoIdentity")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("DebtorProvince")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("DebtorSectorLBU3Code")
                        .HasColumnType("nvarchar(450)");

                    b.Property<string>("DebtorZipCode")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("DebtorZipCodeId")
                        .HasColumnType("int");

                    b.Property<Guid?>("DeletedBy")
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTime?>("DeletedDate")
                        .HasColumnType("datetime2");

                    b.Property<string>("Fullname")
                        .HasColumnType("nvarchar(max)");

                    b.Property<bool>("IsDeleted")
                        .HasColumnType("bit");

                    b.Property<Guid?>("ModifiedBy")
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTime?>("ModifiedDate")
                        .HasColumnType("datetime2");

                    b.HasKey("Id");

                    b.HasIndex("DebtorCompanyLingkageId");

                    b.HasIndex("DebtorCompanyRfZipCodeId");

                    b.HasIndex("DebtorEducationId");

                    b.HasIndex("DebtorGenderId");

                    b.HasIndex("DebtorMaritalStatusId");

                    b.HasIndex("DebtorSectorLBU3Code");

                    b.HasIndex("DebtorZipCodeId");

                    b.ToTable("SIKPRequests");
                });

            modelBuilder.Entity("NewLMS.UMKM.Data.Entities.SIKPResponse", b =>
                {
                    b.Property<Guid>("Id")
                        .HasColumnType("uniqueidentifier");

                    b.Property<Guid>("CreatedBy")
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTime>("CreatedDate")
                        .HasColumnType("datetime2");

                    b.Property<DateTime>("DateOfBirth")
                        .HasColumnType("datetime2");

                    b.Property<string>("DebtorAddress")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("DebtorCity")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("DebtorCompanyAddress")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("DebtorCompanyCity")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("DebtorCompanyCollaterals")
                        .HasColumnType("nvarchar(max)");

                    b.Property<long>("DebtorCompanyCreditValue")
                        .HasColumnType("bigint");

                    b.Property<string>("DebtorCompanyDistrict")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("DebtorCompanyEmployee")
                        .HasColumnType("int");

                    b.Property<DateTime>("DebtorCompanyEstablishmentDate")
                        .HasColumnType("datetime2");

                    b.Property<string>("DebtorCompanyEstablishmentDeedNumber")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("DebtorCompanyLingkageId")
                        .HasColumnType("nvarchar(450)");

                    b.Property<string>("DebtorCompanyNeighborhoods")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("DebtorCompanyPermit")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("DebtorCompanyPhone")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("DebtorCompanyPreviousSubsidy")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("DebtorCompanyProvince")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int?>("DebtorCompanyRfZipCodeId")
                        .HasColumnType("int");

                    b.Property<bool>("DebtorCompanySubisdyStatus")
                        .HasColumnType("bit");

                    b.Property<long>("DebtorCompanyVentureCapital")
                        .HasColumnType("bigint");

                    b.Property<string>("DebtorCompanyZipCode")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("DebtorCompanyZipCodeId")
                        .HasColumnType("int");

                    b.Property<string>("DebtorDistrict")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("DebtorEducationId")
                        .HasColumnType("nvarchar(450)");

                    b.Property<string>("DebtorGenderId")
                        .HasColumnType("nvarchar(450)");

                    b.Property<string>("DebtorMaritalStatusId")
                        .HasColumnType("nvarchar(450)");

                    b.Property<string>("DebtorNPWP")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("DebtorNeighborhoods")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("DebtorNoIdentity")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("DebtorProvince")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("DebtorSectorLBU3Code")
                        .HasColumnType("nvarchar(450)");

                    b.Property<string>("DebtorZipCode")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("DebtorZipCodeId")
                        .HasColumnType("int");

                    b.Property<Guid?>("DeletedBy")
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTime?>("DeletedDate")
                        .HasColumnType("datetime2");

                    b.Property<string>("Fullname")
                        .HasColumnType("nvarchar(max)");

                    b.Property<bool>("IsDeleted")
                        .HasColumnType("bit");

                    b.Property<Guid?>("ModifiedBy")
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTime?>("ModifiedDate")
                        .HasColumnType("datetime2");

                    b.HasKey("Id");

                    b.HasIndex("DebtorCompanyLingkageId");

                    b.HasIndex("DebtorCompanyRfZipCodeId");

                    b.HasIndex("DebtorEducationId");

                    b.HasIndex("DebtorGenderId");

                    b.HasIndex("DebtorMaritalStatusId");

                    b.HasIndex("DebtorSectorLBU3Code");

                    b.HasIndex("DebtorZipCodeId");

                    b.ToTable("SIKPResponses");
                });

            modelBuilder.Entity("NewLMS.UMKM.Data.Entities.SLIKRequestDebtor", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("ApplicationStatus")
                        .HasColumnType("nvarchar(max)");

                    b.Property<Guid>("CreatedBy")
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTime>("CreatedDate")
                        .HasColumnType("datetime2");

                    b.Property<DateTime>("DateOfBirth")
                        .HasColumnType("datetime2");

                    b.Property<Guid?>("DeletedBy")
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTime?>("DeletedDate")
                        .HasColumnType("datetime2");

                    b.Property<DateTime?>("EstablishedDate")
                        .HasColumnType("datetime2");

                    b.Property<string>("EstablishedLocation")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Fullname")
                        .HasColumnType("nvarchar(max)");

                    b.Property<bool>("IsDeleted")
                        .HasColumnType("bit");

                    b.Property<string>("KodeRefPengguna")
                        .HasColumnType("nvarchar(max)");

                    b.Property<Guid?>("ModifiedBy")
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTime?>("ModifiedDate")
                        .HasColumnType("datetime2");

                    b.Property<string>("NPWP")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("NoIdentity")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("PlaceOfBirth")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime>("RequestDate")
                        .HasColumnType("datetime2");

                    b.Property<bool>("RoboSlik")
                        .HasColumnType("bit");

                    b.Property<int>("SLIKDebtorType")
                        .HasColumnType("int");

                    b.Property<Guid?>("SLIKDocumentUrlId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<Guid>("SLIKRequestId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("SLIKResult")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("TujuanPermintaan")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.HasIndex("SLIKDebtorType");

                    b.HasIndex("SLIKDocumentUrlId");

                    b.HasIndex("SLIKRequestId");

                    b.ToTable("SLIKRequestDebtors");
                });

            modelBuilder.Entity("NewLMS.UMKM.Data.Entities.UserDevice", b =>
                {
                    b.Property<Guid>("UserDeviceId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<Guid>("CreatedBy")
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTime>("CreatedDate")
                        .HasColumnType("datetime2");

                    b.Property<Guid?>("DeletedBy")
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTime?>("DeletedDate")
                        .HasColumnType("datetime2");

                    b.Property<string>("DeviceId")
                        .HasColumnType("nvarchar(max)");

                    b.Property<bool>("IsDeleted")
                        .HasColumnType("bit");

                    b.Property<decimal>("Langitude")
                        .HasPrecision(9, 6)
                        .HasColumnType("decimal(9,6)");

                    b.Property<decimal>("Latitude")
                        .HasPrecision(8, 6)
                        .HasColumnType("decimal(8,6)");

                    b.Property<Guid?>("ModifiedBy")
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTime?>("ModifiedDate")
                        .HasColumnType("datetime2");

                    b.Property<Guid>("UserId")
                        .HasColumnType("uniqueidentifier");

                    b.HasKey("UserDeviceId");

                    b.HasIndex("UserId");

                    b.ToTable("UserDevices");
                });

            modelBuilder.Entity("NewLMS.UMKM.Data.LoginAudit", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("Latitude")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<DateTime>("LoginTime")
                        .HasColumnType("datetime2");

                    b.Property<string>("Longitude")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<string>("Provider")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("RemoteIP")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<string>("Status")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("UserName")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.ToTable("LoginAudits");
                });

            modelBuilder.Entity("NewLMS.UMKM.Data.LogSendCallbackThirdParty", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<Guid>("CreatedBy")
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTime>("CreatedDate")
                        .HasColumnType("datetime2");

                    b.Property<Guid?>("DeletedBy")
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTime?>("DeletedDate")
                        .HasColumnType("datetime2");

                    b.Property<bool>("IsDeleted")
                        .HasColumnType("bit");

                    b.Property<Guid?>("ModifiedBy")
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTime?>("ModifiedDate")
                        .HasColumnType("datetime2");

                    b.Property<string>("Request")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Response")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("ThridPartyName")
                        .HasColumnType("nvarchar(128)");

                    b.HasKey("Id");

                    b.HasIndex("ThridPartyName");

                    b.ToTable("LogSendCallbackThirdParty");
                });

            modelBuilder.Entity("NewLMS.UMKM.Data.NLog", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("Callsite")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Exception")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Level")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime>("Logged")
                        .HasColumnType("datetime2");

                    b.Property<string>("Logger")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("MachineName")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Message")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Properties")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Source")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.HasKey("Id");

                    b.ToTable("NLog");
                });

            modelBuilder.Entity("NewLMS.UMKM.Data.Page", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<Guid>("CreatedBy")
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTime>("CreatedDate")
                        .HasColumnType("datetime2");

                    b.Property<Guid?>("DeletedBy")
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTime?>("DeletedDate")
                        .HasColumnType("datetime2");

                    b.Property<bool>("IsDeleted")
                        .HasColumnType("bit");

                    b.Property<Guid?>("ModifiedBy")
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTime?>("ModifiedDate")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("datetime2")
                        .HasDefaultValueSql("getdate()");

                    b.Property<string>("Name")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Url")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.HasIndex("CreatedBy");

                    b.HasIndex("DeletedBy");

                    b.HasIndex("ModifiedBy");

                    b.ToTable("Pages");
                });

            modelBuilder.Entity("NewLMS.UMKM.Data.PageAction", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<Guid>("ActionId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<Guid>("CreatedBy")
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTime>("CreatedDate")
                        .HasColumnType("datetime2");

                    b.Property<Guid?>("DeletedBy")
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTime?>("DeletedDate")
                        .HasColumnType("datetime2");

                    b.Property<bool>("IsDeleted")
                        .HasColumnType("bit");

                    b.Property<Guid?>("ModifiedBy")
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTime?>("ModifiedDate")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("datetime2")
                        .HasDefaultValueSql("getdate()");

                    b.Property<Guid>("PageId")
                        .HasColumnType("uniqueidentifier");

                    b.HasKey("Id");

                    b.HasIndex("ActionId");

                    b.HasIndex("CreatedBy");

                    b.HasIndex("DeletedBy");

                    b.HasIndex("ModifiedBy");

                    b.HasIndex("PageId");

                    b.ToTable("PageActions");
                });

            modelBuilder.Entity("NewLMS.UMKM.Data.RfInstituteCode", b =>
                {
                    b.Property<string>("ServiceCode")
                        .HasColumnType("nvarchar(450)");

                    b.Property<bool>("Active")
                        .HasColumnType("bit");

                    b.Property<Guid>("CreatedBy")
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTime>("CreatedDate")
                        .HasColumnType("datetime2");

                    b.Property<string>("Cultivation")
                        .HasColumnType("nvarchar(max)");

                    b.Property<Guid?>("DeletedBy")
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTime?>("DeletedDate")
                        .HasColumnType("datetime2");

                    b.Property<string>("EconomySector")
                        .HasColumnType("nvarchar(max)");

                    b.Property<bool>("IsDeleted")
                        .HasColumnType("bit");

                    b.Property<Guid?>("ModifiedBy")
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTime?>("ModifiedDate")
                        .HasColumnType("datetime2");

                    b.Property<string>("Partner")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("ServiceCode");

                    b.ToTable("RfInstituteCode");
                });

            modelBuilder.Entity("NewLMS.UMKM.Data.Role", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("ConcurrencyStamp")
                        .IsConcurrencyToken()
                        .HasColumnType("nvarchar(max)");

                    b.Property<Guid?>("CreatedBy")
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTime>("CreatedDate")
                        .HasColumnType("datetime2");

                    b.Property<Guid?>("DeletedBy")
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTime?>("DeletedDate")
                        .HasColumnType("datetime2");

                    b.Property<string>("IdFungsi")
                        .HasColumnType("nvarchar(max)");

                    b.Property<bool>("IsDeleted")
                        .HasColumnType("bit");

                    b.Property<Guid>("ModifiedBy")
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTime>("ModifiedDate")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("datetime2")
                        .HasDefaultValueSql("getdate()");

                    b.Property<string>("Name")
                        .HasMaxLength(256)
                        .HasColumnType("nvarchar(256)");

                    b.Property<string>("NormalizedName")
                        .HasMaxLength(256)
                        .HasColumnType("nvarchar(256)");

                    b.HasKey("Id");

                    b.HasIndex("CreatedBy");

                    b.HasIndex("DeletedBy");

                    b.HasIndex("ModifiedBy");

                    b.HasIndex("NormalizedName")
                        .IsUnique()
                        .HasDatabaseName("RoleNameIndex")
                        .HasFilter("[NormalizedName] IS NOT NULL");

                    b.ToTable("Roles", (string)null);
                });

            modelBuilder.Entity("NewLMS.UMKM.Data.RoleClaim", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"), 1L, 1);

                    b.Property<Guid>("ActionId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("ClaimType")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("ClaimValue")
                        .HasColumnType("nvarchar(max)");

                    b.Property<Guid>("PageId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<Guid>("RoleId")
                        .HasColumnType("uniqueidentifier");

                    b.HasKey("Id");

                    b.HasIndex("ActionId");

                    b.HasIndex("PageId");

                    b.HasIndex("RoleId");

                    b.ToTable("RoleClaims", (string)null);
                });

            modelBuilder.Entity("NewLMS.UMKM.Data.SLIKRequest", b =>
                {
                    b.Property<Guid>("Id")
                        .HasColumnType("uniqueidentifier");

                    b.Property<byte>("AdminVerified")
                        .HasColumnType("tinyint");

                    b.Property<string>("BranchCode")
                        .HasColumnType("nvarchar(4)");

                    b.Property<string>("Comment")
                        .HasColumnType("nvarchar(max)");

                    b.Property<Guid>("CreatedBy")
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTime>("CreatedDate")
                        .HasColumnType("datetime2");

                    b.Property<Guid?>("DeletedBy")
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTime?>("DeletedDate")
                        .HasColumnType("datetime2");

                    b.Property<DateTime?>("InquiryDate")
                        .HasColumnType("datetime2");

                    b.Property<bool>("IsDeleted")
                        .HasColumnType("bit");

                    b.Property<Guid?>("ModifiedBy")
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTime?>("ModifiedDate")
                        .HasColumnType("datetime2");

                    b.Property<DateTime?>("ProcessDate")
                        .HasColumnType("datetime2");

                    b.Property<bool?>("ReadAndUnderstand")
                        .HasColumnType("bit");

                    b.Property<int?>("Status")
                        .HasColumnType("int");

                    b.Property<double>("TotalCreditCard")
                        .HasColumnType("float");

                    b.Property<double>("TotalLimitSlik")
                        .HasColumnType("float");

                    b.Property<double>("TotalOtherUses")
                        .HasColumnType("float");

                    b.Property<double>("TotalWorkingCapital")
                        .HasColumnType("float");

                    b.HasKey("Id");

                    b.HasIndex("BranchCode");

                    b.ToTable("SLIKRequests");
                });

            modelBuilder.Entity("NewLMS.UMKM.Data.ThridParty", b =>
                {
                    b.Property<string>("Name")
                        .HasMaxLength(128)
                        .HasColumnType("nvarchar(128)");

                    b.Property<string>("ClientId")
                        .IsRequired()
                        .HasMaxLength(128)
                        .HasColumnType("nvarchar(128)");

                    b.Property<string>("ClientSecret")
                        .IsRequired()
                        .HasMaxLength(128)
                        .HasColumnType("nvarchar(128)");

                    b.Property<Guid>("CreatedBy")
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTime>("CreatedDate")
                        .HasColumnType("datetime2");

                    b.Property<Guid?>("DeletedBy")
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTime?>("DeletedDate")
                        .HasColumnType("datetime2");

                    b.Property<bool>("IsDeleted")
                        .HasColumnType("bit");

                    b.Property<Guid?>("ModifiedBy")
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTime?>("ModifiedDate")
                        .HasColumnType("datetime2");

                    b.Property<string>("UrlCallback")
                        .IsRequired()
                        .HasMaxLength(450)
                        .HasColumnType("nvarchar(450)");

                    b.HasKey("Name");

                    b.ToTable("ThridParties");
                });

            modelBuilder.Entity("NewLMS.UMKM.Data.User", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<int>("AccessFailedCount")
                        .HasColumnType("int");

                    b.Property<string>("AccessToken")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("AccessTokenExpiration")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Address")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("ConcurrencyStamp")
                        .IsConcurrencyToken()
                        .HasColumnType("nvarchar(max)");

                    b.Property<Guid?>("CreatedBy")
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTime>("CreatedDate")
                        .HasColumnType("datetime2");

                    b.Property<Guid?>("DeletedBy")
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTime?>("DeletedDate")
                        .HasColumnType("datetime2");

                    b.Property<string>("Email")
                        .HasMaxLength(256)
                        .HasColumnType("nvarchar(256)");

                    b.Property<bool>("EmailConfirmed")
                        .HasColumnType("bit");

                    b.Property<string>("FirstName")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("FungsiTambahan")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("IdFungsi")
                        .HasColumnType("nvarchar(max)");

                    b.Property<bool>("IsActive")
                        .HasColumnType("bit");

                    b.Property<bool>("IsDeleted")
                        .HasColumnType("bit");

                    b.Property<bool>("IsUseUim")
                        .HasColumnType("bit");

                    b.Property<string>("Jabatan")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("KodeCabang")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("KodeGrade")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("KodeInduk")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("KodeKanwil")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("KodePenempatan")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("LastName")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("LimitDebet")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("LimitKredit")
                        .HasColumnType("nvarchar(max)");

                    b.Property<bool>("LockoutEnabled")
                        .HasColumnType("bit");

                    b.Property<DateTimeOffset?>("LockoutEnd")
                        .HasColumnType("datetimeoffset");

                    b.Property<Guid?>("ModifiedBy")
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTime>("ModifiedDate")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("datetime2")
                        .HasDefaultValueSql("getdate()");

                    b.Property<string>("Nama")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("NamaCabang")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("NamaInduk")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("NamaKanwil")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Nip")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("NormalizedEmail")
                        .HasMaxLength(256)
                        .HasColumnType("nvarchar(256)");

                    b.Property<string>("NormalizedUserName")
                        .HasMaxLength(256)
                        .HasColumnType("nvarchar(256)");

                    b.Property<string>("PasswordHash")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("PhoneNumber")
                        .HasColumnType("nvarchar(max)");

                    b.Property<bool>("PhoneNumberConfirmed")
                        .HasColumnType("bit");

                    b.Property<string>("PosisiPenempatan")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("ProfilePhoto")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Provider")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("RefreshToken")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("SecurityStamp")
                        .HasColumnType("nvarchar(max)");

                    b.Property<bool>("TwoFactorEnabled")
                        .HasColumnType("bit");

                    b.Property<string>("UimId")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("UserId")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("UserName")
                        .HasMaxLength(256)
                        .HasColumnType("nvarchar(256)");

                    b.HasKey("Id");

                    b.HasIndex("NormalizedEmail")
                        .HasDatabaseName("EmailIndex");

                    b.HasIndex("NormalizedUserName")
                        .IsUnique()
                        .HasDatabaseName("UserNameIndex")
                        .HasFilter("[NormalizedUserName] IS NOT NULL");

                    b.ToTable("Users", (string)null);
                });

            modelBuilder.Entity("NewLMS.UMKM.Data.UserAllowedIP", b =>
                {
                    b.Property<Guid>("UserId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("IPAddress")
                        .HasColumnType("nvarchar(450)");

                    b.HasKey("UserId", "IPAddress");

                    b.ToTable("UserAllowedIPs");
                });

            modelBuilder.Entity("NewLMS.UMKM.Data.UserClaim", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"), 1L, 1);

                    b.Property<Guid>("ActionId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("ClaimType")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("ClaimValue")
                        .HasColumnType("nvarchar(max)");

                    b.Property<Guid>("PageId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<Guid>("UserId")
                        .HasColumnType("uniqueidentifier");

                    b.HasKey("Id");

                    b.HasIndex("ActionId");

                    b.HasIndex("PageId");

                    b.HasIndex("UserId");

                    b.ToTable("UserClaims", (string)null);
                });

            modelBuilder.Entity("NewLMS.UMKM.Data.UserLogin", b =>
                {
                    b.Property<string>("LoginProvider")
                        .HasColumnType("nvarchar(450)");

                    b.Property<string>("ProviderKey")
                        .HasColumnType("nvarchar(450)");

                    b.Property<string>("ProviderDisplayName")
                        .HasColumnType("nvarchar(max)");

                    b.Property<Guid>("UserId")
                        .HasColumnType("uniqueidentifier");

                    b.HasKey("LoginProvider", "ProviderKey");

                    b.HasIndex("UserId");

                    b.ToTable("UserLogins", (string)null);
                });

            modelBuilder.Entity("NewLMS.UMKM.Data.UserRole", b =>
                {
                    b.Property<Guid>("UserId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<Guid>("RoleId")
                        .HasColumnType("uniqueidentifier");

                    b.HasKey("UserId", "RoleId");

                    b.HasIndex("RoleId");

                    b.ToTable("UserRoles", (string)null);
                });

            modelBuilder.Entity("NewLMS.UMKM.Data.UserToken", b =>
                {
                    b.Property<Guid>("UserId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("LoginProvider")
                        .HasColumnType("nvarchar(450)");

                    b.Property<string>("Name")
                        .HasColumnType("nvarchar(450)");

                    b.Property<string>("Value")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("UserId", "LoginProvider", "Name");

                    b.ToTable("UserTokens", (string)null);
                });

            modelBuilder.Entity("NewLMS.UMKM.Data.Action", b =>
                {
                    b.HasOne("NewLMS.UMKM.Data.User", "CreatedByUser")
                        .WithMany()
                        .HasForeignKey("CreatedBy")
                        .OnDelete(DeleteBehavior.NoAction)
                        .IsRequired();

                    b.HasOne("NewLMS.UMKM.Data.User", "DeletedByUser")
                        .WithMany()
                        .HasForeignKey("DeletedBy")
                        .OnDelete(DeleteBehavior.NoAction);

                    b.HasOne("NewLMS.UMKM.Data.User", "ModifiedByUser")
                        .WithMany()
                        .HasForeignKey("ModifiedBy")
                        .OnDelete(DeleteBehavior.NoAction);

                    b.Navigation("CreatedByUser");

                    b.Navigation("DeletedByUser");

                    b.Navigation("ModifiedByUser");
                });

            modelBuilder.Entity("NewLMS.UMKM.Data.EmailSMTPSetting", b =>
                {
                    b.HasOne("NewLMS.UMKM.Data.User", "CreatedByUser")
                        .WithMany()
                        .HasForeignKey("CreatedBy")
                        .OnDelete(DeleteBehavior.NoAction)
                        .IsRequired();

                    b.HasOne("NewLMS.UMKM.Data.User", "DeletedByUser")
                        .WithMany()
                        .HasForeignKey("DeletedBy")
                        .OnDelete(DeleteBehavior.NoAction);

                    b.HasOne("NewLMS.UMKM.Data.User", "ModifiedByUser")
                        .WithMany()
                        .HasForeignKey("ModifiedBy")
                        .OnDelete(DeleteBehavior.NoAction);

                    b.Navigation("CreatedByUser");

                    b.Navigation("DeletedByUser");

                    b.Navigation("ModifiedByUser");
                });

            modelBuilder.Entity("NewLMS.UMKM.Data.Entities.Debtor", b =>
                {
                    b.HasOne("NewLMS.UMKM.Data.Entities.RfEducation", "RfEducation")
                        .WithMany()
                        .HasForeignKey("EducationId");

                    b.HasOne("NewLMS.UMKM.Data.Entities.RfGender", "RfGender")
                        .WithMany()
                        .HasForeignKey("GenderId");

                    b.HasOne("NewLMS.UMKM.Data.Entities.RfJob", "RfJob")
                        .WithMany()
                        .HasForeignKey("JobCode");

                    b.HasOne("NewLMS.UMKM.Data.Entities.RfMarital", "RfMarital")
                        .WithMany()
                        .HasForeignKey("MaritalStatusId");

                    b.HasOne("NewLMS.UMKM.Data.Entities.RfParameterDetail", "RfResidenceStatus")
                        .WithMany()
                        .HasForeignKey("ResidenceStatusId");

                    b.HasOne("NewLMS.UMKM.Data.Entities.RfZipCode", "RfZipCode")
                        .WithMany()
                        .HasForeignKey("ZipCodeId");

                    b.Navigation("RfEducation");

                    b.Navigation("RfGender");

                    b.Navigation("RfJob");

                    b.Navigation("RfMarital");

                    b.Navigation("RfResidenceStatus");

                    b.Navigation("RfZipCode");
                });

            modelBuilder.Entity("NewLMS.UMKM.Data.Entities.DebtorCompany", b =>
                {
                    b.HasOne("NewLMS.UMKM.Data.Entities.RfZipCode", "RfZipCode")
                        .WithMany()
                        .HasForeignKey("ZipCodeId");

                    b.Navigation("RfZipCode");
                });

            modelBuilder.Entity("NewLMS.UMKM.Data.Entities.DebtorCompanyLegal", b =>
                {
                    b.HasOne("NewLMS.UMKM.Data.Entities.DebtorCompany", "DebtorCompany")
                        .WithOne("DebtorCompanyLegal")
                        .HasForeignKey("NewLMS.UMKM.Data.Entities.DebtorCompanyLegal", "Id")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("DebtorCompany");
                });

            modelBuilder.Entity("NewLMS.UMKM.Data.Entities.DebtorCouple", b =>
                {
                    b.HasOne("NewLMS.UMKM.Data.Entities.Debtor", "Debtor")
                        .WithOne("DebtorCouple")
                        .HasForeignKey("NewLMS.UMKM.Data.Entities.DebtorCouple", "Id")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("NewLMS.UMKM.Data.Entities.RfJob", "RfJob")
                        .WithMany()
                        .HasForeignKey("JobCode");

                    b.HasOne("NewLMS.UMKM.Data.Entities.RfZipCode", "RfZipCode")
                        .WithMany()
                        .HasForeignKey("ZipCodeId");

                    b.Navigation("Debtor");

                    b.Navigation("RfJob");

                    b.Navigation("RfZipCode");
                });

            modelBuilder.Entity("NewLMS.UMKM.Data.Entities.DebtorEmergency", b =>
                {
                    b.HasOne("NewLMS.UMKM.Data.Entities.LoanApplication", "LoanApplication")
                        .WithOne("DebtorEmergency")
                        .HasForeignKey("NewLMS.UMKM.Data.Entities.DebtorEmergency", "Id")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("NewLMS.UMKM.Data.Entities.RfZipCode", "RfZipCode")
                        .WithMany()
                        .HasForeignKey("ZipCodeId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("LoanApplication");

                    b.Navigation("RfZipCode");
                });

            modelBuilder.Entity("NewLMS.UMKM.Data.Entities.Document", b =>
                {
                    b.HasOne("NewLMS.UMKM.Data.Entities.RfDocument", "RfDocument")
                        .WithMany()
                        .HasForeignKey("DocumentId");

                    b.HasOne("NewLMS.UMKM.Data.Entities.RfParameterDetail", "RfDocumentStatus")
                        .WithMany()
                        .HasForeignKey("DocumentStatusId");

                    b.HasOne("NewLMS.UMKM.Data.Entities.RfParameterDetail", "RfDocumentType")
                        .WithMany()
                        .HasForeignKey("DocumentType")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("NewLMS.UMKM.Data.Entities.LoanApplication", "LoanApplication")
                        .WithMany()
                        .HasForeignKey("LoanApplicationId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("LoanApplication");

                    b.Navigation("RfDocument");

                    b.Navigation("RfDocumentStatus");

                    b.Navigation("RfDocumentType");
                });

            modelBuilder.Entity("NewLMS.UMKM.Data.Entities.DocumentFileUrl", b =>
                {
                    b.HasOne("NewLMS.UMKM.Data.Entities.Document", "Document")
                        .WithMany("Files")
                        .HasForeignKey("DocumentId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("NewLMS.UMKM.Data.Entities.FileUrl", "FileUrl")
                        .WithMany()
                        .HasForeignKey("FileUrlId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Document");

                    b.Navigation("FileUrl");
                });

            modelBuilder.Entity("NewLMS.UMKM.Data.Entities.LoanApplication", b =>
                {
                    b.HasOne("NewLMS.UMKM.Data.Entities.RfBranch", "RfBookingBranch")
                        .WithMany()
                        .HasForeignKey("BookingBranchId");

                    b.HasOne("NewLMS.UMKM.Data.Entities.RfBranch", "RfBranch")
                        .WithMany()
                        .HasForeignKey("BranchId");

                    b.HasOne("NewLMS.UMKM.Data.Entities.RfParameterDetail", "RfBusinessCycle")
                        .WithMany()
                        .HasForeignKey("BusinessCycleId");

                    b.HasOne("NewLMS.UMKM.Data.Entities.DebtorCompany", "DebtorCompany")
                        .WithMany()
                        .HasForeignKey("DebtorCompanyId");

                    b.HasOne("NewLMS.UMKM.Data.Entities.Debtor", "Debtor")
                        .WithMany()
                        .HasForeignKey("DebtorId");

                    b.HasOne("NewLMS.UMKM.Data.User", "DecisionMaker")
                        .WithMany()
                        .HasForeignKey("DecisionMakerId");

                    b.HasOne("NewLMS.UMKM.Data.Entities.RfParameterDetail", "RfOwnerCategory")
                        .WithMany()
                        .HasForeignKey("OwnerCategoryId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("NewLMS.UMKM.Data.User", "Owner")
                        .WithMany()
                        .HasForeignKey("OwnerId");

                    b.HasOne("NewLMS.UMKM.Data.Entities.RfProduct", "RfProduct")
                        .WithMany()
                        .HasForeignKey("ProductId");

                    b.HasOne("NewLMS.UMKM.Data.Entities.Prospect", "Prospect")
                        .WithMany()
                        .HasForeignKey("ProspectId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("NewLMS.UMKM.Data.Entities.RfSectorLBU3", "RfSectorLBU3")
                        .WithMany()
                        .HasForeignKey("RfSectorLBU3Code");

                    b.HasOne("NewLMS.UMKM.Data.Entities.RfStage", "RfStage")
                        .WithMany()
                        .HasForeignKey("StageId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Debtor");

                    b.Navigation("DebtorCompany");

                    b.Navigation("DecisionMaker");

                    b.Navigation("Owner");

                    b.Navigation("Prospect");

                    b.Navigation("RfBookingBranch");

                    b.Navigation("RfBranch");

                    b.Navigation("RfBusinessCycle");

                    b.Navigation("RfOwnerCategory");

                    b.Navigation("RfProduct");

                    b.Navigation("RfSectorLBU3");

                    b.Navigation("RfStage");
                });

            modelBuilder.Entity("NewLMS.UMKM.Data.Entities.LoanApplicationAppraisal", b =>
                {
                    b.HasOne("NewLMS.UMKM.Data.Entities.LoanApplicationCollateral", "LoanApplicationCollateral")
                        .WithMany()
                        .HasForeignKey("LoanApplicationCollateralId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("NewLMS.UMKM.Data.Entities.LoanApplication", "LoanApplication")
                        .WithMany()
                        .HasForeignKey("LoanApplicationId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("NewLMS.UMKM.Data.Entities.RfStage", "RfStage")
                        .WithMany()
                        .HasForeignKey("StageId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("LoanApplication");

                    b.Navigation("LoanApplicationCollateral");

                    b.Navigation("RfStage");
                });

            modelBuilder.Entity("NewLMS.UMKM.Data.Entities.LoanApplicationCollateral", b =>
                {
                    b.HasOne("NewLMS.UMKM.Data.Entities.RfCollateralBC", "RfCollateralBC")
                        .WithMany()
                        .HasForeignKey("CollateralBCId");

                    b.HasOne("NewLMS.UMKM.Data.Entities.RfDocument", "RfDocument")
                        .WithMany()
                        .HasForeignKey("DocumentCode");

                    b.HasOne("NewLMS.UMKM.Data.Entities.LoanApplication", "LoanApplication")
                        .WithMany("LoanApplicationCollaterals")
                        .HasForeignKey("LoanApplicationId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("NewLMS.UMKM.Data.Entities.RfTransportationType", "RfTransportationType")
                        .WithMany()
                        .HasForeignKey("TransportationTypeCode");

                    b.HasOne("NewLMS.UMKM.Data.Entities.RfVehClass", "RfVehClass")
                        .WithMany()
                        .HasForeignKey("VehClassCode");

                    b.HasOne("NewLMS.UMKM.Data.Entities.RfVehMaker", "RfVehMaker")
                        .WithMany()
                        .HasForeignKey("VehMakerCode");

                    b.HasOne("NewLMS.UMKM.Data.Entities.RfVehModel", "RfVehModel")
                        .WithMany()
                        .HasForeignKey("VehModelCode");

                    b.HasOne("NewLMS.UMKM.Data.Entities.RfZipCode", "RfZipCode")
                        .WithMany()
                        .HasForeignKey("ZipCodeId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("LoanApplication");

                    b.Navigation("RfCollateralBC");

                    b.Navigation("RfDocument");

                    b.Navigation("RfTransportationType");

                    b.Navigation("RfVehClass");

                    b.Navigation("RfVehMaker");

                    b.Navigation("RfVehModel");

                    b.Navigation("RfZipCode");
                });

            modelBuilder.Entity("NewLMS.UMKM.Data.Entities.LoanApplicationCollateralOwner", b =>
                {
                    b.HasOne("NewLMS.UMKM.Data.Entities.LoanApplicationCollateral", "LoanApplicationCollateral")
                        .WithOne("LoanApplicationCollateralOwner")
                        .HasForeignKey("NewLMS.UMKM.Data.Entities.LoanApplicationCollateralOwner", "Id")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("NewLMS.UMKM.Data.Entities.RfMarital", "RfMarital")
                        .WithMany()
                        .HasForeignKey("OwnerMaritalId");

                    b.HasOne("NewLMS.UMKM.Data.Entities.RfParameterDetail", "RfRelationCollateral")
                        .WithMany()
                        .HasForeignKey("RelationCollateralId");

                    b.HasOne("NewLMS.UMKM.Data.Entities.RfZipCode", "RfZipCodeOwnerCouple")
                        .WithMany()
                        .HasForeignKey("RfZipCodeIdOwnerCouple");

                    b.HasOne("NewLMS.UMKM.Data.Entities.RfZipCode", "RfZipCode")
                        .WithMany()
                        .HasForeignKey("ZipCodeId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("LoanApplicationCollateral");

                    b.Navigation("RfMarital");

                    b.Navigation("RfRelationCollateral");

                    b.Navigation("RfZipCode");

                    b.Navigation("RfZipCodeOwnerCouple");
                });

            modelBuilder.Entity("NewLMS.UMKM.Data.Entities.LoanApplicationCreditScoring", b =>
                {
                    b.HasOne("NewLMS.UMKM.Data.Entities.LoanApplication", "LoanApplication")
                        .WithOne("LoanApplicationCreditScoring")
                        .HasForeignKey("NewLMS.UMKM.Data.Entities.LoanApplicationCreditScoring", "Id")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("NewLMS.UMKM.Data.Entities.RfParameterDetail", "ScoAverageAccBalance")
                        .WithMany()
                        .HasForeignKey("ScoAverageAccBalanceId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("NewLMS.UMKM.Data.Entities.RfParameterDetail", "ScoBJBCreditHistory")
                        .WithMany()
                        .HasForeignKey("ScoBJBCreditHistoryId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("NewLMS.UMKM.Data.Entities.RfParameterDetail", "ScoBankRelation")
                        .WithMany()
                        .HasForeignKey("ScoBankRelationId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("NewLMS.UMKM.Data.Entities.RfParameterDetail", "ScoBusinesLocation")
                        .WithMany()
                        .HasForeignKey("ScoBusinesLocationId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("NewLMS.UMKM.Data.Entities.RfParameterDetail", "ScoCollateral")
                        .WithMany()
                        .HasForeignKey("ScoCollateralId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("NewLMS.UMKM.Data.Entities.RfParameterDetail", "ScoFinanceManager")
                        .WithMany()
                        .HasForeignKey("ScoFinanceManagerId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("NewLMS.UMKM.Data.Entities.RfParameterDetail", "ScoMonthlyMutation")
                        .WithMany()
                        .HasForeignKey("ScoMonthlyMutationId");

                    b.HasOne("NewLMS.UMKM.Data.Entities.RfParameterDetail", "ScoNeedLevel")
                        .WithMany()
                        .HasForeignKey("ScoNeedLevelId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("NewLMS.UMKM.Data.Entities.RfParameterDetail", "ScoOtherPartyDebt")
                        .WithMany()
                        .HasForeignKey("ScoOtherPartyDebtId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("NewLMS.UMKM.Data.Entities.RfParameterDetail", "ScoResidentialReputation")
                        .WithMany()
                        .HasForeignKey("ScoResidentialReputationId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("NewLMS.UMKM.Data.Entities.RfParameterDetail", "ScoTransacMethod")
                        .WithMany()
                        .HasForeignKey("ScoTransacMethodId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("LoanApplication");

                    b.Navigation("ScoAverageAccBalance");

                    b.Navigation("ScoBJBCreditHistory");

                    b.Navigation("ScoBankRelation");

                    b.Navigation("ScoBusinesLocation");

                    b.Navigation("ScoCollateral");

                    b.Navigation("ScoFinanceManager");

                    b.Navigation("ScoMonthlyMutation");

                    b.Navigation("ScoNeedLevel");

                    b.Navigation("ScoOtherPartyDebt");

                    b.Navigation("ScoResidentialReputation");

                    b.Navigation("ScoTransacMethod");
                });

            modelBuilder.Entity("NewLMS.UMKM.Data.Entities.LoanApplicationFacility", b =>
                {
                    b.HasOne("NewLMS.UMKM.Data.Entities.RfParameterDetail", "ApplicationType")
                        .WithMany()
                        .HasForeignKey("ApplicationTypeId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("NewLMS.UMKM.Data.Entities.LoanApplication", "LoanApplication")
                        .WithMany("LoanApplicationFacilities")
                        .HasForeignKey("LoanApplicationId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("NewLMS.UMKM.Data.Entities.RfLoanPurpose", "LoanPurpose")
                        .WithMany()
                        .HasForeignKey("LoanPurposeId");

                    b.HasOne("NewLMS.UMKM.Data.Entities.RfParameterDetail", "NatureOfCredit")
                        .WithMany()
                        .HasForeignKey("NatureOfCreditId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("NewLMS.UMKM.Data.Entities.RfPlacementCountry", "RfPlacementCountry")
                        .WithMany()
                        .HasForeignKey("PlacementCountryCode");

                    b.HasOne("NewLMS.UMKM.Data.Entities.RfSectorLBU3", "RfSectorLBU3")
                        .WithMany()
                        .HasForeignKey("SectorLBU3Code");

                    b.HasOne("NewLMS.UMKM.Data.Entities.RfSubProduct", "RfSubProduct")
                        .WithMany()
                        .HasForeignKey("SubProductId");

                    b.HasOne("NewLMS.UMKM.Data.Entities.RfTenor", "RfTenor")
                        .WithMany()
                        .HasForeignKey("TenorCode");

                    b.Navigation("ApplicationType");

                    b.Navigation("LoanApplication");

                    b.Navigation("LoanPurpose");

                    b.Navigation("NatureOfCredit");

                    b.Navigation("RfPlacementCountry");

                    b.Navigation("RfSectorLBU3");

                    b.Navigation("RfSubProduct");

                    b.Navigation("RfTenor");
                });

            modelBuilder.Entity("NewLMS.UMKM.Data.Entities.LoanApplicationKeyPerson", b =>
                {
                    b.HasOne("NewLMS.UMKM.Data.Entities.RfEducation", "RfEducation")
                        .WithMany()
                        .HasForeignKey("EducationId");

                    b.HasOne("NewLMS.UMKM.Data.Entities.LoanApplication", "LoanApplication")
                        .WithMany("LoanApplicationKeyPersons")
                        .HasForeignKey("LoanApplicationId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("NewLMS.UMKM.Data.Entities.RfMarital", "RfMarital")
                        .WithMany()
                        .HasForeignKey("MaritalStatusId");

                    b.HasOne("NewLMS.UMKM.Data.Entities.RfZipCode", "RfZipCode")
                        .WithMany()
                        .HasForeignKey("ZipCodeId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("LoanApplication");

                    b.Navigation("RfEducation");

                    b.Navigation("RfMarital");

                    b.Navigation("RfZipCode");
                });

            modelBuilder.Entity("NewLMS.UMKM.Data.Entities.LoanApplicationRAC", b =>
                {
                    b.HasOne("NewLMS.UMKM.Data.Entities.LoanApplication", "LoanApplication")
                        .WithOne("LoanApplicationRAC")
                        .HasForeignKey("NewLMS.UMKM.Data.Entities.LoanApplicationRAC", "Id")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("LoanApplication");
                });

            modelBuilder.Entity("NewLMS.UMKM.Data.Entities.LoanApplicationStage", b =>
                {
                    b.HasOne("NewLMS.UMKM.Data.Entities.LoanApplication", "LoanApplication")
                        .WithMany("LoanApplicationStages")
                        .HasForeignKey("LoanApplicationId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("NewLMS.UMKM.Data.Role", "OwnerRole")
                        .WithMany()
                        .HasForeignKey("OwnerRoleId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("NewLMS.UMKM.Data.User", "OwnerUser")
                        .WithMany()
                        .HasForeignKey("OwnerUserId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("NewLMS.UMKM.Data.User", "ProcessedByUser")
                        .WithMany()
                        .HasForeignKey("ProcessedBy");

                    b.HasOne("NewLMS.UMKM.Data.Entities.RfStage", "RfStage")
                        .WithMany()
                        .HasForeignKey("StageId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("LoanApplication");

                    b.Navigation("OwnerRole");

                    b.Navigation("OwnerUser");

                    b.Navigation("ProcessedByUser");

                    b.Navigation("RfStage");
                });

            modelBuilder.Entity("NewLMS.UMKM.Data.Entities.Prospect", b =>
                {
                    b.HasOne("NewLMS.UMKM.Data.Entities.RfParameterDetail", "RfApplicationType")
                        .WithMany()
                        .HasForeignKey("ApplicationTypeId");

                    b.HasOne("NewLMS.UMKM.Data.Entities.RfBranch", "RfBranch")
                        .WithMany()
                        .HasForeignKey("BranchId");

                    b.HasOne("NewLMS.UMKM.Data.Entities.RfParameterDetail", "RfCategory")
                        .WithMany()
                        .HasForeignKey("CategoryId");

                    b.HasOne("NewLMS.UMKM.Data.Entities.RfParameterDetail", "RfCompanyGroup")
                        .WithMany()
                        .HasForeignKey("CompanyGroupId");

                    b.HasOne("NewLMS.UMKM.Data.Entities.RfParameterDetail", "RfCompanyStatus")
                        .WithMany()
                        .HasForeignKey("CompanyStatusId");

                    b.HasOne("NewLMS.UMKM.Data.Entities.RfCompanyType", "RfCompanyType")
                        .WithMany()
                        .HasForeignKey("CompanyTypeId");

                    b.HasOne("NewLMS.UMKM.Data.Entities.RfZipCode", "RfCompanyZipCode")
                        .WithMany()
                        .HasForeignKey("CompanyZipCodeId");

                    b.HasOne("NewLMS.UMKM.Data.Entities.RfGender", "RfGender")
                        .WithMany()
                        .HasForeignKey("GenderId");

                    b.HasOne("NewLMS.UMKM.Data.RfInstituteCode", "RfInstituteCode")
                        .WithMany()
                        .HasForeignKey("InstituteCode");

                    b.HasOne("NewLMS.UMKM.Data.Entities.RfParameterDetail", "RfOwnerCategory")
                        .WithMany()
                        .HasForeignKey("OwnerCategoryId");

                    b.HasOne("NewLMS.UMKM.Data.Entities.RfZipCode", "RfPlaceZipCode")
                        .WithMany()
                        .HasForeignKey("PlaceZipCodeId");

                    b.HasOne("NewLMS.UMKM.Data.Entities.RfProduct", "RfProduct")
                        .WithMany()
                        .HasForeignKey("ProductId");

                    b.HasOne("NewLMS.UMKM.Data.Entities.RfSectorLBU3", "RfSectorLBU3")
                        .WithMany()
                        .HasForeignKey("SectorLBU3Code");

                    b.HasOne("NewLMS.UMKM.Data.Entities.RfZipCode", "RfZipCode")
                        .WithMany()
                        .HasForeignKey("ZipCodeId");

                    b.Navigation("RfApplicationType");

                    b.Navigation("RfBranch");

                    b.Navigation("RfCategory");

                    b.Navigation("RfCompanyGroup");

                    b.Navigation("RfCompanyStatus");

                    b.Navigation("RfCompanyType");

                    b.Navigation("RfCompanyZipCode");

                    b.Navigation("RfGender");

                    b.Navigation("RfInstituteCode");

                    b.Navigation("RfOwnerCategory");

                    b.Navigation("RfPlaceZipCode");

                    b.Navigation("RfProduct");

                    b.Navigation("RfSectorLBU3");

                    b.Navigation("RfZipCode");
                });

            modelBuilder.Entity("NewLMS.UMKM.Data.Entities.RfBusinessPlaceOwnership", b =>
                {
                    b.HasOne("NewLMS.UMKM.Data.Entities.RfBusinessPlaceLocation", "RfBusinessPlaceLocation")
                        .WithMany()
                        .HasForeignKey("BusinessPlaceLocationCode");

                    b.Navigation("RfBusinessPlaceLocation");
                });

            modelBuilder.Entity("NewLMS.UMKM.Data.Entities.RfCompanyType", b =>
                {
                    b.HasOne("NewLMS.UMKM.Data.Entities.RfParameterDetail", "ParamCompanyGroup")
                        .WithMany()
                        .HasForeignKey("CompanyGroupId");

                    b.Navigation("ParamCompanyGroup");
                });

            modelBuilder.Entity("NewLMS.UMKM.Data.Entities.RfDecisionLetter", b =>
                {
                    b.HasOne("NewLMS.UMKM.Data.Entities.RfDecisionLeterType", "RfDecisionLeterType")
                        .WithMany()
                        .HasForeignKey("DecisionLeterTypeCode");

                    b.Navigation("RfDecisionLeterType");
                });

            modelBuilder.Entity("NewLMS.UMKM.Data.Entities.RfDocumentCollateral", b =>
                {
                    b.HasOne("NewLMS.UMKM.Data.Entities.RfCollateralBC", "RfCollateralBC")
                        .WithMany()
                        .HasForeignKey("CollateralCode");

                    b.HasOne("NewLMS.UMKM.Data.Entities.RfDocument", "RfDocument")
                        .WithMany()
                        .HasForeignKey("DocumentCode");

                    b.Navigation("RfCollateralBC");

                    b.Navigation("RfDocument");
                });

            modelBuilder.Entity("NewLMS.UMKM.Data.Entities.RfJob", b =>
                {
                    b.HasOne("NewLMS.UMKM.Data.Entities.RfProduct", "RfProduct")
                        .WithMany()
                        .HasForeignKey("ProductId");

                    b.Navigation("RfProduct");
                });

            modelBuilder.Entity("NewLMS.UMKM.Data.Entities.RfMappingCollateral", b =>
                {
                    b.HasOne("NewLMS.UMKM.Data.Entities.RfCollateralBC", "RfCollateralBC")
                        .WithMany()
                        .HasForeignKey("CollateralCode");

                    b.HasOne("NewLMS.UMKM.Data.Entities.RfProduct", "RfProduct")
                        .WithMany()
                        .HasForeignKey("ProductId");

                    b.Navigation("RfCollateralBC");

                    b.Navigation("RfProduct");
                });

            modelBuilder.Entity("NewLMS.UMKM.Data.Entities.RfMappingTenor", b =>
                {
                    b.HasOne("NewLMS.UMKM.Data.Entities.RfLoanPurpose", "RfLoanPurpose")
                        .WithMany()
                        .HasForeignKey("LoanPurposeCode");

                    b.HasOne("NewLMS.UMKM.Data.Entities.RfParameterDetail", "ParamApplicationType")
                        .WithMany()
                        .HasForeignKey("ParamApplicationTypeId");

                    b.HasOne("NewLMS.UMKM.Data.Entities.RfProduct", "RfProduct")
                        .WithMany()
                        .HasForeignKey("ProductId");

                    b.HasOne("NewLMS.UMKM.Data.Entities.RfSubProduct", "RfSubProduct")
                        .WithMany()
                        .HasForeignKey("SubProductId");

                    b.HasOne("NewLMS.UMKM.Data.Entities.RfTenor", "RfTenor")
                        .WithMany()
                        .HasForeignKey("TenorCode");

                    b.Navigation("ParamApplicationType");

                    b.Navigation("RfLoanPurpose");

                    b.Navigation("RfProduct");

                    b.Navigation("RfSubProduct");

                    b.Navigation("RfTenor");
                });

            modelBuilder.Entity("NewLMS.UMKM.Data.Entities.RfParameterDetail", b =>
                {
                    b.HasOne("NewLMS.UMKM.Data.Entities.RfParameter", "RfParameter")
                        .WithMany("RfParameterDetails")
                        .HasForeignKey("ParameterId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("RfParameter");
                });

            modelBuilder.Entity("NewLMS.UMKM.Data.Entities.RfSandiBI", b =>
                {
                    b.HasOne("NewLMS.UMKM.Data.Entities.RfSandiBIGroup", "RfSandiBIGroup")
                        .WithMany()
                        .HasForeignKey("BIGroup")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("RfSandiBIGroup");
                });

            modelBuilder.Entity("NewLMS.UMKM.Data.Entities.RfScPosition", b =>
                {
                    b.HasOne("NewLMS.UMKM.Data.Entities.RfDecisionLetter", "RfDecisionLetter")
                        .WithMany()
                        .HasForeignKey("DecisionLeterCode");

                    b.Navigation("RfDecisionLetter");
                });

            modelBuilder.Entity("NewLMS.UMKM.Data.Entities.RfSectorLBU2", b =>
                {
                    b.HasOne("NewLMS.UMKM.Data.Entities.RfSectorLBU1", "RfSectorLBU1")
                        .WithMany("RfSectorLBU2s")
                        .HasForeignKey("RfSectorLBU1Code");

                    b.Navigation("RfSectorLBU1");
                });

            modelBuilder.Entity("NewLMS.UMKM.Data.Entities.RfSectorLBU3", b =>
                {
                    b.HasOne("NewLMS.UMKM.Data.Entities.RfSectorLBU2", "RfSectorLBU2")
                        .WithMany("RfSectorLBU3s")
                        .HasForeignKey("RfSectorLBU2Code");

                    b.Navigation("RfSectorLBU2");
                });

            modelBuilder.Entity("NewLMS.UMKM.Data.Entities.RfSubProduct", b =>
                {
                    b.HasOne("NewLMS.UMKM.Data.Entities.RfLoanPurpose", "RfLoanPurpose")
                        .WithMany()
                        .HasForeignKey("LoanPurposeCode");

                    b.HasOne("NewLMS.UMKM.Data.Entities.RfProduct", "RfProduct")
                        .WithMany()
                        .HasForeignKey("ProductId");

                    b.Navigation("RfLoanPurpose");

                    b.Navigation("RfProduct");
                });

            modelBuilder.Entity("NewLMS.UMKM.Data.Entities.RfTenor", b =>
                {
                    b.HasOne("NewLMS.UMKM.Data.Entities.RfProduct", "RfProduct")
                        .WithMany()
                        .HasForeignKey("ProductId");

                    b.Navigation("RfProduct");
                });

            modelBuilder.Entity("NewLMS.UMKM.Data.Entities.RfVehClass", b =>
                {
                    b.HasOne("NewLMS.UMKM.Data.Entities.RfVehType", "RfVehType")
                        .WithMany()
                        .HasForeignKey("VehCode");

                    b.HasOne("NewLMS.UMKM.Data.Entities.RfVehMaker", "RfVehMaker")
                        .WithMany()
                        .HasForeignKey("VehMakerCode");

                    b.HasOne("NewLMS.UMKM.Data.Entities.RfVehModel", "RfVehModel")
                        .WithMany()
                        .HasForeignKey("VehModelCode");

                    b.Navigation("RfVehMaker");

                    b.Navigation("RfVehModel");

                    b.Navigation("RfVehType");
                });

            modelBuilder.Entity("NewLMS.UMKM.Data.Entities.RfVehMaker", b =>
                {
                    b.HasOne("NewLMS.UMKM.Data.Entities.RfCollateralBC", "RfCollateralBC")
                        .WithMany()
                        .HasForeignKey("CollateralCode");

                    b.HasOne("NewLMS.UMKM.Data.Entities.RfVehType", "RfVehType")
                        .WithMany()
                        .HasForeignKey("VehCode");

                    b.HasOne("NewLMS.UMKM.Data.Entities.RfVehCountry", "RfVehCountry")
                        .WithMany()
                        .HasForeignKey("VehCountryCode");

                    b.Navigation("RfCollateralBC");

                    b.Navigation("RfVehCountry");

                    b.Navigation("RfVehType");
                });

            modelBuilder.Entity("NewLMS.UMKM.Data.Entities.SIKP", b =>
                {
                    b.HasOne("NewLMS.UMKM.Data.Entities.LoanApplication", "LoanApplication")
                        .WithMany()
                        .HasForeignKey("Id")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("LoanApplication");
                });

            modelBuilder.Entity("NewLMS.UMKM.Data.Entities.SIKPRequest", b =>
                {
                    b.HasOne("NewLMS.UMKM.Data.Entities.RfLinkAge", "DebtorCompanyRfLinkage")
                        .WithMany()
                        .HasForeignKey("DebtorCompanyLingkageId");

                    b.HasOne("NewLMS.UMKM.Data.Entities.RfZipCode", "DebtorCompanyRfZipCode")
                        .WithMany()
                        .HasForeignKey("DebtorCompanyRfZipCodeId");

                    b.HasOne("NewLMS.UMKM.Data.Entities.RfEducation", "RfEducation")
                        .WithMany()
                        .HasForeignKey("DebtorEducationId");

                    b.HasOne("NewLMS.UMKM.Data.Entities.RfGender", "RfGender")
                        .WithMany()
                        .HasForeignKey("DebtorGenderId");

                    b.HasOne("NewLMS.UMKM.Data.Entities.RfMarital", "RfMarital")
                        .WithMany()
                        .HasForeignKey("DebtorMaritalStatusId");

                    b.HasOne("NewLMS.UMKM.Data.Entities.RfSectorLBU3", "RfSectorLBU3")
                        .WithMany()
                        .HasForeignKey("DebtorSectorLBU3Code");

                    b.HasOne("NewLMS.UMKM.Data.Entities.RfZipCode", "DebtorRfZipCode")
                        .WithMany()
                        .HasForeignKey("DebtorZipCodeId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("NewLMS.UMKM.Data.Entities.SIKP", "SIKP")
                        .WithOne("SIKPRequest")
                        .HasForeignKey("NewLMS.UMKM.Data.Entities.SIKPRequest", "Id")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("DebtorCompanyRfLinkage");

                    b.Navigation("DebtorCompanyRfZipCode");

                    b.Navigation("DebtorRfZipCode");

                    b.Navigation("RfEducation");

                    b.Navigation("RfGender");

                    b.Navigation("RfMarital");

                    b.Navigation("RfSectorLBU3");

                    b.Navigation("SIKP");
                });

            modelBuilder.Entity("NewLMS.UMKM.Data.Entities.SIKPResponse", b =>
                {
                    b.HasOne("NewLMS.UMKM.Data.Entities.RfLinkAge", "DebtorCompanyRfLinkage")
                        .WithMany()
                        .HasForeignKey("DebtorCompanyLingkageId");

                    b.HasOne("NewLMS.UMKM.Data.Entities.RfZipCode", "DebtorCompanyRfZipCode")
                        .WithMany()
                        .HasForeignKey("DebtorCompanyRfZipCodeId");

                    b.HasOne("NewLMS.UMKM.Data.Entities.RfEducation", "RfEducation")
                        .WithMany()
                        .HasForeignKey("DebtorEducationId");

                    b.HasOne("NewLMS.UMKM.Data.Entities.RfGender", "RfGender")
                        .WithMany()
                        .HasForeignKey("DebtorGenderId");

                    b.HasOne("NewLMS.UMKM.Data.Entities.RfMarital", "RfMarital")
                        .WithMany()
                        .HasForeignKey("DebtorMaritalStatusId");

                    b.HasOne("NewLMS.UMKM.Data.Entities.RfSectorLBU3", "RfSectorLBU3")
                        .WithMany()
                        .HasForeignKey("DebtorSectorLBU3Code");

                    b.HasOne("NewLMS.UMKM.Data.Entities.RfZipCode", "DebtorRfZipCode")
                        .WithMany()
                        .HasForeignKey("DebtorZipCodeId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("NewLMS.UMKM.Data.Entities.SIKP", "SIKP")
                        .WithOne("SIKPResponse")
                        .HasForeignKey("NewLMS.UMKM.Data.Entities.SIKPResponse", "Id")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("DebtorCompanyRfLinkage");

                    b.Navigation("DebtorCompanyRfZipCode");

                    b.Navigation("DebtorRfZipCode");

                    b.Navigation("RfEducation");

                    b.Navigation("RfGender");

                    b.Navigation("RfMarital");

                    b.Navigation("RfSectorLBU3");

                    b.Navigation("SIKP");
                });

            modelBuilder.Entity("NewLMS.UMKM.Data.Entities.SLIKRequestDebtor", b =>
                {
                    b.HasOne("NewLMS.UMKM.Data.Entities.RfParameterDetail", "RfSLIKDebtorType")
                        .WithMany()
                        .HasForeignKey("SLIKDebtorType")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("NewLMS.UMKM.Data.Entities.FileUrl", "FileUrl")
                        .WithMany()
                        .HasForeignKey("SLIKDocumentUrlId");

                    b.HasOne("NewLMS.UMKM.Data.SLIKRequest", "SLIKRequest")
                        .WithMany("SLIKRequestDebtors")
                        .HasForeignKey("SLIKRequestId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("FileUrl");

                    b.Navigation("RfSLIKDebtorType");

                    b.Navigation("SLIKRequest");
                });

            modelBuilder.Entity("NewLMS.UMKM.Data.Entities.UserDevice", b =>
                {
                    b.HasOne("NewLMS.UMKM.Data.User", "User")
                        .WithMany("UserDevices")
                        .HasForeignKey("UserId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("User");
                });

            modelBuilder.Entity("NewLMS.UMKM.Data.LogSendCallbackThirdParty", b =>
                {
                    b.HasOne("NewLMS.UMKM.Data.ThridParty", "ThridParty")
                        .WithMany("LogSendCallbackThirdParties")
                        .HasForeignKey("ThridPartyName");

                    b.Navigation("ThridParty");
                });

            modelBuilder.Entity("NewLMS.UMKM.Data.Page", b =>
                {
                    b.HasOne("NewLMS.UMKM.Data.User", "CreatedByUser")
                        .WithMany()
                        .HasForeignKey("CreatedBy")
                        .OnDelete(DeleteBehavior.NoAction)
                        .IsRequired();

                    b.HasOne("NewLMS.UMKM.Data.User", "DeletedByUser")
                        .WithMany()
                        .HasForeignKey("DeletedBy")
                        .OnDelete(DeleteBehavior.NoAction);

                    b.HasOne("NewLMS.UMKM.Data.User", "ModifiedByUser")
                        .WithMany()
                        .HasForeignKey("ModifiedBy")
                        .OnDelete(DeleteBehavior.NoAction);

                    b.Navigation("CreatedByUser");

                    b.Navigation("DeletedByUser");

                    b.Navigation("ModifiedByUser");
                });

            modelBuilder.Entity("NewLMS.UMKM.Data.PageAction", b =>
                {
                    b.HasOne("NewLMS.UMKM.Data.Action", "Action")
                        .WithMany()
                        .HasForeignKey("ActionId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("NewLMS.UMKM.Data.User", "CreatedByUser")
                        .WithMany()
                        .HasForeignKey("CreatedBy")
                        .OnDelete(DeleteBehavior.NoAction)
                        .IsRequired();

                    b.HasOne("NewLMS.UMKM.Data.User", "DeletedByUser")
                        .WithMany()
                        .HasForeignKey("DeletedBy")
                        .OnDelete(DeleteBehavior.NoAction);

                    b.HasOne("NewLMS.UMKM.Data.User", "ModifiedByUser")
                        .WithMany()
                        .HasForeignKey("ModifiedBy")
                        .OnDelete(DeleteBehavior.NoAction);

                    b.HasOne("NewLMS.UMKM.Data.Page", "Page")
                        .WithMany()
                        .HasForeignKey("PageId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Action");

                    b.Navigation("CreatedByUser");

                    b.Navigation("DeletedByUser");

                    b.Navigation("ModifiedByUser");

                    b.Navigation("Page");
                });

            modelBuilder.Entity("NewLMS.UMKM.Data.Role", b =>
                {
                    b.HasOne("NewLMS.UMKM.Data.User", "CreatedByUser")
                        .WithMany()
                        .HasForeignKey("CreatedBy")
                        .OnDelete(DeleteBehavior.NoAction);

                    b.HasOne("NewLMS.UMKM.Data.User", "DeletedByUser")
                        .WithMany()
                        .HasForeignKey("DeletedBy")
                        .OnDelete(DeleteBehavior.NoAction);

                    b.HasOne("NewLMS.UMKM.Data.User", "ModifiedByUser")
                        .WithMany()
                        .HasForeignKey("ModifiedBy")
                        .OnDelete(DeleteBehavior.NoAction)
                        .IsRequired();

                    b.Navigation("CreatedByUser");

                    b.Navigation("DeletedByUser");

                    b.Navigation("ModifiedByUser");
                });

            modelBuilder.Entity("NewLMS.UMKM.Data.RoleClaim", b =>
                {
                    b.HasOne("NewLMS.UMKM.Data.Action", "Action")
                        .WithMany()
                        .HasForeignKey("ActionId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("NewLMS.UMKM.Data.Page", "Page")
                        .WithMany()
                        .HasForeignKey("PageId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("NewLMS.UMKM.Data.Role", "Role")
                        .WithMany("RoleClaims")
                        .HasForeignKey("RoleId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Action");

                    b.Navigation("Page");

                    b.Navigation("Role");
                });

            modelBuilder.Entity("NewLMS.UMKM.Data.SLIKRequest", b =>
                {
                    b.HasOne("NewLMS.UMKM.Data.Entities.RfBranch", "Branch")
                        .WithMany()
                        .HasForeignKey("BranchCode");

                    b.HasOne("NewLMS.UMKM.Data.Entities.LoanApplication", "LoanApplication")
                        .WithMany()
                        .HasForeignKey("Id")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Branch");

                    b.Navigation("LoanApplication");
                });

            modelBuilder.Entity("NewLMS.UMKM.Data.UserAllowedIP", b =>
                {
                    b.HasOne("NewLMS.UMKM.Data.User", "User")
                        .WithMany("UserAllowedIPs")
                        .HasForeignKey("UserId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("User");
                });

            modelBuilder.Entity("NewLMS.UMKM.Data.UserClaim", b =>
                {
                    b.HasOne("NewLMS.UMKM.Data.Action", "Action")
                        .WithMany()
                        .HasForeignKey("ActionId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("NewLMS.UMKM.Data.Page", "Page")
                        .WithMany()
                        .HasForeignKey("PageId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("NewLMS.UMKM.Data.User", "User")
                        .WithMany("UserClaims")
                        .HasForeignKey("UserId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Action");

                    b.Navigation("Page");

                    b.Navigation("User");
                });

            modelBuilder.Entity("NewLMS.UMKM.Data.UserLogin", b =>
                {
                    b.HasOne("NewLMS.UMKM.Data.User", "User")
                        .WithMany("UserLogins")
                        .HasForeignKey("UserId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("User");
                });

            modelBuilder.Entity("NewLMS.UMKM.Data.UserRole", b =>
                {
                    b.HasOne("NewLMS.UMKM.Data.Role", "Role")
                        .WithMany("UserRoles")
                        .HasForeignKey("RoleId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("NewLMS.UMKM.Data.User", "User")
                        .WithMany("UserRoles")
                        .HasForeignKey("UserId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Role");

                    b.Navigation("User");
                });

            modelBuilder.Entity("NewLMS.UMKM.Data.UserToken", b =>
                {
                    b.HasOne("NewLMS.UMKM.Data.User", "User")
                        .WithMany("UserTokens")
                        .HasForeignKey("UserId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("User");
                });

            modelBuilder.Entity("NewLMS.UMKM.Data.Entities.Debtor", b =>
                {
                    b.Navigation("DebtorCouple");
                });

            modelBuilder.Entity("NewLMS.UMKM.Data.Entities.DebtorCompany", b =>
                {
                    b.Navigation("DebtorCompanyLegal");
                });

            modelBuilder.Entity("NewLMS.UMKM.Data.Entities.Document", b =>
                {
                    b.Navigation("Files");
                });

            modelBuilder.Entity("NewLMS.UMKM.Data.Entities.LoanApplication", b =>
                {
                    b.Navigation("DebtorEmergency");

                    b.Navigation("LoanApplicationCollaterals");

                    b.Navigation("LoanApplicationCreditScoring");

                    b.Navigation("LoanApplicationFacilities");

                    b.Navigation("LoanApplicationKeyPersons");

                    b.Navigation("LoanApplicationRAC");

                    b.Navigation("LoanApplicationStages");
                });

            modelBuilder.Entity("NewLMS.UMKM.Data.Entities.LoanApplicationCollateral", b =>
                {
                    b.Navigation("LoanApplicationCollateralOwner");
                });

            modelBuilder.Entity("NewLMS.UMKM.Data.Entities.RfParameter", b =>
                {
                    b.Navigation("RfParameterDetails");
                });

            modelBuilder.Entity("NewLMS.UMKM.Data.Entities.RfSectorLBU1", b =>
                {
                    b.Navigation("RfSectorLBU2s");
                });

            modelBuilder.Entity("NewLMS.UMKM.Data.Entities.RfSectorLBU2", b =>
                {
                    b.Navigation("RfSectorLBU3s");
                });

            modelBuilder.Entity("NewLMS.UMKM.Data.Entities.SIKP", b =>
                {
                    b.Navigation("SIKPRequest");

                    b.Navigation("SIKPResponse");
                });

            modelBuilder.Entity("NewLMS.UMKM.Data.Role", b =>
                {
                    b.Navigation("RoleClaims");

                    b.Navigation("UserRoles");
                });

            modelBuilder.Entity("NewLMS.UMKM.Data.SLIKRequest", b =>
                {
                    b.Navigation("SLIKRequestDebtors");
                });

            modelBuilder.Entity("NewLMS.UMKM.Data.ThridParty", b =>
                {
                    b.Navigation("LogSendCallbackThirdParties");
                });

            modelBuilder.Entity("NewLMS.UMKM.Data.User", b =>
                {
                    b.Navigation("UserAllowedIPs");

                    b.Navigation("UserClaims");

                    b.Navigation("UserDevices");

                    b.Navigation("UserLogins");

                    b.Navigation("UserRoles");

                    b.Navigation("UserTokens");
                });
#pragma warning restore 612, 618
        }
    }
}
