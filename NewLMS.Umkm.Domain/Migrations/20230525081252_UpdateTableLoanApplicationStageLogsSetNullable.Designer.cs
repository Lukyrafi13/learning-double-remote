// <auto-generated />
using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using NewLMS.UMKM.Domain.Context;

#nullable disable

namespace NewLMS.UMKM.Domain.Migrations
{
    [DbContext(typeof(UserContext))]
    [Migration("20230525081252_UpdateTableLoanApplicationStageLogsSetNullable")]
    partial class UpdateTableLoanApplicationStageLogsSetNullable
    {
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "6.0.12")
                .HasAnnotation("Relational:MaxIdentifierLength", 128);

            SqlServerModelBuilderExtensions.UseIdentityColumns(modelBuilder, 1L, 1);

            modelBuilder.Entity("NewLMS.UMKM.Data.Entities.AccountNumber", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<bool?>("AccSameAsDebtor")
                        .HasColumnType("bit");

                    b.Property<string>("AccountType")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("BranchId")
                        .HasMaxLength(4)
                        .HasColumnType("nvarchar(4)");

                    b.Property<string>("CIF")
                        .HasMaxLength(6)
                        .HasColumnType("nvarchar(6)");

                    b.Property<Guid>("CreatedBy")
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTime>("CreatedDate")
                        .HasColumnType("datetime2");

                    b.Property<Guid?>("DeletedBy")
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTime?>("DeletedDate")
                        .HasColumnType("datetime2");

                    b.Property<string>("ExternalAcc")
                        .HasMaxLength(20)
                        .HasColumnType("nvarchar(20)");

                    b.Property<bool>("IsDeleted")
                        .HasColumnType("bit");

                    b.Property<Guid?>("LoanApplicationId")
                        .IsRequired()
                        .HasColumnType("uniqueidentifier");

                    b.Property<Guid?>("ModifiedBy")
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTime?>("ModifiedDate")
                        .HasColumnType("datetime2");

                    b.Property<string>("OnBehalfOf")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("SUFFIX")
                        .HasMaxLength(3)
                        .HasColumnType("nvarchar(3)");

                    b.HasKey("Id");

                    b.HasIndex("BranchId");

                    b.HasIndex("LoanApplicationId");

                    b.ToTable("AccountNumbers");
                });

            modelBuilder.Entity("NewLMS.UMKM.Data.Entities.Action", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<Guid>("CreatedBy")
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTime>("CreatedDate")
                        .HasColumnType("datetime2");

                    b.Property<Guid?>("DeletedBy")
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTime?>("DeletedDate")
                        .HasColumnType("datetime2");

                    b.Property<bool>("IsDeleted")
                        .HasColumnType("bit");

                    b.Property<Guid?>("ModifiedBy")
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTime?>("ModifiedDate")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("datetime2")
                        .HasDefaultValueSql("getdate()");

                    b.Property<string>("Name")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.HasIndex("CreatedBy");

                    b.HasIndex("DeletedBy");

                    b.HasIndex("ModifiedBy");

                    b.ToTable("Actions");
                });

            modelBuilder.Entity("NewLMS.UMKM.Data.Entities.ApprovalRole", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<Guid>("CreatedBy")
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTime>("CreatedDate")
                        .HasColumnType("datetime2");

                    b.Property<Guid?>("DeletedBy")
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTime?>("DeletedDate")
                        .HasColumnType("datetime2");

                    b.Property<bool>("IsDeleted")
                        .HasColumnType("bit");

                    b.Property<Guid?>("ModifiedBy")
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTime?>("ModifiedDate")
                        .HasColumnType("datetime2");

                    b.Property<Guid>("RoleId")
                        .HasColumnType("uniqueidentifier");

                    b.HasKey("Id");

                    b.HasIndex("RoleId");

                    b.ToTable("ApprovalRoles");
                });

            modelBuilder.Entity("NewLMS.UMKM.Data.Entities.AppSetting", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<Guid>("CreatedBy")
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTime>("CreatedDate")
                        .HasColumnType("datetime2");

                    b.Property<Guid?>("DeletedBy")
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTime?>("DeletedDate")
                        .HasColumnType("datetime2");

                    b.Property<bool>("IsDeleted")
                        .HasColumnType("bit");

                    b.Property<string>("Key")
                        .HasColumnType("nvarchar(max)");

                    b.Property<Guid?>("ModifiedBy")
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTime?>("ModifiedDate")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("datetime2")
                        .HasDefaultValueSql("getdate()");

                    b.Property<string>("Name")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Value")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.ToTable("AppSettings");
                });

            modelBuilder.Entity("NewLMS.UMKM.Data.Entities.DataPK", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<Guid>("CreatedBy")
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTime>("CreatedDate")
                        .HasColumnType("datetime2");

                    b.Property<DateTime?>("CreditContractDate")
                        .HasColumnType("datetime2");

                    b.Property<Guid?>("DeletedBy")
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTime?>("DeletedDate")
                        .HasColumnType("datetime2");

                    b.Property<DateTime?>("DocumentDate")
                        .HasColumnType("datetime2");

                    b.Property<string>("DocumentNo")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime?>("DueDateCredit")
                        .HasColumnType("datetime2");

                    b.Property<DateTime?>("EffectiveDate")
                        .HasColumnType("datetime2");

                    b.Property<DateTime?>("FirstInsuranceDate")
                        .HasColumnType("datetime2");

                    b.Property<bool>("IsDeleted")
                        .HasColumnType("bit");

                    b.Property<Guid>("LoanApplicationId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<Guid?>("ModifiedBy")
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTime?>("ModifiedDate")
                        .HasColumnType("datetime2");

                    b.Property<DateTime?>("PlannedSigningDate")
                        .HasColumnType("datetime2");

                    b.HasKey("Id");

                    b.HasIndex("LoanApplicationId")
                        .IsUnique();

                    b.ToTable("DataPKs");
                });

            modelBuilder.Entity("NewLMS.UMKM.Data.Entities.Debtor", b =>
                {
                    b.Property<string>("NoIdentity")
                        .HasMaxLength(16)
                        .HasColumnType("nvarchar(16)");

                    b.Property<bool>("Active")
                        .HasColumnType("bit");

                    b.Property<string>("Address")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Citizenship")
                        .HasMaxLength(3)
                        .HasColumnType("nvarchar(3)");

                    b.Property<Guid>("CreatedBy")
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTime>("CreatedDate")
                        .HasColumnType("datetime2");

                    b.Property<DateTime>("DateOfBirth")
                        .HasColumnType("datetime2");

                    b.Property<Guid?>("DeletedBy")
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTime?>("DeletedDate")
                        .HasColumnType("datetime2");

                    b.Property<string>("EducationLevel")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Email")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Fullname")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Gender")
                        .IsRequired()
                        .HasColumnType("nvarchar(1)");

                    b.Property<bool>("IsDeleted")
                        .HasColumnType("bit");

                    b.Property<string>("MartialStatus")
                        .HasColumnType("nvarchar(max)");

                    b.Property<Guid?>("ModifiedBy")
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTime?>("ModifiedDate")
                        .HasColumnType("datetime2");

                    b.Property<string>("MotherName")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("NPWP")
                        .HasMaxLength(16)
                        .HasColumnType("nvarchar(16)");

                    b.Property<string>("Neighborhoods")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("NoBankAccount")
                        .HasMaxLength(16)
                        .HasColumnType("nvarchar(16)");

                    b.Property<string>("NoCif")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("NumberOfDependents")
                        .HasColumnType("int");

                    b.Property<string>("Phone")
                        .HasMaxLength(13)
                        .HasColumnType("nvarchar(13)");

                    b.Property<string>("PlaceOfBirth")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("RT")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("RW")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("ResidenceStatus")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int?>("RfZipCodeId")
                        .HasColumnType("int");

                    b.Property<string>("UnderwriterName")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Whatsapp")
                        .HasMaxLength(13)
                        .HasColumnType("nvarchar(13)");

                    b.HasKey("NoIdentity");

                    b.HasIndex("RfZipCodeId");

                    b.ToTable("Debtors");
                });

            modelBuilder.Entity("NewLMS.UMKM.Data.Entities.DebtorCollateral", b =>
                {
                    b.Property<Guid>("DebtorCollateralId")
                        .ValueGeneratedOnAdd()
                        .HasMaxLength(16)
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("CollateralOnBehalfOf")
                        .HasColumnType("nvarchar(max)");

                    b.Property<long>("CollateralValue")
                        .HasColumnType("bigint");

                    b.Property<Guid>("CreatedBy")
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTime>("CreatedDate")
                        .HasColumnType("datetime2");

                    b.Property<string>("DebtorId")
                        .HasMaxLength(16)
                        .HasColumnType("nvarchar(16)");

                    b.Property<Guid?>("DeletedBy")
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTime?>("DeletedDate")
                        .HasColumnType("datetime2");

                    b.Property<bool>("IsDeleted")
                        .HasColumnType("bit");

                    b.Property<Guid?>("LoanApplicationId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<Guid?>("ModifiedBy")
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTime?>("ModifiedDate")
                        .HasColumnType("datetime2");

                    b.Property<string>("NoOwnershipProof")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("RelationWithDebtor")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("RfCollateralCode")
                        .HasColumnType("nvarchar(5)");

                    b.HasKey("DebtorCollateralId");

                    b.HasIndex("DebtorId");

                    b.HasIndex("LoanApplicationId");

                    b.HasIndex("RfCollateralCode");

                    b.ToTable("DebtorCollaterals");
                });

            modelBuilder.Entity("NewLMS.UMKM.Data.Entities.DebtorCouple", b =>
                {
                    b.Property<string>("DebtorCoupleId")
                        .HasMaxLength(16)
                        .HasColumnType("nvarchar(16)");

                    b.Property<string>("Address")
                        .HasColumnType("nvarchar(max)");

                    b.Property<bool>("AddressSameAsDebtor")
                        .HasColumnType("bit");

                    b.Property<Guid>("CreatedBy")
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTime>("CreatedDate")
                        .HasColumnType("datetime2");

                    b.Property<DateTime>("DateMarriageCertificate")
                        .HasColumnType("datetime2");

                    b.Property<DateTime>("DateOfBirth")
                        .HasColumnType("datetime2");

                    b.Property<string>("DebtorCoupleNoIdentity")
                        .HasColumnType("nvarchar(max)");

                    b.Property<Guid?>("DeletedBy")
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTime?>("DeletedDate")
                        .HasColumnType("datetime2");

                    b.Property<string>("Fullname")
                        .HasColumnType("nvarchar(max)");

                    b.Property<bool>("IsDeleted")
                        .HasColumnType("bit");

                    b.Property<string>("MarriageCertificateReleasedBy")
                        .HasColumnType("nvarchar(max)");

                    b.Property<Guid?>("ModifiedBy")
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTime?>("ModifiedDate")
                        .HasColumnType("datetime2");

                    b.Property<string>("Neighborhoods")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("NoMarriageCertificate")
                        .HasMaxLength(15)
                        .HasColumnType("nvarchar(15)");

                    b.Property<string>("Occupation")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Phone")
                        .HasMaxLength(13)
                        .HasColumnType("nvarchar(13)");

                    b.Property<string>("PlaceOfBirth")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("RT")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("RW")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int?>("RfZipCodeId")
                        .HasColumnType("int");

                    b.Property<int>("Salary")
                        .HasColumnType("int");

                    b.HasKey("DebtorCoupleId");

                    b.HasIndex("RfZipCodeId");

                    b.ToTable("DebtorCouples");
                });

            modelBuilder.Entity("NewLMS.UMKM.Data.Entities.DebtorEmergency", b =>
                {
                    b.Property<Guid>("DebtorEmergencyId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("Addres")
                        .HasColumnType("nvarchar(max)");

                    b.Property<bool>("AddressSameAsDebtor")
                        .HasColumnType("bit");

                    b.Property<Guid>("CreatedBy")
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTime>("CreatedDate")
                        .HasColumnType("datetime2");

                    b.Property<string>("DebtorId")
                        .HasMaxLength(16)
                        .HasColumnType("nvarchar(16)");

                    b.Property<string>("DebtorRelation")
                        .HasColumnType("nvarchar(max)");

                    b.Property<Guid?>("DeletedBy")
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTime?>("DeletedDate")
                        .HasColumnType("datetime2");

                    b.Property<string>("Fullname")
                        .HasColumnType("nvarchar(max)");

                    b.Property<bool>("IsDeleted")
                        .HasColumnType("bit");

                    b.Property<Guid?>("ModifiedBy")
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTime?>("ModifiedDate")
                        .HasColumnType("datetime2");

                    b.Property<string>("Neighborhoods")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Phone")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("PlaceOfBirth")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("RT")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("RW")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int?>("RfZipCodeId")
                        .HasColumnType("int");

                    b.HasKey("DebtorEmergencyId");

                    b.HasIndex("DebtorId");

                    b.HasIndex("RfZipCodeId");

                    b.ToTable("DebtorEmergencies");
                });

            modelBuilder.Entity("NewLMS.UMKM.Data.Entities.DebtorExistingFacility", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<Guid>("CreatedBy")
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTime>("CreatedDate")
                        .HasColumnType("datetime2");

                    b.Property<string>("DealRef")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("DealType")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("DebtorId")
                        .HasMaxLength(16)
                        .HasColumnType("nvarchar(16)");

                    b.Property<string>("DebtorNoIdentity")
                        .HasColumnType("nvarchar(max)");

                    b.Property<Guid?>("DeletedBy")
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTime?>("DeletedDate")
                        .HasColumnType("datetime2");

                    b.Property<decimal>("FeeAdministration")
                        .HasColumnType("decimal(18,2)");

                    b.Property<float>("InsuranceCoverage")
                        .HasColumnType("real");

                    b.Property<decimal>("InterestAccrued")
                        .HasColumnType("decimal(18,2)");

                    b.Property<float>("InterestRate")
                        .HasColumnType("real");

                    b.Property<bool>("IsCanClosed")
                        .HasColumnType("bit");

                    b.Property<bool>("IsDeleted")
                        .HasColumnType("bit");

                    b.Property<bool>("IsMusisi")
                        .HasColumnType("bit");

                    b.Property<string>("LoanStatus")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime>("MaturityDate")
                        .HasColumnType("datetime2");

                    b.Property<Guid?>("ModifiedBy")
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTime?>("ModifiedDate")
                        .HasColumnType("datetime2");

                    b.Property<decimal>("NextScheduleInterestAmount")
                        .HasColumnType("decimal(18,2)");

                    b.Property<decimal>("Outstanding")
                        .HasColumnType("decimal(18,2)");

                    b.Property<decimal>("PastDueInterest")
                        .HasColumnType("decimal(18,2)");

                    b.Property<decimal>("Payment")
                        .HasColumnType("decimal(18,2)");

                    b.Property<float>("PaymentFinesInsurance")
                        .HasColumnType("real");

                    b.Property<float>("PercentagePaymentFinesInsurance")
                        .HasColumnType("real");

                    b.Property<decimal>("Plafond")
                        .HasColumnType("decimal(18,2)");

                    b.Property<DateTime>("StartDate")
                        .HasColumnType("datetime2");

                    b.HasKey("Id");

                    b.HasIndex("DebtorId");

                    b.ToTable("DebtorExistingFacilities");
                });

            modelBuilder.Entity("NewLMS.UMKM.Data.Entities.DebtorFinance", b =>
                {
                    b.Property<string>("DebtorFinanceId")
                        .HasMaxLength(16)
                        .HasColumnType("nvarchar(16)");

                    b.Property<string>("Address")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int?>("BasicSallary")
                        .HasColumnType("int");

                    b.Property<int?>("CertificationAllowance")
                        .HasColumnType("int");

                    b.Property<string>("CompanyId")
                        .HasColumnType("nvarchar(450)");

                    b.Property<Guid>("CreatedBy")
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTime>("CreatedDate")
                        .HasColumnType("datetime2");

                    b.Property<Guid?>("DeletedBy")
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTime?>("DeletedDate")
                        .HasColumnType("datetime2");

                    b.Property<string>("EmployeeCard")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime?>("EndDate")
                        .HasColumnType("datetime2");

                    b.Property<string>("Gol")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Grade")
                        .HasColumnType("nvarchar(max)");

                    b.Property<bool>("IsDeleted")
                        .HasColumnType("bit");

                    b.Property<string>("LoanType")
                        .HasMaxLength(5)
                        .HasColumnType("nvarchar(5)");

                    b.Property<Guid?>("ModifiedBy")
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTime?>("ModifiedDate")
                        .HasColumnType("datetime2");

                    b.Property<string>("Neighborhoods")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int?>("NetSalary")
                        .HasColumnType("int");

                    b.Property<string>("NoCandidateDecree")
                        .HasMaxLength(30)
                        .HasColumnType("nvarchar(30)");

                    b.Property<string>("NoEducationDecree")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("NoEmployeeDecree")
                        .HasMaxLength(30)
                        .HasColumnType("nvarchar(30)");

                    b.Property<string>("NoLastRankDecree")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("NoOtherDecree")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("NoPeriodicallyDecree")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("NoTaspenDecree")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Occupation")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("OccupationDesc")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("OfficePhone")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Pangkat")
                        .HasColumnType("nvarchar(max)");

                    b.Property<bool>("PayrollInBjb")
                        .HasColumnType("bit");

                    b.Property<int?>("PerformanceAllowance")
                        .HasColumnType("int");

                    b.Property<string>("RT")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("RW")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime?>("RetirementDate")
                        .HasColumnType("datetime2");

                    b.Property<int?>("RfZipCodeId")
                        .HasColumnType("int");

                    b.Property<int>("SourceOfPayment")
                        .HasColumnType("int");

                    b.Property<DateTime?>("StartDate")
                        .HasColumnType("datetime2");

                    b.Property<DateTime?>("StipulationDate")
                        .HasColumnType("datetime2");

                    b.Property<int?>("THT")
                        .HasColumnType("int");

                    b.Property<string>("TplCode")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("WorkingLife")
                        .HasMaxLength(1)
                        .HasColumnType("nvarchar(1)");

                    b.HasKey("DebtorFinanceId");

                    b.HasIndex("CompanyId");

                    b.HasIndex("RfZipCodeId");

                    b.ToTable("DebtorFinance");
                });

            modelBuilder.Entity("NewLMS.UMKM.Data.Entities.DecisionResultDetailNew", b =>
                {
                    b.Property<string>("CardDesc")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("CardId")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int?>("CardPriority")
                        .HasColumnType("int");

                    b.Property<string>("DecisionId")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("ItemDesc")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("ItemId")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int?>("ItemPriority")
                        .HasColumnType("int");

                    b.Property<string>("ItemValue")
                        .HasColumnType("nvarchar(max)");

                    b.Property<float?>("ItemWeight")
                        .HasColumnType("real");

                    b.Property<string>("Result1")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("ResultId")
                        .HasColumnType("nvarchar(max)");

                    b.ToTable("DecisionResultDetailNew");
                });

            modelBuilder.Entity("NewLMS.UMKM.Data.Entities.DecisionResultNew", b =>
                {
                    b.Property<string>("DecisionId")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Result1")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime?>("ResultDate")
                        .HasColumnType("datetime2");

                    b.Property<string>("ResultId")
                        .HasColumnType("nvarchar(max)");

                    b.ToTable("DecisionResultNew");
                });

            modelBuilder.Entity("NewLMS.UMKM.Data.Entities.Deviation", b =>
                {
                    b.Property<Guid>("DeviationId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<Guid>("CreatedBy")
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTime>("CreatedDate")
                        .HasColumnType("datetime2");

                    b.Property<string>("Decision")
                        .HasMaxLength(10)
                        .HasColumnType("nvarchar(10)");

                    b.Property<Guid?>("DeletedBy")
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTime?>("DeletedDate")
                        .HasColumnType("datetime2");

                    b.Property<string>("DeviationDesc")
                        .HasMaxLength(3)
                        .HasColumnType("nvarchar(3)");

                    b.Property<bool>("IsDeleted")
                        .HasColumnType("bit");

                    b.Property<string>("Justification")
                        .HasColumnType("nvarchar(max)");

                    b.Property<Guid>("LoanApplicationId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<Guid?>("ModifiedBy")
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTime?>("ModifiedDate")
                        .HasColumnType("datetime2");

                    b.HasKey("DeviationId");

                    b.HasIndex("DeviationDesc");

                    b.HasIndex("LoanApplicationId");

                    b.ToTable("Deviations");
                });

            modelBuilder.Entity("NewLMS.UMKM.Data.Entities.DisbursementLog", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier")
                        .HasColumnOrder(1);

                    b.Property<bool>("IsDeleted")
                        .HasColumnType("bit");

                    b.Property<Guid>("LoanApplicationId")
                        .HasColumnType("uniqueidentifier")
                        .HasColumnOrder(2);

                    b.Property<string>("Request")
                        .HasColumnType("nvarchar(max)")
                        .HasColumnOrder(4);

                    b.Property<DateTime?>("RequestDate")
                        .HasColumnType("datetime2")
                        .HasColumnOrder(8);

                    b.Property<string>("Response")
                        .HasColumnType("nvarchar(max)")
                        .HasColumnOrder(5);

                    b.Property<DateTime?>("ResponseDate")
                        .HasColumnType("datetime2")
                        .HasColumnOrder(9);

                    b.Property<string>("Service")
                        .HasMaxLength(5)
                        .HasColumnType("nvarchar(5)")
                        .HasColumnOrder(3);

                    b.Property<string>("Status")
                        .HasMaxLength(5)
                        .HasColumnType("nvarchar(5)")
                        .HasColumnOrder(6);

                    b.Property<Guid>("UserAdminKredit")
                        .HasColumnType("uniqueidentifier")
                        .HasColumnOrder(7);

                    b.HasKey("Id");

                    b.HasIndex("LoanApplicationId");

                    b.HasIndex("UserAdminKredit");

                    b.ToTable("DisbursementLogs");
                });

            modelBuilder.Entity("NewLMS.UMKM.Data.Entities.Document", b =>
                {
                    b.Property<Guid>("DocumentId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<Guid>("CreatedBy")
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTime>("CreatedDate")
                        .HasColumnType("datetime2");

                    b.Property<string>("Decision")
                        .HasColumnType("nvarchar(max)");

                    b.Property<Guid?>("DeletedBy")
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTime?>("DeletedDate")
                        .HasColumnType("datetime2");

                    b.Property<Guid?>("DocumentCode")
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("DocumentNo")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("DocumentType")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime?>("ExpiredDate")
                        .HasColumnType("datetime2");

                    b.Property<bool>("IsDeleted")
                        .HasColumnType("bit");

                    b.Property<string>("Justification")
                        .HasColumnType("nvarchar(max)");

                    b.Property<Guid>("LoanApplicationId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<Guid?>("ModifiedBy")
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTime?>("ModifiedDate")
                        .HasColumnType("datetime2");

                    b.Property<string>("Name")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Status")
                        .HasMaxLength(15)
                        .HasColumnType("nvarchar(15)");

                    b.Property<DateTime?>("TBODate")
                        .HasColumnType("datetime2");

                    b.Property<string>("TBODesc")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("DocumentId");

                    b.HasIndex("DocumentCode");

                    b.HasIndex("LoanApplicationId");

                    b.ToTable("Documents");
                });

            modelBuilder.Entity("NewLMS.UMKM.Data.Entities.DocumentFileUrl", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<Guid>("CreatedBy")
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTime>("CreatedDate")
                        .HasColumnType("datetime2");

                    b.Property<Guid?>("DeletedBy")
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTime?>("DeletedDate")
                        .HasColumnType("datetime2");

                    b.Property<Guid>("DocumentId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<Guid>("FileUrlId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<bool>("IsDeleted")
                        .HasColumnType("bit");

                    b.Property<Guid?>("ModifiedBy")
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTime?>("ModifiedDate")
                        .HasColumnType("datetime2");

                    b.HasKey("Id");

                    b.HasIndex("DocumentId");

                    b.HasIndex("FileUrlId");

                    b.ToTable("DocumentFileUrls");
                });

            modelBuilder.Entity("NewLMS.UMKM.Data.Entities.DocumentSp3k", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<Guid>("CreatedBy")
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTime>("CreatedDate")
                        .HasColumnType("datetime2");

                    b.Property<Guid?>("DeletedBy")
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTime?>("DeletedDate")
                        .HasColumnType("datetime2");

                    b.Property<Guid?>("DocumentSp3kUrl")
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("FileType")
                        .HasColumnType("nvarchar(max)");

                    b.Property<bool>("IsDeleted")
                        .HasColumnType("bit");

                    b.Property<Guid>("LoanApplicationId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<Guid?>("ModifiedBy")
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTime?>("ModifiedDate")
                        .HasColumnType("datetime2");

                    b.Property<string>("ProductType")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.HasIndex("DocumentSp3kUrl");

                    b.HasIndex("LoanApplicationId");

                    b.ToTable("DocumentSp3ks");
                });

            modelBuilder.Entity("NewLMS.UMKM.Data.Entities.DownloadProspect", b =>
                {
                    b.Property<string>("AccountOfficer")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Address")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("Age")
                        .HasColumnType("int");

                    b.Property<string>("BookingBranch")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("BranchId")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("City")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("CompanyId")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime>("DateOfBirth")
                        .HasColumnType("datetime2");

                    b.Property<string>("District")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime?>("EstimateProcessDate")
                        .HasColumnType("datetime2");

                    b.Property<string>("Fullname")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("Gender")
                        .HasColumnType("int");

                    b.Property<bool>("IsDeleted")
                        .HasColumnType("bit");

                    b.Property<int>("Length")
                        .HasColumnType("int");

                    b.Property<DateTime?>("MaturityDate")
                        .HasColumnType("datetime2");

                    b.Property<string>("MotherName")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Neighborhoods")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("NoIdentity")
                        .HasColumnType("nvarchar(max)");

                    b.Property<double?>("OUTSTANDING")
                        .HasColumnType("float");

                    b.Property<double?>("PLAFOND")
                        .HasColumnType("float");

                    b.Property<int>("Page")
                        .HasColumnType("int");

                    b.Property<string>("PhoneNumber")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("PlaceOfBirth")
                        .HasColumnType("nvarchar(max)");

                    b.Property<byte?>("ProcessStatus")
                        .HasColumnType("tinyint");

                    b.Property<string>("ProspectId")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Province")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("RfSectorLBU3Code")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Rt")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Rw")
                        .HasColumnType("nvarchar(max)");

                    b.Property<double?>("Sisa")
                        .HasColumnType("float");

                    b.Property<string>("SourceApplication")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Status")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("SubProductID")
                        .HasColumnType("nvarchar(max)");

                    b.Property<double?>("TargetPlafond")
                        .HasColumnType("float");

                    b.Property<int>("TotalData")
                        .HasColumnType("int");

                    b.Property<string>("ZipCode")
                        .HasColumnType("nvarchar(max)");

                    b.ToTable("DownloadProspects");
                });

            modelBuilder.Entity("NewLMS.UMKM.Data.Entities.EmailSMTPSetting", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<Guid>("CreatedBy")
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTime>("CreatedDate")
                        .HasColumnType("datetime2");

                    b.Property<Guid?>("DeletedBy")
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTime?>("DeletedDate")
                        .HasColumnType("datetime2");

                    b.Property<string>("Host")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<bool>("IsDefault")
                        .HasColumnType("bit");

                    b.Property<bool>("IsDeleted")
                        .HasColumnType("bit");

                    b.Property<bool>("IsEnableSSL")
                        .HasColumnType("bit");

                    b.Property<Guid?>("ModifiedBy")
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTime?>("ModifiedDate")
                        .HasColumnType("datetime2");

                    b.Property<string>("Password")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("Port")
                        .HasColumnType("int");

                    b.Property<string>("UserName")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.HasIndex("CreatedBy");

                    b.HasIndex("DeletedBy");

                    b.HasIndex("ModifiedBy");

                    b.ToTable("EmailSMTPSettings");
                });

            modelBuilder.Entity("NewLMS.UMKM.Data.Entities.EmailTemplate", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("Body")
                        .HasColumnType("nvarchar(max)");

                    b.Property<Guid>("CreatedBy")
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTime>("CreatedDate")
                        .HasColumnType("datetime2");

                    b.Property<Guid?>("DeletedBy")
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTime?>("DeletedDate")
                        .HasColumnType("datetime2");

                    b.Property<bool>("IsDeleted")
                        .HasColumnType("bit");

                    b.Property<Guid?>("ModifiedBy")
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTime?>("ModifiedDate")
                        .HasColumnType("datetime2");

                    b.Property<string>("Name")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Subject")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.ToTable("EmailTemplates");
                });

            modelBuilder.Entity("NewLMS.UMKM.Data.Entities.FileUrl", b =>
                {
                    b.Property<Guid>("FileUrlId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier")
                        .HasColumnOrder(1);

                    b.Property<Guid>("CreatedBy")
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTime>("CreatedDate")
                        .HasColumnType("datetime2");

                    b.Property<Guid?>("DeletedBy")
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTime?>("DeletedDate")
                        .HasColumnType("datetime2");

                    b.Property<string>("FileSize")
                        .HasColumnType("nvarchar(max)")
                        .HasColumnOrder(3);

                    b.Property<string>("FileType")
                        .HasColumnType("nvarchar(max)")
                        .HasColumnOrder(4);

                    b.Property<bool>("IsDeleted")
                        .HasColumnType("bit");

                    b.Property<Guid?>("ModifiedBy")
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTime?>("ModifiedDate")
                        .HasColumnType("datetime2");

                    b.Property<string>("Url")
                        .HasColumnType("nvarchar(max)")
                        .HasColumnOrder(2);

                    b.HasKey("FileUrlId");

                    b.ToTable("FileUrls");
                });

            modelBuilder.Entity("NewLMS.UMKM.Data.Entities.InfoLMS", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("Category")
                        .HasColumnType("nvarchar(max)");

                    b.Property<Guid>("CreatedBy")
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTime>("CreatedDate")
                        .HasColumnType("datetime2");

                    b.Property<Guid?>("DeletedBy")
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTime?>("DeletedDate")
                        .HasColumnType("datetime2");

                    b.Property<string>("Description")
                        .HasColumnType("text");

                    b.Property<DateTime?>("EndDate")
                        .HasColumnType("datetime2");

                    b.Property<bool>("IsDeleted")
                        .HasColumnType("bit");

                    b.Property<Guid?>("ModifiedBy")
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTime?>("ModifiedDate")
                        .HasColumnType("datetime2");

                    b.Property<DateTime?>("StartDate")
                        .HasColumnType("datetime2");

                    b.Property<string>("Title")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.ToTable("InfoLMs");
                });

            modelBuilder.Entity("NewLMS.UMKM.Data.Entities.LegalSign", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("BindingType")
                        .HasColumnType("nvarchar(max)");

                    b.Property<Guid>("CreatedBy")
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTime>("CreatedDate")
                        .HasColumnType("datetime2");

                    b.Property<Guid?>("DeletedBy")
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTime?>("DeletedDate")
                        .HasColumnType("datetime2");

                    b.Property<bool>("IsDeleted")
                        .HasColumnType("bit");

                    b.Property<string>("LegalDomicile")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("LegalOfficer")
                        .HasColumnType("nvarchar(max)");

                    b.Property<Guid>("LoanApplicationId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<Guid?>("ModifiedBy")
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTime?>("ModifiedDate")
                        .HasColumnType("datetime2");

                    b.Property<string>("NoSK")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Pemutus1")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("SigningNota")
                        .HasColumnType("nvarchar(450)");

                    b.Property<string>("SigningPK")
                        .HasColumnType("nvarchar(450)");

                    b.Property<string>("SigningPlace")
                        .HasColumnType("nvarchar(max)");

                    b.Property<bool?>("SpousePresence")
                        .HasColumnType("bit");

                    b.HasKey("Id");

                    b.HasIndex("LoanApplicationId")
                        .IsUnique();

                    b.HasIndex("SigningNota");

                    b.HasIndex("SigningPK");

                    b.ToTable("LegalSigns");
                });

            modelBuilder.Entity("NewLMS.UMKM.Data.Entities.LoanApplication", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("ApprovedBy")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime?>("ApprovedDate")
                        .HasColumnType("datetime2");

                    b.Property<string>("BankAccountReferral")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("BankRelation")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("BranchId")
                        .HasMaxLength(4)
                        .HasColumnType("nvarchar(4)");

                    b.Property<string>("CoreLoanReference")
                        .HasColumnType("nvarchar(max)");

                    b.Property<Guid>("CreatedBy")
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTime>("CreatedDate")
                        .HasColumnType("datetime2");

                    b.Property<string>("CreditStatus")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("DebtorReferral")
                        .HasColumnType("nvarchar(max)");

                    b.Property<Guid?>("DeletedBy")
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTime?>("DeletedDate")
                        .HasColumnType("datetime2");

                    b.Property<bool>("DuplicationChecked")
                        .HasColumnType("bit");

                    b.Property<bool>("IsApproved")
                        .HasColumnType("bit");

                    b.Property<bool>("IsDeleted")
                        .HasColumnType("bit");

                    b.Property<bool>("IsHasCollateral")
                        .HasColumnType("bit");

                    b.Property<bool>("IsHasDisbursement")
                        .HasColumnType("bit");

                    b.Property<bool>("IsMusisi")
                        .HasColumnType("bit");

                    b.Property<string>("LoanApplicationId")
                        .IsRequired()
                        .HasMaxLength(20)
                        .HasColumnType("nvarchar(20)");

                    b.Property<Guid?>("LoanApplicationInsuranceFeeId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<Guid?>("ModifiedBy")
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTime?>("ModifiedDate")
                        .HasColumnType("datetime2");

                    b.Property<string>("NoIdentity")
                        .HasMaxLength(16)
                        .HasColumnType("nvarchar(16)");

                    b.Property<Guid>("OwnerId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<byte>("ProcessStatus")
                        .HasMaxLength(4)
                        .HasColumnType("tinyint");

                    b.Property<Guid>("ProspectGuid")
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("Remarks")
                        .HasColumnType("text");

                    b.Property<string>("RfSectorLBU3Code")
                        .HasColumnType("nvarchar(450)");

                    b.Property<string>("RfSubProductId")
                        .HasColumnType("nvarchar(450)");

                    b.Property<Guid>("StageId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("SubmissionType")
                        .HasMaxLength(20)
                        .HasColumnType("nvarchar(20)");

                    b.HasKey("Id");

                    b.HasIndex("BranchId");

                    b.HasIndex("LoanApplicationId")
                        .IsUnique();

                    b.HasIndex("LoanApplicationInsuranceFeeId");

                    b.HasIndex("NoIdentity");

                    b.HasIndex("OwnerId");

                    b.HasIndex("ProspectGuid");

                    b.HasIndex("RfSectorLBU3Code");

                    b.HasIndex("RfSubProductId");

                    b.HasIndex("StageId");

                    b.ToTable("LoanApplications");
                });

            modelBuilder.Entity("NewLMS.UMKM.Data.Entities.LoanApplicationApproval", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("ActionBy")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime?>("ActionDate")
                        .HasColumnType("datetime2");

                    b.Property<int>("AnalisaStatus")
                        .HasColumnType("int");

                    b.Property<Guid>("CreatedBy")
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTime>("CreatedDate")
                        .HasColumnType("datetime2");

                    b.Property<Guid?>("DeletedBy")
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTime?>("DeletedDate")
                        .HasColumnType("datetime2");

                    b.Property<bool>("IsDeleted")
                        .HasColumnType("bit");

                    b.Property<Guid>("LoanApplicationId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<Guid?>("ModifiedBy")
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTime?>("ModifiedDate")
                        .HasColumnType("datetime2");

                    b.HasKey("Id");

                    b.HasIndex("LoanApplicationId");

                    b.ToTable("LoanApplicationApprovals");
                });

            modelBuilder.Entity("NewLMS.UMKM.Data.Entities.LoanApplicationAssignment", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<Guid>("AssignFrom")
                        .HasColumnType("uniqueidentifier");

                    b.Property<Guid>("AssignTo")
                        .HasColumnType("uniqueidentifier");

                    b.Property<Guid>("Assigned")
                        .HasColumnType("uniqueidentifier");

                    b.Property<Guid>("CreatedBy")
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTime>("CreatedDate")
                        .HasColumnType("datetime2");

                    b.Property<Guid?>("DeletedBy")
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTime?>("DeletedDate")
                        .HasColumnType("datetime2");

                    b.Property<bool>("IsDeleted")
                        .HasColumnType("bit");

                    b.Property<Guid>("LoanApplicationId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<Guid?>("ModifiedBy")
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTime?>("ModifiedDate")
                        .HasColumnType("datetime2");

                    b.Property<string>("Remarks")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.HasIndex("LoanApplicationId");

                    b.ToTable("LoanApplicationAssignments");
                });

            modelBuilder.Entity("NewLMS.UMKM.Data.Entities.LoanApplicationComplienceSheet", b =>
                {
                    b.Property<Guid>("LoanApplicationComplienceSheetId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("BMPK")
                        .HasMaxLength(10)
                        .HasColumnType("nvarchar(10)");

                    b.Property<string>("BankRelations")
                        .HasMaxLength(10)
                        .HasColumnType("nvarchar(10)");

                    b.Property<DateTime>("CDDDate")
                        .HasColumnType("datetime2");

                    b.Property<string>("CDDProfile")
                        .HasMaxLength(10)
                        .HasColumnType("nvarchar(10)");

                    b.Property<string>("CollateralInsurance")
                        .HasMaxLength(10)
                        .HasColumnType("nvarchar(10)");

                    b.Property<string>("CollateralOwnership")
                        .HasMaxLength(10)
                        .HasColumnType("nvarchar(10)");

                    b.Property<string>("CollateralType")
                        .HasMaxLength(10)
                        .HasColumnType("nvarchar(10)");

                    b.Property<string>("ConflictOfInterest")
                        .HasMaxLength(10)
                        .HasColumnType("nvarchar(10)");

                    b.Property<string>("CorrectIdentity")
                        .HasMaxLength(10)
                        .HasColumnType("nvarchar(10)");

                    b.Property<Guid>("CreatedBy")
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTime>("CreatedDate")
                        .HasColumnType("datetime2");

                    b.Property<string>("CreditIncrease")
                        .HasMaxLength(10)
                        .HasColumnType("nvarchar(10)");

                    b.Property<string>("CreditLifeInsurance")
                        .HasMaxLength(10)
                        .HasColumnType("nvarchar(10)");

                    b.Property<string>("CustomerSince")
                        .HasMaxLength(10)
                        .HasColumnType("nvarchar(10)");

                    b.Property<string>("DHN")
                        .HasMaxLength(10)
                        .HasColumnType("nvarchar(10)");

                    b.Property<DateTime>("DHNDate")
                        .HasColumnType("datetime2");

                    b.Property<string>("DHNwithdrawal")
                        .HasMaxLength(10)
                        .HasColumnType("nvarchar(10)");

                    b.Property<string>("DaftarHitamNasional")
                        .HasMaxLength(10)
                        .HasColumnType("nvarchar(10)");

                    b.Property<Guid?>("DeletedBy")
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTime?>("DeletedDate")
                        .HasColumnType("datetime2");

                    b.Property<string>("EmployeeIdentity")
                        .HasMaxLength(10)
                        .HasColumnType("nvarchar(10)");

                    b.Property<string>("FamilyCertificateLegal")
                        .HasMaxLength(10)
                        .HasColumnType("nvarchar(10)");

                    b.Property<bool>("IsDeleted")
                        .HasColumnType("bit");

                    b.Property<string>("KTPLegal")
                        .HasMaxLength(10)
                        .HasColumnType("nvarchar(10)");

                    b.Property<string>("MarriageCertificateLegal")
                        .HasMaxLength(10)
                        .HasColumnType("nvarchar(10)");

                    b.Property<Guid?>("ModifiedBy")
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTime?>("ModifiedDate")
                        .HasColumnType("datetime2");

                    b.Property<string>("ProofOfCollateralOwnership")
                        .HasMaxLength(10)
                        .HasColumnType("nvarchar(10)");

                    b.Property<string>("ProofOfIncome")
                        .HasMaxLength(10)
                        .HasColumnType("nvarchar(10)");

                    b.Property<string>("SLIK")
                        .HasMaxLength(10)
                        .HasColumnType("nvarchar(10)");

                    b.Property<string>("SufficientCollateral")
                        .HasMaxLength(10)
                        .HasColumnType("nvarchar(10)");

                    b.Property<long>("TotalCollateralInsurance")
                        .HasColumnType("bigint");

                    b.Property<string>("ValidIdentity")
                        .HasMaxLength(10)
                        .HasColumnType("nvarchar(10)");

                    b.HasKey("LoanApplicationComplienceSheetId");

                    b.HasIndex("BMPK");

                    b.HasIndex("BankRelations");

                    b.HasIndex("CDDProfile");

                    b.HasIndex("CollateralInsurance");

                    b.HasIndex("CollateralOwnership");

                    b.HasIndex("CollateralType");

                    b.HasIndex("ConflictOfInterest");

                    b.HasIndex("CorrectIdentity");

                    b.HasIndex("CreditIncrease");

                    b.HasIndex("CreditLifeInsurance");

                    b.HasIndex("CustomerSince");

                    b.HasIndex("DHN");

                    b.HasIndex("DHNwithdrawal");

                    b.HasIndex("DaftarHitamNasional");

                    b.HasIndex("EmployeeIdentity");

                    b.HasIndex("FamilyCertificateLegal");

                    b.HasIndex("KTPLegal");

                    b.HasIndex("MarriageCertificateLegal");

                    b.HasIndex("ProofOfCollateralOwnership");

                    b.HasIndex("ProofOfIncome");

                    b.HasIndex("SLIK");

                    b.HasIndex("SufficientCollateral");

                    b.HasIndex("ValidIdentity");

                    b.ToTable("LoanApplicationComplienceSheets");
                });

            modelBuilder.Entity("NewLMS.UMKM.Data.Entities.LoanApplicationCreditContractTerm", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<bool?>("Answer")
                        .HasColumnType("bit");

                    b.Property<bool?>("AnswerOOK")
                        .HasColumnType("bit");

                    b.Property<Guid>("CreatedBy")
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTime>("CreatedDate")
                        .HasColumnType("datetime2");

                    b.Property<Guid?>("DeletedBy")
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTime?>("DeletedDate")
                        .HasColumnType("datetime2");

                    b.Property<bool>("IsDeleted")
                        .HasColumnType("bit");

                    b.Property<Guid>("LoanApplicationId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<Guid?>("ModifiedBy")
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTime?>("ModifiedDate")
                        .HasColumnType("datetime2");

                    b.Property<string>("Remarks")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Term")
                        .HasMaxLength(450)
                        .HasColumnType("nvarchar(450)");

                    b.Property<string>("UserId")
                        .HasColumnType("nvarchar(450)");

                    b.Property<string>("UserIdOOK")
                        .HasColumnType("nvarchar(450)");

                    b.HasKey("Id");

                    b.HasIndex("LoanApplicationId");

                    b.HasIndex("UserId");

                    b.HasIndex("UserIdOOK");

                    b.ToTable("LoanApplicationCreditContractTerms");
                });

            modelBuilder.Entity("NewLMS.UMKM.Data.Entities.LoanApplicationCreditHistory", b =>
                {
                    b.Property<Guid>("CreditHistoryId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("ApplicationType")
                        .HasColumnType("nvarchar(10)");

                    b.Property<string>("BankId")
                        .HasColumnType("nvarchar(5)");

                    b.Property<string>("Behaviour")
                        .HasColumnType("nvarchar(10)");

                    b.Property<string>("Collectibility")
                        .HasColumnType("nvarchar(10)");

                    b.Property<string>("Condition")
                        .HasColumnType("nvarchar(5)");

                    b.Property<Guid>("CreatedBy")
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTime>("CreatedDate")
                        .HasColumnType("datetime2");

                    b.Property<string>("CreditType")
                        .HasColumnType("nvarchar(50)");

                    b.Property<string>("DebtorName")
                        .HasColumnType("nvarchar(max)");

                    b.Property<Guid?>("DeletedBy")
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTime?>("DeletedDate")
                        .HasColumnType("datetime2");

                    b.Property<string>("EconomySector")
                        .HasColumnType("nvarchar(10)");

                    b.Property<DateTime?>("EndDate")
                        .HasColumnType("datetime2");

                    b.Property<float>("Interest")
                        .HasColumnType("real");

                    b.Property<bool>("IsDeleted")
                        .HasColumnType("bit");

                    b.Property<bool>("IsRobo")
                        .HasColumnType("bit");

                    b.Property<Guid>("LoanApplicationid")
                        .HasColumnType("uniqueidentifier");

                    b.Property<Guid?>("ModifiedBy")
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTime?>("ModifiedDate")
                        .HasColumnType("datetime2");

                    b.Property<int>("Outstanding")
                        .HasColumnType("int");

                    b.Property<int>("PlafondLimit")
                        .HasColumnType("int");

                    b.Property<string>("SLIKNoIdentity")
                        .HasMaxLength(16)
                        .HasColumnType("nvarchar(16)");

                    b.Property<bool>("SLIKStatus")
                        .HasColumnType("bit");

                    b.Property<DateTime?>("StartDate")
                        .HasColumnType("datetime2");

                    b.Property<DateTime?>("StuckDate")
                        .HasColumnType("datetime2");

                    b.HasKey("CreditHistoryId");

                    b.HasIndex("ApplicationType");

                    b.HasIndex("BankId");

                    b.HasIndex("Behaviour");

                    b.HasIndex("Collectibility");

                    b.HasIndex("Condition");

                    b.HasIndex("CreditType");

                    b.HasIndex("EconomySector");

                    b.HasIndex("LoanApplicationid");

                    b.ToTable("LoanApplicationCreditHistories");
                });

            modelBuilder.Entity("NewLMS.UMKM.Data.Entities.LoanApplicationDuplication", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("BankName")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Branch")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("CIF")
                        .HasColumnType("nvarchar(max)");

                    b.Property<Guid>("CreatedBy")
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTime>("CreatedDate")
                        .HasColumnType("datetime2");

                    b.Property<string>("CustType")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime?>("DateOfBirth")
                        .HasColumnType("datetime2");

                    b.Property<Guid?>("DeletedBy")
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTime?>("DeletedDate")
                        .HasColumnType("datetime2");

                    b.Property<DateTime?>("Expired")
                        .HasColumnType("datetime2");

                    b.Property<string>("Fullname")
                        .HasColumnType("nvarchar(max)");

                    b.Property<bool>("IsDeleted")
                        .HasColumnType("bit");

                    b.Property<decimal>("Limit")
                        .HasColumnType("decimal(18,2)");

                    b.Property<Guid>("LoanApplicationId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("LoanType")
                        .HasColumnType("nvarchar(max)");

                    b.Property<Guid?>("ModifiedBy")
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTime?>("ModifiedDate")
                        .HasColumnType("datetime2");

                    b.Property<string>("NoIdentity")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Npwp")
                        .HasColumnType("nvarchar(max)");

                    b.Property<decimal>("Outstanding")
                        .HasColumnType("decimal(18,2)");

                    b.Property<string>("ReferenceNo")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("ResultType")
                        .HasMaxLength(5)
                        .HasColumnType("nvarchar(5)");

                    b.Property<string>("SearchDesc")
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.Property<string>("SearchId")
                        .HasMaxLength(20)
                        .HasColumnType("nvarchar(20)");

                    b.Property<string>("SearchType")
                        .HasMaxLength(20)
                        .HasColumnType("nvarchar(20)");

                    b.Property<string>("Stage")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("TypeId")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.HasKey("Id");

                    b.HasIndex("LoanApplicationId");

                    b.ToTable("LoanApplicationDuplications");
                });

            modelBuilder.Entity("NewLMS.UMKM.Data.Entities.LoanApplicationInsuranceFee", b =>
                {
                    b.Property<Guid>("LoanApplicationInsuranceFeeId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<int>("AdminFee")
                        .HasColumnType("int");

                    b.Property<string>("BrokerCode")
                        .HasMaxLength(20)
                        .HasColumnType("nvarchar(20)");

                    b.Property<string>("CoverageCode")
                        .HasMaxLength(10)
                        .HasColumnType("nvarchar(10)");

                    b.Property<int>("CoverageValue")
                        .HasColumnType("int");

                    b.Property<Guid>("CreatedBy")
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTime>("CreatedDate")
                        .HasColumnType("datetime2");

                    b.Property<Guid?>("DeletedBy")
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTime?>("DeletedDate")
                        .HasColumnType("datetime2");

                    b.Property<int>("InsuranceFee")
                        .HasColumnType("int");

                    b.Property<float>("InsurancePremi")
                        .HasColumnType("real");

                    b.Property<bool>("IsDeleted")
                        .HasColumnType("bit");

                    b.Property<Guid?>("ModifiedBy")
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTime?>("ModifiedDate")
                        .HasColumnType("datetime2");

                    b.Property<float>("Provision")
                        .HasColumnType("real");

                    b.Property<int>("ProvisionValue")
                        .HasColumnType("int");

                    b.HasKey("LoanApplicationInsuranceFeeId");

                    b.HasIndex("BrokerCode");

                    b.HasIndex("CoverageCode");

                    b.ToTable("LoanApplicationInsuranceFees");
                });

            modelBuilder.Entity("NewLMS.UMKM.Data.Entities.LoanApplicationInsuranceFeeLog", b =>
                {
                    b.Property<Guid>("LoanApplicationInsuranceFeeLogId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<int>("AdminFee")
                        .HasColumnType("int");

                    b.Property<string>("BrokerCode")
                        .HasMaxLength(20)
                        .HasColumnType("nvarchar(20)");

                    b.Property<string>("CoverageCode")
                        .HasMaxLength(10)
                        .HasColumnType("nvarchar(10)");

                    b.Property<int>("CoverageValue")
                        .HasColumnType("int");

                    b.Property<Guid>("CreatedBy")
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTime>("CreatedDate")
                        .HasColumnType("datetime2");

                    b.Property<Guid?>("DeletedBy")
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTime?>("DeletedDate")
                        .HasColumnType("datetime2");

                    b.Property<int>("InsuranceFee")
                        .HasColumnType("int");

                    b.Property<float>("InsurancePremi")
                        .HasColumnType("real");

                    b.Property<bool>("IsDeleted")
                        .HasColumnType("bit");

                    b.Property<Guid?>("LoanApplicationId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<Guid?>("ModifiedBy")
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTime?>("ModifiedDate")
                        .HasColumnType("datetime2");

                    b.Property<float>("Provision")
                        .HasColumnType("real");

                    b.Property<int>("ProvisionValue")
                        .HasColumnType("int");

                    b.HasKey("LoanApplicationInsuranceFeeLogId");

                    b.HasIndex("BrokerCode");

                    b.HasIndex("CoverageCode");

                    b.HasIndex("LoanApplicationId");

                    b.ToTable("LoanApplicationInsuranceFeesLogs");
                });

            modelBuilder.Entity("NewLMS.UMKM.Data.Entities.LoanApplicationInsuranceLife", b =>
                {
                    b.Property<Guid>("LoanApplicationInsuranceLifeId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<Guid>("CreatedBy")
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTime>("CreatedDate")
                        .HasColumnType("datetime2");

                    b.Property<Guid?>("DeletedBy")
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTime?>("DeletedDate")
                        .HasColumnType("datetime2");

                    b.Property<string>("InsuranceCompanyId")
                        .HasMaxLength(20)
                        .HasColumnType("nvarchar(20)");

                    b.Property<string>("InsurancePlanCode")
                        .HasMaxLength(10)
                        .HasColumnType("nvarchar(10)");

                    b.Property<string>("InsuranceTemplateCode")
                        .HasMaxLength(10)
                        .HasColumnType("nvarchar(10)");

                    b.Property<bool?>("IsBroker")
                        .HasColumnType("bit");

                    b.Property<bool>("IsDeleted")
                        .HasColumnType("bit");

                    b.Property<double?>("LifeCommisionPercent")
                        .HasColumnType("float");

                    b.Property<double?>("LifeInsurancePlafond")
                        .HasColumnType("float");

                    b.Property<double?>("LifeInsurancePolicyFee")
                        .HasColumnType("float");

                    b.Property<double?>("LifeInsurancePremi")
                        .HasColumnType("float");

                    b.Property<double?>("LifeInsuranceValue")
                        .HasColumnType("float");

                    b.Property<int?>("LifeInsuraneYear")
                        .HasColumnType("int");

                    b.Property<Guid?>("LoanApplicationNo")
                        .HasColumnType("uniqueidentifier");

                    b.Property<Guid?>("ModifiedBy")
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTime?>("ModifiedDate")
                        .HasColumnType("datetime2");

                    b.Property<int?>("Seq")
                        .HasColumnType("int");

                    b.HasKey("LoanApplicationInsuranceLifeId");

                    b.HasIndex("InsuranceCompanyId");

                    b.HasIndex("InsuranceTemplateCode");

                    b.HasIndex("LoanApplicationNo");

                    b.ToTable("LoanApplicationInsuranceLives");
                });

            modelBuilder.Entity("NewLMS.UMKM.Data.Entities.LoanApplicationProgram", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<Guid>("CreatedBy")
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTime>("CreatedDate")
                        .HasColumnType("datetime2");

                    b.Property<Guid?>("DeletedBy")
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTime?>("DeletedDate")
                        .HasColumnType("datetime2");

                    b.Property<bool>("IsDeleted")
                        .HasColumnType("bit");

                    b.Property<Guid>("LoanApplicationId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<Guid?>("ModifiedBy")
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTime?>("ModifiedDate")
                        .HasColumnType("datetime2");

                    b.Property<string>("RfProgramId")
                        .IsRequired()
                        .HasColumnType("nvarchar(15)");

                    b.HasKey("Id");

                    b.HasIndex("LoanApplicationId");

                    b.HasIndex("RfProgramId");

                    b.ToTable("LoanApplicationPrograms");
                });

            modelBuilder.Entity("NewLMS.UMKM.Data.Entities.LoanApplicationSandiBI", b =>
                {
                    b.Property<Guid>("LoanApplicationSandiBIId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<Guid>("CreatedBy")
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTime>("CreatedDate")
                        .HasColumnType("datetime2");

                    b.Property<Guid?>("DeletedBy")
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTime?>("DeletedDate")
                        .HasColumnType("datetime2");

                    b.Property<string>("GolonganDebitur")
                        .HasMaxLength(10)
                        .HasColumnType("nvarchar(10)");

                    b.Property<string>("GolonganDebiturLBU")
                        .HasMaxLength(10)
                        .HasColumnType("nvarchar(10)");

                    b.Property<string>("GolonganDebiturSID")
                        .HasMaxLength(10)
                        .HasColumnType("nvarchar(10)");

                    b.Property<string>("GolonganKredit")
                        .HasMaxLength(10)
                        .HasColumnType("nvarchar(10)");

                    b.Property<string>("GolonganPenjamin")
                        .HasMaxLength(10)
                        .HasColumnType("nvarchar(10)");

                    b.Property<bool>("IsDeleted")
                        .HasColumnType("bit");

                    b.Property<string>("JenisAgunanLBU")
                        .HasMaxLength(10)
                        .HasColumnType("nvarchar(10)");

                    b.Property<string>("JenisKredit")
                        .HasMaxLength(10)
                        .HasColumnType("nvarchar(10)");

                    b.Property<string>("JenisKreditLBU")
                        .HasMaxLength(10)
                        .HasColumnType("nvarchar(10)");

                    b.Property<string>("JenisKreditSID")
                        .HasMaxLength(10)
                        .HasColumnType("nvarchar(10)");

                    b.Property<string>("JenisPengguna")
                        .HasMaxLength(10)
                        .HasColumnType("nvarchar(10)");

                    b.Property<string>("JenisPenggunaLBU")
                        .HasMaxLength(10)
                        .HasColumnType("nvarchar(10)");

                    b.Property<string>("JenisPenggunaSID")
                        .HasMaxLength(10)
                        .HasColumnType("nvarchar(10)");

                    b.Property<string>("JenisSukuBunga")
                        .HasMaxLength(10)
                        .HasColumnType("nvarchar(10)");

                    b.Property<string>("KategoriDebitur")
                        .HasMaxLength(10)
                        .HasColumnType("nvarchar(10)");

                    b.Property<string>("KategoriPengukuran")
                        .HasMaxLength(10)
                        .HasColumnType("nvarchar(10)");

                    b.Property<string>("KategoriPortofolio")
                        .HasMaxLength(10)
                        .HasColumnType("nvarchar(10)");

                    b.Property<string>("KategoriPortofolioLBU")
                        .HasMaxLength(10)
                        .HasColumnType("nvarchar(10)");

                    b.Property<string>("KeterkaitanBMPK")
                        .HasMaxLength(10)
                        .HasColumnType("nvarchar(10)");

                    b.Property<string>("KodePeminjam")
                        .HasMaxLength(10)
                        .HasColumnType("nvarchar(10)");

                    b.Property<string>("LembagaPemeringkat")
                        .HasMaxLength(10)
                        .HasColumnType("nvarchar(10)");

                    b.Property<Guid?>("ModifiedBy")
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTime?>("ModifiedDate")
                        .HasColumnType("datetime2");

                    b.Property<string>("OrientasiPengguna")
                        .HasMaxLength(10)
                        .HasColumnType("nvarchar(10)");

                    b.Property<string>("OrientasiPenggunaLBU")
                        .HasMaxLength(10)
                        .HasColumnType("nvarchar(10)");

                    b.Property<string>("OrientasiPenggunaSID")
                        .HasMaxLength(10)
                        .HasColumnType("nvarchar(10)");

                    b.Property<string>("PenerbitAgunan")
                        .HasMaxLength(10)
                        .HasColumnType("nvarchar(10)");

                    b.Property<string>("PeringkatPenerbitAgunan")
                        .HasMaxLength(10)
                        .HasColumnType("nvarchar(10)");

                    b.Property<string>("PeringkatPerusahaan")
                        .HasMaxLength(10)
                        .HasColumnType("nvarchar(10)");

                    b.Property<string>("SektorEkonomi")
                        .HasMaxLength(10)
                        .HasColumnType("nvarchar(10)");

                    b.Property<string>("SektorEkonomiLBU")
                        .HasMaxLength(10)
                        .HasColumnType("nvarchar(10)");

                    b.Property<string>("SektorEkonomiSID")
                        .HasMaxLength(10)
                        .HasColumnType("nvarchar(10)");

                    b.Property<string>("SifatAgunanLBU")
                        .HasMaxLength(10)
                        .HasColumnType("nvarchar(10)");

                    b.Property<string>("SifatKredit")
                        .HasMaxLength(10)
                        .HasColumnType("nvarchar(10)");

                    b.Property<string>("SifatKreditLBU")
                        .HasMaxLength(10)
                        .HasColumnType("nvarchar(10)");

                    b.Property<string>("SifatKreditSID")
                        .HasMaxLength(10)
                        .HasColumnType("nvarchar(10)");

                    b.Property<string>("StatusDebitur")
                        .HasMaxLength(10)
                        .HasColumnType("nvarchar(10)");

                    b.Property<string>("SubSektorEkonomiLBU")
                        .HasMaxLength(10)
                        .HasColumnType("nvarchar(10)");

                    b.Property<string>("SubSubSektorEkonomiLBU")
                        .HasMaxLength(10)
                        .HasColumnType("nvarchar(10)");

                    b.Property<string>("SumberDana")
                        .HasMaxLength(10)
                        .HasColumnType("nvarchar(10)");

                    b.Property<string>("TipePlafond")
                        .HasMaxLength(10)
                        .HasColumnType("nvarchar(10)");

                    b.HasKey("LoanApplicationSandiBIId");

                    b.HasIndex("GolonganDebitur");

                    b.HasIndex("GolonganDebiturLBU");

                    b.HasIndex("GolonganDebiturSID");

                    b.HasIndex("GolonganKredit");

                    b.HasIndex("GolonganPenjamin");

                    b.HasIndex("JenisAgunanLBU");

                    b.HasIndex("JenisKredit");

                    b.HasIndex("JenisKreditLBU");

                    b.HasIndex("JenisKreditSID");

                    b.HasIndex("JenisPengguna");

                    b.HasIndex("JenisPenggunaLBU");

                    b.HasIndex("JenisPenggunaSID");

                    b.HasIndex("JenisSukuBunga");

                    b.HasIndex("KategoriDebitur");

                    b.HasIndex("KategoriPengukuran");

                    b.HasIndex("KategoriPortofolio");

                    b.HasIndex("KategoriPortofolioLBU");

                    b.HasIndex("KeterkaitanBMPK");

                    b.HasIndex("KodePeminjam");

                    b.HasIndex("LembagaPemeringkat");

                    b.HasIndex("OrientasiPengguna");

                    b.HasIndex("OrientasiPenggunaLBU");

                    b.HasIndex("OrientasiPenggunaSID");

                    b.HasIndex("PenerbitAgunan");

                    b.HasIndex("PeringkatPenerbitAgunan");

                    b.HasIndex("PeringkatPerusahaan");

                    b.HasIndex("SektorEkonomi");

                    b.HasIndex("SektorEkonomiLBU");

                    b.HasIndex("SektorEkonomiSID");

                    b.HasIndex("SifatAgunanLBU");

                    b.HasIndex("SifatKredit");

                    b.HasIndex("SifatKreditLBU");

                    b.HasIndex("SifatKreditSID");

                    b.HasIndex("StatusDebitur");

                    b.HasIndex("SubSektorEkonomiLBU");

                    b.HasIndex("SubSubSektorEkonomiLBU");

                    b.HasIndex("SumberDana");

                    b.HasIndex("TipePlafond");

                    b.ToTable("LoanApplicationSandiBIs");
                });

            modelBuilder.Entity("NewLMS.UMKM.Data.Entities.LoanApplicationStageLog", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("Aging")
                        .HasColumnType("nvarchar(max)");

                    b.Property<Guid>("CreatedBy")
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTime>("CreatedDate")
                        .HasColumnType("datetime2");

                    b.Property<Guid?>("DeletedBy")
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTime?>("DeletedDate")
                        .HasColumnType("datetime2");

                    b.Property<Guid?>("DispatchedTo")
                        .HasColumnType("uniqueidentifier");

                    b.Property<Guid?>("ExecutedBy")
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTime?>("ExecutedDate")
                        .HasColumnType("datetime2");

                    b.Property<bool>("IsDeleted")
                        .HasColumnType("bit");

                    b.Property<Guid>("LoanApplicationId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<Guid?>("ModifiedBy")
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTime?>("ModifiedDate")
                        .HasColumnType("datetime2");

                    b.Property<Guid?>("StageId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<Guid?>("TargetStage")
                        .HasColumnType("uniqueidentifier");

                    b.HasKey("Id");

                    b.HasIndex("LoanApplicationId");

                    b.HasIndex("StageId");

                    b.HasIndex("TargetStage");

                    b.ToTable("LoanApplicationStageLogs");
                });

            modelBuilder.Entity("NewLMS.UMKM.Data.Entities.LoanApplicationSubProgram", b =>
                {
                    b.Property<Guid>("LoanApplicationSubProgramId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<Guid>("CreatedBy")
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTime>("CreatedDate")
                        .HasColumnType("datetime2");

                    b.Property<Guid?>("DeletedBy")
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTime?>("DeletedDate")
                        .HasColumnType("datetime2");

                    b.Property<bool>("IsDeleted")
                        .HasColumnType("bit");

                    b.Property<Guid>("LoanApplicationId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<Guid?>("ModifiedBy")
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTime?>("ModifiedDate")
                        .HasColumnType("datetime2");

                    b.Property<string>("SubProgramId")
                        .HasColumnType("nvarchar(15)");

                    b.HasKey("LoanApplicationSubProgramId");

                    b.HasIndex("LoanApplicationId");

                    b.HasIndex("SubProgramId");

                    b.ToTable("LoanApplicationSubProgram");
                });

            modelBuilder.Entity("NewLMS.UMKM.Data.Entities.LoanApplicationTermCredit", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<bool?>("ComplianceStaAdmin")
                        .HasColumnType("bit");

                    b.Property<bool?>("ComplianceStaBusinessLegal")
                        .HasColumnType("bit");

                    b.Property<bool?>("ComplianceStaNo")
                        .HasColumnType("bit");

                    b.Property<Guid>("CreatedBy")
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTime>("CreatedDate")
                        .HasColumnType("datetime2");

                    b.Property<Guid?>("DeletedBy")
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTime?>("DeletedDate")
                        .HasColumnType("datetime2");

                    b.Property<bool>("IsDeleted")
                        .HasColumnType("bit");

                    b.Property<Guid>("LoanApplicationId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<Guid?>("ModifiedBy")
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTime?>("ModifiedDate")
                        .HasColumnType("datetime2");

                    b.Property<string>("RemarkAdmin")
                        .HasMaxLength(450)
                        .HasColumnType("nvarchar(450)");

                    b.Property<string>("RemarkBusinessLegal")
                        .HasMaxLength(450)
                        .HasColumnType("nvarchar(450)");

                    b.Property<Guid>("RfTermTemplateId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<bool?>("TermAnswer")
                        .HasColumnType("bit");

                    b.Property<string>("UserId")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.HasIndex("LoanApplicationId");

                    b.HasIndex("RfTermTemplateId");

                    b.ToTable("LoanApplicationTermCredits");
                });

            modelBuilder.Entity("NewLMS.UMKM.Data.Entities.LoginAudit", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("Latitude")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<DateTime>("LoginTime")
                        .HasColumnType("datetime2");

                    b.Property<string>("Longitude")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<string>("Provider")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("RemoteIP")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<string>("Status")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("UserName")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.ToTable("LoginAudits");
                });

            modelBuilder.Entity("NewLMS.UMKM.Data.Entities.LogSendCallbackThirdParty", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<Guid>("CreatedBy")
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTime>("CreatedDate")
                        .HasColumnType("datetime2");

                    b.Property<Guid?>("DeletedBy")
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTime?>("DeletedDate")
                        .HasColumnType("datetime2");

                    b.Property<bool>("IsDeleted")
                        .HasColumnType("bit");

                    b.Property<Guid?>("ModifiedBy")
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTime?>("ModifiedDate")
                        .HasColumnType("datetime2");

                    b.Property<string>("Request")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Response")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("ThridPartyName")
                        .HasColumnType("nvarchar(128)");

                    b.HasKey("Id");

                    b.HasIndex("ThridPartyName");

                    b.ToTable("LogSendCallbackThirdParty");
                });

            modelBuilder.Entity("NewLMS.UMKM.Data.Entities.MakerChecker", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("ApprovalBy")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime?>("ApprovedDate")
                        .HasColumnType("datetime2");

                    b.Property<string>("CheckerBy")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime?>("CheckerDate")
                        .HasColumnType("datetime2");

                    b.Property<Guid>("CreatedBy")
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTime>("CreatedDate")
                        .HasColumnType("datetime2");

                    b.Property<Guid?>("DeletedBy")
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTime?>("DeletedDate")
                        .HasColumnType("datetime2");

                    b.Property<bool>("IsDeleted")
                        .HasColumnType("bit");

                    b.Property<string>("Key")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("MakerBy")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime?>("MakerDate")
                        .HasColumnType("datetime2");

                    b.Property<Guid?>("ModifiedBy")
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTime?>("ModifiedDate")
                        .HasColumnType("datetime2");

                    b.Property<string>("RequestStatus")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("RequestType")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Stage")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("TableField")
                        .HasColumnType("text");

                    b.Property<string>("TableName")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.ToTable("MakerCheckers");
                });

            modelBuilder.Entity("NewLMS.UMKM.Data.Entities.mDecision", b =>
                {
                    b.Property<string>("TypeId")
                        .HasColumnType("nvarchar(450)");

                    b.Property<string>("DecisionId")
                        .HasColumnType("nvarchar(450)");

                    b.Property<bool?>("Active")
                        .HasColumnType("bit");

                    b.Property<string>("ApprovalBy")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime?>("ApprovalDate")
                        .HasColumnType("datetime2");

                    b.Property<string>("CREATEBY")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime?>("CREATEDATE")
                        .HasColumnType("datetime2");

                    b.Property<string>("CheckerBy")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime?>("CheckerDate")
                        .HasColumnType("datetime2");

                    b.Property<string>("DELETEBY")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime?>("DELETEDATE")
                        .HasColumnType("datetime2");

                    b.Property<string>("DecisionDesc")
                        .HasColumnType("nvarchar(max)");

                    b.Property<bool?>("ISDELETE")
                        .HasColumnType("bit");

                    b.Property<bool?>("IsApproval")
                        .HasColumnType("bit");

                    b.Property<bool?>("IsChecker")
                        .HasColumnType("bit");

                    b.Property<bool?>("IsDecision")
                        .HasColumnType("bit");

                    b.Property<bool?>("IsParameter")
                        .HasColumnType("bit");

                    b.Property<bool?>("IsResult")
                        .HasColumnType("bit");

                    b.Property<int?>("Priority")
                        .HasColumnType("int");

                    b.Property<string>("RequestId")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("RequestStatus")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("StatusApproval")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("StatusChecker")
                        .HasColumnType("nvarchar(max)");

                    b.Property<bool?>("TEMP_Active")
                        .HasColumnType("bit");

                    b.Property<string>("TEMP_DecisionDesc")
                        .HasColumnType("nvarchar(max)");

                    b.Property<bool?>("TEMP_Weight")
                        .HasColumnType("bit");

                    b.Property<string>("UPDATEBY")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime?>("UPDATEDATE")
                        .HasColumnType("datetime2");

                    b.Property<bool?>("Weight")
                        .HasColumnType("bit");

                    b.HasKey("TypeId", "DecisionId");

                    b.ToTable("mDecision");
                });

            modelBuilder.Entity("NewLMS.UMKM.Data.Entities.mDecisionCard", b =>
                {
                    b.Property<string>("CardId")
                        .HasColumnType("nvarchar(450)");

                    b.Property<string>("TypeId")
                        .HasColumnType("nvarchar(450)");

                    b.Property<bool?>("Active")
                        .HasColumnType("bit");

                    b.Property<string>("ApprovalBy")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime?>("ApprovalDate")
                        .HasColumnType("datetime2");

                    b.Property<string>("CREATEBY")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime?>("CREATEDATE")
                        .HasColumnType("datetime2");

                    b.Property<string>("CardDesc")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("CheckerBy")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime?>("CheckerDate")
                        .HasColumnType("datetime2");

                    b.Property<string>("DELETEBY")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime?>("DELETEDATE")
                        .HasColumnType("datetime2");

                    b.Property<string>("DecisionId")
                        .HasColumnType("nvarchar(max)");

                    b.Property<bool?>("ISDELETE")
                        .HasColumnType("bit");

                    b.Property<bool?>("IsApproval")
                        .HasColumnType("bit");

                    b.Property<bool?>("IsCard")
                        .HasColumnType("bit");

                    b.Property<bool?>("IsChecker")
                        .HasColumnType("bit");

                    b.Property<bool?>("IsCondition")
                        .HasColumnType("bit");

                    b.Property<string>("ItemId")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int?>("Priority")
                        .HasColumnType("int");

                    b.Property<string>("RequestId")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("RequestStatus")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Result1")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Result2")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Result3")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Result4")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Result5")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Result6")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Result7")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Result8")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Result9")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("StatusApproval")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("StatusChecker")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("System1")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("System2")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("System3")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("System4")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("System5")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("System6")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("System7")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("System8")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("System9")
                        .HasColumnType("nvarchar(max)");

                    b.Property<bool?>("TEMP_Active")
                        .HasColumnType("bit");

                    b.Property<string>("TEMP_CardDesc")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int?>("TEMP_Priority")
                        .HasColumnType("int");

                    b.Property<string>("TEMP_Result1")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("TEMP_Segment")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("UPDATEBY")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime?>("UPDATEDATE")
                        .HasColumnType("datetime2");

                    b.HasKey("CardId", "TypeId");

                    b.ToTable("mDecisionCard");
                });

            modelBuilder.Entity("NewLMS.UMKM.Data.Entities.mDecisionCardCondition", b =>
                {
                    b.Property<string>("ItemId")
                        .HasColumnType("nvarchar(450)");

                    b.Property<string>("TypeId")
                        .HasColumnType("nvarchar(450)");

                    b.Property<string>("CardId")
                        .HasColumnType("nvarchar(450)");

                    b.Property<string>("DecisionId")
                        .HasColumnType("nvarchar(450)");

                    b.Property<int?>("ConditionId")
                        .HasColumnType("int");

                    b.Property<bool?>("Active")
                        .HasColumnType("bit");

                    b.Property<string>("Condition")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Extend")
                        .HasColumnType("nvarchar(max)");

                    b.Property<bool?>("IsTemp")
                        .HasColumnType("bit");

                    b.Property<string>("RequestId")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("RequestStatus")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("SystemId")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int?>("TEMP_ConditionId")
                        .HasColumnType("int");

                    b.HasKey("ItemId", "TypeId", "CardId", "DecisionId", "ConditionId");

                    b.ToTable("mDecisionCardCondition");
                });

            modelBuilder.Entity("NewLMS.UMKM.Data.Entities.mDecisionCardSegment", b =>
                {
                    b.Property<string>("TypeId")
                        .HasColumnType("nvarchar(450)");

                    b.Property<string>("DecisionId")
                        .HasColumnType("nvarchar(450)");

                    b.Property<string>("ItemId")
                        .HasColumnType("nvarchar(450)");

                    b.Property<string>("CardId")
                        .HasColumnType("nvarchar(450)");

                    b.Property<string>("SegmentId")
                        .HasColumnType("nvarchar(450)");

                    b.HasKey("TypeId", "DecisionId", "ItemId", "CardId", "SegmentId");

                    b.ToTable("mDecisionCardSegment");
                });

            modelBuilder.Entity("NewLMS.UMKM.Data.Entities.mDecisionCategory", b =>
                {
                    b.Property<string>("TypeId")
                        .HasColumnType("nvarchar(450)");

                    b.Property<string>("CategoryId")
                        .HasColumnType("nvarchar(450)");

                    b.Property<bool?>("Active")
                        .HasColumnType("bit");

                    b.Property<string>("ApprovalBy")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime?>("ApprovalDate")
                        .HasColumnType("datetime2");

                    b.Property<string>("CREATEBY")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime?>("CREATEDATE")
                        .HasColumnType("datetime2");

                    b.Property<string>("CategoryDesc")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("CheckerBy")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime?>("CheckerDate")
                        .HasColumnType("datetime2");

                    b.Property<string>("DELETEBY")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime?>("DELETEDATE")
                        .HasColumnType("datetime2");

                    b.Property<string>("DecisionId")
                        .HasColumnType("nvarchar(max)");

                    b.Property<bool?>("ISDELETE")
                        .HasColumnType("bit");

                    b.Property<bool?>("IsApproval")
                        .HasColumnType("bit");

                    b.Property<bool?>("IsChecker")
                        .HasColumnType("bit");

                    b.Property<string>("Parent")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int?>("Priority")
                        .HasColumnType("int");

                    b.Property<string>("RequestStatus")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("StatusApproval")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("StatusChecker")
                        .HasColumnType("nvarchar(max)");

                    b.Property<bool?>("TEMP_Active")
                        .HasColumnType("bit");

                    b.Property<string>("TEMP_CategoryDesc")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("TEMP_Parent")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int?>("TEMP_Priority")
                        .HasColumnType("int");

                    b.Property<string>("UPDATEBY")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime?>("UPDATEDATE")
                        .HasColumnType("datetime2");

                    b.Property<double?>("Weight")
                        .HasColumnType("float");

                    b.HasKey("TypeId", "CategoryId");

                    b.ToTable("mDecisionCategory");
                });

            modelBuilder.Entity("NewLMS.UMKM.Data.Entities.mDecisionItem", b =>
                {
                    b.Property<string>("TypeId")
                        .HasColumnType("nvarchar(450)");

                    b.Property<string>("DecisionId")
                        .HasColumnType("nvarchar(450)");

                    b.Property<string>("ItemId")
                        .HasColumnType("nvarchar(450)");

                    b.Property<string>("ItemSystem")
                        .HasColumnType("nvarchar(450)");

                    b.Property<bool?>("Active")
                        .HasColumnType("bit");

                    b.Property<string>("ApprovalBy")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime?>("ApprovalDate")
                        .HasColumnType("datetime2");

                    b.Property<string>("CREATEBY")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime?>("CREATEDATE")
                        .HasColumnType("datetime2");

                    b.Property<string>("CheckerBy")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime?>("CheckerDate")
                        .HasColumnType("datetime2");

                    b.Property<string>("DELETEBY")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime?>("DELETEDATE")
                        .HasColumnType("datetime2");

                    b.Property<bool?>("ISDELETE")
                        .HasColumnType("bit");

                    b.Property<bool?>("IsApproval")
                        .HasColumnType("bit");

                    b.Property<bool?>("IsChecker")
                        .HasColumnType("bit");

                    b.Property<string>("ItemDesc")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("ItemValue")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Parent")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int?>("Priority")
                        .HasColumnType("int");

                    b.Property<string>("RequestStatus")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("StatusApproval")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("StatusChecker")
                        .HasColumnType("nvarchar(max)");

                    b.Property<bool?>("TEMP_Active")
                        .HasColumnType("bit");

                    b.Property<string>("TEMP_ItemDesc")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("TEMP_ItemSystem")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("TEMP_ItemValue")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("TEMP_Parent")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int?>("TEMP_Priority")
                        .HasColumnType("int");

                    b.Property<string>("UPDATEBY")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime?>("UPDATEDATE")
                        .HasColumnType("datetime2");

                    b.Property<double?>("Weight")
                        .HasColumnType("float");

                    b.HasKey("TypeId", "DecisionId", "ItemId", "ItemSystem");

                    b.ToTable("mDecisionItem");
                });

            modelBuilder.Entity("NewLMS.UMKM.Data.Entities.mDecisionLog", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("ActionBy")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime>("ActionDate")
                        .HasColumnType("datetime2");

                    b.Property<string>("ActionStatus")
                        .HasColumnType("nvarchar(max)");

                    b.Property<Guid>("CreatedBy")
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTime>("CreatedDate")
                        .HasColumnType("datetime2");

                    b.Property<string>("DecisionId")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("DecisionType")
                        .HasColumnType("nvarchar(max)");

                    b.Property<Guid?>("DeletedBy")
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTime?>("DeletedDate")
                        .HasColumnType("datetime2");

                    b.Property<string>("DescisionDesc")
                        .HasColumnType("nvarchar(max)");

                    b.Property<bool>("IsDeleted")
                        .HasColumnType("bit");

                    b.Property<Guid?>("ModifiedBy")
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTime?>("ModifiedDate")
                        .HasColumnType("datetime2");

                    b.Property<string>("RequestStatus")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Stage")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("TypeDesc")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("TypeId")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.ToTable("mDecisionLogs");
                });

            modelBuilder.Entity("NewLMS.UMKM.Data.Entities.mDecisionParameter", b =>
                {
                    b.Property<string>("TypeId")
                        .HasColumnType("nvarchar(450)");

                    b.Property<string>("DecisionId")
                        .HasColumnType("nvarchar(450)");

                    b.Property<bool?>("Active")
                        .HasColumnType("bit");

                    b.Property<string>("Parameter")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("RequestId")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("RequestStatus")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("SystemId")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("TEMP_Parameter")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("TypeId", "DecisionId");

                    b.ToTable("mDecisionParameter");
                });

            modelBuilder.Entity("NewLMS.UMKM.Data.Entities.mDecisionResult", b =>
                {
                    b.Property<int>("ResultId")
                        .HasColumnType("int");

                    b.Property<string>("DecisionId")
                        .HasColumnType("nvarchar(450)");

                    b.Property<bool?>("Active")
                        .HasColumnType("bit");

                    b.Property<string>("GenId")
                        .HasColumnType("nvarchar(max)");

                    b.Property<bool?>("IsTemp")
                        .HasColumnType("bit");

                    b.Property<string>("RequestId")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("RequestStatus")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("ResultDesc")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int?>("TEMP_ResultId")
                        .HasColumnType("int");

                    b.Property<string>("TypeId")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("ResultId", "DecisionId");

                    b.ToTable("mDecisionResult");
                });

            modelBuilder.Entity("NewLMS.UMKM.Data.Entities.mDecisionSegment", b =>
                {
                    b.Property<string>("TypeId")
                        .HasColumnType("nvarchar(450)");

                    b.Property<string>("DecisionId")
                        .HasColumnType("nvarchar(450)");

                    b.Property<string>("SegmentId")
                        .HasColumnType("nvarchar(450)");

                    b.Property<bool?>("Active")
                        .HasColumnType("bit");

                    b.Property<string>("ApprovalBy")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime?>("ApprovalDate")
                        .HasColumnType("datetime2");

                    b.Property<string>("CREATEBY")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime?>("CREATEDATE")
                        .HasColumnType("datetime2");

                    b.Property<string>("CheckerBy")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime?>("CheckerDate")
                        .HasColumnType("datetime2");

                    b.Property<string>("Condition")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("DELETEBY")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime?>("DELETEDATE")
                        .HasColumnType("datetime2");

                    b.Property<bool?>("ISDELETE")
                        .HasColumnType("bit");

                    b.Property<bool?>("IsApproval")
                        .HasColumnType("bit");

                    b.Property<bool?>("IsChecker")
                        .HasColumnType("bit");

                    b.Property<bool?>("IsCondition")
                        .HasColumnType("bit");

                    b.Property<bool?>("IsSegment")
                        .HasColumnType("bit");

                    b.Property<int?>("Priority")
                        .HasColumnType("int");

                    b.Property<string>("RequestId")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("RequestStatus")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("SegmentDesc")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("StatusApproval")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("StatusChecker")
                        .HasColumnType("nvarchar(max)");

                    b.Property<bool?>("TEMP_Active")
                        .HasColumnType("bit");

                    b.Property<string>("TEMP_SegmentDesc")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("UPDATEBY")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime?>("UPDATEDATE")
                        .HasColumnType("datetime2");

                    b.HasKey("TypeId", "DecisionId", "SegmentId");

                    b.ToTable("mDecisionSegment");
                });

            modelBuilder.Entity("NewLMS.UMKM.Data.Entities.mDecisionSegmentCondition", b =>
                {
                    b.Property<string>("DecisionId")
                        .HasColumnType("nvarchar(450)");

                    b.Property<string>("SegmentId")
                        .HasColumnType("nvarchar(450)");

                    b.Property<string>("ConditionId")
                        .HasColumnType("nvarchar(450)");

                    b.Property<bool?>("Active")
                        .HasColumnType("bit");

                    b.Property<string>("Condition")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Extend")
                        .HasColumnType("nvarchar(max)");

                    b.Property<bool?>("IsTemp")
                        .HasColumnType("bit");

                    b.Property<string>("RequestId")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("RequestStatus")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("SystemId")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("TEMP_ConditionId")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("TypeId")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("DecisionId", "SegmentId", "ConditionId");

                    b.ToTable("mDecisionSegmentCondition");
                });

            modelBuilder.Entity("NewLMS.UMKM.Data.Entities.MSearch", b =>
                {
                    b.Property<string>("TypeId")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<string>("SearchType")
                        .HasMaxLength(20)
                        .HasColumnType("nvarchar(20)");

                    b.Property<string>("SearchId")
                        .HasMaxLength(20)
                        .HasColumnType("nvarchar(20)");

                    b.Property<Guid>("CreatedBy")
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTime>("CreatedDate")
                        .HasColumnType("datetime2");

                    b.Property<Guid?>("DeletedBy")
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTime?>("DeletedDate")
                        .HasColumnType("datetime2");

                    b.Property<bool>("IsDeleted")
                        .HasColumnType("bit");

                    b.Property<Guid?>("ModifiedBy")
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTime?>("ModifiedDate")
                        .HasColumnType("datetime2");

                    b.Property<string>("ResultType")
                        .HasMaxLength(5)
                        .HasColumnType("nvarchar(5)");

                    b.Property<string>("SearchDesc")
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.HasKey("TypeId", "SearchType", "SearchId");

                    b.ToTable("MSearches");
                });

            modelBuilder.Entity("NewLMS.UMKM.Data.Entities.NLog", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("Callsite")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Exception")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Level")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime>("Logged")
                        .HasColumnType("datetime2");

                    b.Property<string>("Logger")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("MachineName")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Message")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Properties")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Source")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.HasKey("Id");

                    b.ToTable("NLog");
                });

            modelBuilder.Entity("NewLMS.UMKM.Data.Entities.OfferingLetter", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<bool?>("AcceptedDebtor")
                        .HasColumnType("bit");

                    b.Property<string>("AccountOfficerCode")
                        .HasColumnType("nvarchar(max)");

                    b.Property<Guid>("CreatedBy")
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTime>("CreatedDate")
                        .HasColumnType("datetime2");

                    b.Property<Guid?>("DeletedBy")
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTime?>("DeletedDate")
                        .HasColumnType("datetime2");

                    b.Property<bool>("IsDeleted")
                        .HasColumnType("bit");

                    b.Property<Guid?>("LoanApplicationId")
                        .IsRequired()
                        .HasColumnType("uniqueidentifier");

                    b.Property<Guid?>("ModifiedBy")
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTime?>("ModifiedDate")
                        .HasColumnType("datetime2");

                    b.Property<string>("OLNumber")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime>("OlDate")
                        .HasColumnType("datetime2");

                    b.Property<string>("Remarks")
                        .HasColumnType("text");

                    b.HasKey("Id");

                    b.HasIndex("LoanApplicationId")
                        .IsUnique();

                    b.ToTable("OfferingLetters");
                });

            modelBuilder.Entity("NewLMS.UMKM.Data.Entities.OtherTerm", b =>
                {
                    b.Property<Guid>("OtherTermId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<bool?>("Answer")
                        .HasColumnType("bit");

                    b.Property<Guid>("CreatedBy")
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTime>("CreatedDate")
                        .HasColumnType("datetime2");

                    b.Property<string>("Decision")
                        .HasColumnType("nvarchar(max)");

                    b.Property<Guid?>("DeletedBy")
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTime?>("DeletedDate")
                        .HasColumnType("datetime2");

                    b.Property<string>("Description")
                        .HasColumnType("nvarchar(max)");

                    b.Property<bool>("IsDeleted")
                        .HasColumnType("bit");

                    b.Property<Guid>("LoanApplicationId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<Guid?>("ModifiedBy")
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTime?>("ModifiedDate")
                        .HasColumnType("datetime2");

                    b.Property<string>("Remarks")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("OtherTermId");

                    b.HasIndex("LoanApplicationId");

                    b.ToTable("OtherTerms");
                });

            modelBuilder.Entity("NewLMS.UMKM.Data.Entities.Page", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<Guid>("CreatedBy")
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTime>("CreatedDate")
                        .HasColumnType("datetime2");

                    b.Property<Guid?>("DeletedBy")
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTime?>("DeletedDate")
                        .HasColumnType("datetime2");

                    b.Property<bool>("IsDeleted")
                        .HasColumnType("bit");

                    b.Property<Guid?>("ModifiedBy")
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTime?>("ModifiedDate")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("datetime2")
                        .HasDefaultValueSql("getdate()");

                    b.Property<string>("Name")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Url")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.HasIndex("CreatedBy");

                    b.HasIndex("DeletedBy");

                    b.HasIndex("ModifiedBy");

                    b.ToTable("Pages");
                });

            modelBuilder.Entity("NewLMS.UMKM.Data.Entities.PageAction", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<Guid>("ActionId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<Guid>("CreatedBy")
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTime>("CreatedDate")
                        .HasColumnType("datetime2");

                    b.Property<Guid?>("DeletedBy")
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTime?>("DeletedDate")
                        .HasColumnType("datetime2");

                    b.Property<bool>("IsDeleted")
                        .HasColumnType("bit");

                    b.Property<Guid?>("ModifiedBy")
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTime?>("ModifiedDate")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("datetime2")
                        .HasDefaultValueSql("getdate()");

                    b.Property<Guid>("PageId")
                        .HasColumnType("uniqueidentifier");

                    b.HasKey("Id");

                    b.HasIndex("ActionId");

                    b.HasIndex("CreatedBy");

                    b.HasIndex("DeletedBy");

                    b.HasIndex("ModifiedBy");

                    b.HasIndex("PageId");

                    b.ToTable("PageActions");
                });

            modelBuilder.Entity("NewLMS.UMKM.Data.Entities.PreviousPledge", b =>
                {
                    b.Property<Guid>("PreviousPledgeId")
                        .ValueGeneratedOnAdd()
                        .HasMaxLength(16)
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("CollateralForm")
                        .HasColumnType("nvarchar(5)");

                    b.Property<string>("CollateralType")
                        .HasColumnType("nvarchar(10)");

                    b.Property<Guid>("CreatedBy")
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTime>("CreatedDate")
                        .HasColumnType("datetime2");

                    b.Property<Guid?>("DeletedBy")
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTime?>("DeletedDate")
                        .HasColumnType("datetime2");

                    b.Property<int>("DocumentNumber")
                        .HasColumnType("int");

                    b.Property<string>("DocumentType")
                        .HasColumnType("nvarchar(10)");

                    b.Property<long>("ExternalAprasialValue")
                        .HasColumnType("bigint");

                    b.Property<long>("InternalAprasialValue")
                        .HasColumnType("bigint");

                    b.Property<bool>("IsDeleted")
                        .HasColumnType("bit");

                    b.Property<Guid>("LoanApplicationId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<Guid?>("ModifiedBy")
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTime?>("ModifiedDate")
                        .HasColumnType("datetime2");

                    b.Property<string>("Notaryname")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("OwnerName")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime>("PledgeDate")
                        .HasColumnType("datetime2");

                    b.Property<string>("PledgeType")
                        .HasColumnType("nvarchar(10)");

                    b.Property<long>("PledgeValue")
                        .HasColumnType("bigint");

                    b.Property<string>("RelationWithDebtor")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("PreviousPledgeId");

                    b.HasIndex("CollateralForm");

                    b.HasIndex("CollateralType");

                    b.HasIndex("DocumentType");

                    b.HasIndex("LoanApplicationId");

                    b.HasIndex("PledgeType");

                    b.ToTable("PreviousPledges");
                });

            modelBuilder.Entity("NewLMS.UMKM.Data.Entities.Prospect", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("AccountOfficer")
                        .HasMaxLength(20)
                        .HasColumnType("nvarchar(20)");

                    b.Property<string>("Address")
                        .HasMaxLength(450)
                        .HasColumnType("nvarchar(450)");

                    b.Property<string>("BookingBranch")
                        .HasMaxLength(4)
                        .HasColumnType("nvarchar(4)");

                    b.Property<string>("BranchId")
                        .HasMaxLength(4)
                        .HasColumnType("nvarchar(4)");

                    b.Property<string>("City")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<string>("CompanyId")
                        .HasColumnType("nvarchar(450)");

                    b.Property<Guid>("CreatedBy")
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTime>("CreatedDate")
                        .HasColumnType("datetime2");

                    b.Property<DateTime>("DateOfBirth")
                        .HasColumnType("datetime2");

                    b.Property<string>("DealRef")
                        .HasMaxLength(13)
                        .HasColumnType("nvarchar(13)");

                    b.Property<Guid?>("DeletedBy")
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTime?>("DeletedDate")
                        .HasColumnType("datetime2");

                    b.Property<string>("District")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<DateTime?>("EstimateProcessDate")
                        .HasColumnType("datetime2");

                    b.Property<string>("Fullname")
                        .HasMaxLength(80)
                        .HasColumnType("nvarchar(80)");

                    b.Property<int>("Gender")
                        .HasColumnType("int");

                    b.Property<bool>("IsDeleted")
                        .HasColumnType("bit");

                    b.Property<Guid?>("ModifiedBy")
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTime?>("ModifiedDate")
                        .HasColumnType("datetime2");

                    b.Property<string>("MotherName")
                        .HasMaxLength(80)
                        .HasColumnType("nvarchar(80)");

                    b.Property<string>("Neighborhoods")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<string>("NoHandphone")
                        .HasMaxLength(16)
                        .HasColumnType("nvarchar(16)");

                    b.Property<string>("NoIdentity")
                        .HasMaxLength(16)
                        .HasColumnType("nvarchar(16)");

                    b.Property<string>("PlaceOfBirth")
                        .HasColumnType("nvarchar(max)");

                    b.Property<byte>("ProcessStatus")
                        .HasMaxLength(4)
                        .HasColumnType("tinyint");

                    b.Property<string>("ProspectId")
                        .IsRequired()
                        .HasMaxLength(20)
                        .HasColumnType("nvarchar(20)");

                    b.Property<string>("Province")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<string>("Remarks")
                        .HasColumnType("text");

                    b.Property<string>("RfSectorLBU3Code")
                        .HasColumnType("nvarchar(450)");

                    b.Property<string>("Rt")
                        .HasMaxLength(3)
                        .HasColumnType("nvarchar(3)");

                    b.Property<string>("Rw")
                        .HasMaxLength(4)
                        .HasColumnType("nvarchar(4)");

                    b.Property<string>("SourceApplication")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<string>("SubProductId")
                        .HasColumnType("nvarchar(450)");

                    b.Property<string>("SubmissionType")
                        .HasMaxLength(20)
                        .HasColumnType("nvarchar(20)");

                    b.Property<double?>("TargetPladfond")
                        .HasColumnType("float");

                    b.Property<string>("ZipCode")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.HasIndex("BookingBranch");

                    b.HasIndex("BranchId");

                    b.HasIndex("CompanyId");

                    b.HasIndex("NoIdentity");

                    b.HasIndex("RfSectorLBU3Code");

                    b.HasIndex("SubProductId");

                    b.ToTable("Prospects");
                });

            modelBuilder.Entity("NewLMS.UMKM.Data.Entities.ReceivedFacility", b =>
                {
                    b.Property<Guid>("FacilityId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<float>("AdministrationFee")
                        .HasColumnType("real");

                    b.Property<int>("ApprovedFacilityTotal")
                        .HasColumnType("int");

                    b.Property<Guid>("CreatedBy")
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTime>("CreatedDate")
                        .HasColumnType("datetime2");

                    b.Property<float>("CreditInterest")
                        .HasColumnType("real");

                    b.Property<string>("DealType")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("DebtorId")
                        .HasMaxLength(16)
                        .HasColumnType("nvarchar(16)");

                    b.Property<Guid?>("DeletedBy")
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTime?>("DeletedDate")
                        .HasColumnType("datetime2");

                    b.Property<float>("FloatingRate")
                        .HasColumnType("real");

                    b.Property<int>("InstallmentFee")
                        .HasColumnType("int");

                    b.Property<int>("InsuranceFee")
                        .HasColumnType("int");

                    b.Property<bool>("IsDeleted")
                        .HasColumnType("bit");

                    b.Property<string>("LoanStatus")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime>("MaturityDate")
                        .HasColumnType("datetime2");

                    b.Property<Guid?>("ModifiedBy")
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTime?>("ModifiedDate")
                        .HasColumnType("datetime2");

                    b.Property<int>("NotaryFee")
                        .HasColumnType("int");

                    b.Property<float>("OneMonthFloatingRate")
                        .HasColumnType("real");

                    b.Property<int>("Outstanding")
                        .HasColumnType("int");

                    b.Property<int>("Payment")
                        .HasColumnType("int");

                    b.Property<int>("Plafond")
                        .HasColumnType("int");

                    b.Property<int>("ProvisionFee")
                        .HasColumnType("int");

                    b.Property<int>("ReceivedFacilityTotal")
                        .HasColumnType("int");

                    b.Property<DateTime>("StartDate")
                        .HasColumnType("datetime2");

                    b.Property<int>("UnderlyingRemainder")
                        .HasColumnType("int");

                    b.HasKey("FacilityId");

                    b.HasIndex("DebtorId");

                    b.ToTable("ReceivedFacilities");
                });

            modelBuilder.Entity("NewLMS.UMKM.Data.Entities.RfBank", b =>
                {
                    b.Property<string>("BankId")
                        .HasMaxLength(5)
                        .HasColumnType("nvarchar(5)");

                    b.Property<bool>("Active")
                        .HasColumnType("bit");

                    b.Property<string>("BankName")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("CoreCode")
                        .HasMaxLength(10)
                        .HasColumnType("nvarchar(10)");

                    b.Property<Guid>("CreatedBy")
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTime>("CreatedDate")
                        .HasColumnType("datetime2");

                    b.Property<Guid?>("DeletedBy")
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTime?>("DeletedDate")
                        .HasColumnType("datetime2");

                    b.Property<bool>("IsDeleted")
                        .HasColumnType("bit");

                    b.Property<Guid?>("ModifiedBy")
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTime?>("ModifiedDate")
                        .HasColumnType("datetime2");

                    b.HasKey("BankId");

                    b.ToTable("RfBanks");
                });

            modelBuilder.Entity("NewLMS.UMKM.Data.Entities.RfBethanol", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"), 1L, 1);

                    b.Property<bool>("Active")
                        .HasColumnType("bit");

                    b.Property<string>("ApprovalBy")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<DateTime?>("ApprovalDate")
                        .HasColumnType("datetime2");

                    b.Property<string>("CheckerBy")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<DateTime?>("CheckerDate")
                        .HasColumnType("datetime2");

                    b.Property<Guid>("CreatedBy")
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTime>("CreatedDate")
                        .HasColumnType("datetime2");

                    b.Property<Guid?>("DeletedBy")
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTime?>("DeletedDate")
                        .HasColumnType("datetime2");

                    b.Property<string>("Description")
                        .HasColumnType("nvarchar(max)");

                    b.Property<bool>("IsApproval")
                        .HasColumnType("bit");

                    b.Property<bool>("IsChecker")
                        .HasColumnType("bit");

                    b.Property<bool>("IsDeleted")
                        .HasColumnType("bit");

                    b.Property<Guid?>("ModifiedBy")
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTime?>("ModifiedDate")
                        .HasColumnType("datetime2");

                    b.Property<string>("RequestBy")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<DateTime?>("RequestDate")
                        .HasColumnType("datetime2");

                    b.Property<string>("RequestStatus")
                        .HasMaxLength(10)
                        .HasColumnType("nvarchar(10)");

                    b.Property<string>("StatusApproval")
                        .HasMaxLength(10)
                        .HasColumnType("nvarchar(10)");

                    b.Property<string>("StatusChecker")
                        .HasMaxLength(10)
                        .HasColumnType("nvarchar(10)");

                    b.Property<string>("SubProductId")
                        .HasColumnType("nvarchar(450)");

                    b.Property<string>("SystemId")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int?>("TempId")
                        .HasColumnType("int");

                    b.Property<float>("Value")
                        .HasColumnType("real");

                    b.HasKey("Id");

                    b.HasIndex("SubProductId");

                    b.ToTable("RfBethanol");
                });

            modelBuilder.Entity("NewLMS.UMKM.Data.Entities.RfBranch", b =>
                {
                    b.Property<string>("Code")
                        .HasMaxLength(4)
                        .HasColumnType("nvarchar(4)");

                    b.Property<Guid>("CreatedBy")
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTime>("CreatedDate")
                        .HasColumnType("datetime2");

                    b.Property<string>("Dati")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<Guid?>("DeletedBy")
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTime?>("DeletedDate")
                        .HasColumnType("datetime2");

                    b.Property<string>("GroupBranch")
                        .HasMaxLength(4)
                        .HasColumnType("nvarchar(4)");

                    b.Property<bool>("IsDeleted")
                        .HasColumnType("bit");

                    b.Property<string>("Kanwil")
                        .HasMaxLength(4)
                        .HasColumnType("nvarchar(4)");

                    b.Property<string>("KanwilName")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<string>("KanwilOri")
                        .HasMaxLength(4)
                        .HasColumnType("nvarchar(4)");

                    b.Property<string>("Kc")
                        .HasMaxLength(4)
                        .HasColumnType("nvarchar(4)");

                    b.Property<string>("KcName")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<string>("Kcp")
                        .HasMaxLength(3)
                        .HasColumnType("nvarchar(3)");

                    b.Property<Guid?>("ModifiedBy")
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTime?>("ModifiedDate")
                        .HasColumnType("datetime2");

                    b.Property<string>("Name")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("OfficeType")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<string>("OriKanwilName")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<string>("Sandi")
                        .HasMaxLength(10)
                        .HasColumnType("nvarchar(10)");

                    b.HasKey("Code");

                    b.HasIndex("CreatedBy");

                    b.HasIndex("DeletedBy");

                    b.HasIndex("ModifiedBy");

                    b.ToTable("RfBranches");
                });

            modelBuilder.Entity("NewLMS.UMKM.Data.Entities.RfBranchDetail", b =>
                {
                    b.Property<string>("BranchId")
                        .HasMaxLength(4)
                        .HasColumnType("nvarchar(4)");

                    b.Property<bool?>("Active")
                        .HasColumnType("bit");

                    b.Property<string>("Address1")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Address2")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("BranchInitial")
                        .HasMaxLength(10)
                        .HasColumnType("nvarchar(10)");

                    b.Property<Guid>("CreatedBy")
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTime>("CreatedDate")
                        .HasColumnType("datetime2");

                    b.Property<string>("Dati_II")
                        .HasColumnType("nvarchar(max)");

                    b.Property<Guid?>("DeletedBy")
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTime?>("DeletedDate")
                        .HasColumnType("datetime2");

                    b.Property<string>("Email")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<string>("FaxArea")
                        .HasMaxLength(5)
                        .HasColumnType("nvarchar(5)");

                    b.Property<string>("FaxExt")
                        .HasMaxLength(5)
                        .HasColumnType("nvarchar(5)");

                    b.Property<string>("FaxNum")
                        .HasMaxLength(5)
                        .HasColumnType("nvarchar(5)");

                    b.Property<bool>("IsDeleted")
                        .HasColumnType("bit");

                    b.Property<string>("Kecamatan")
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.Property<string>("Kelurahan")
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.Property<string>("Kota")
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.Property<Guid?>("ModifiedBy")
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTime?>("ModifiedDate")
                        .HasColumnType("datetime2");

                    b.Property<string>("Phone1Area")
                        .HasMaxLength(5)
                        .HasColumnType("nvarchar(5)");

                    b.Property<string>("Phone1Ext")
                        .HasMaxLength(5)
                        .HasColumnType("nvarchar(5)");

                    b.Property<string>("Phone1Num")
                        .HasMaxLength(20)
                        .HasColumnType("nvarchar(20)");

                    b.Property<string>("Phone2Area")
                        .HasMaxLength(5)
                        .HasColumnType("nvarchar(5)");

                    b.Property<string>("Phone2Ext")
                        .HasMaxLength(5)
                        .HasColumnType("nvarchar(5)");

                    b.Property<string>("Phone2Num")
                        .HasMaxLength(20)
                        .HasColumnType("nvarchar(20)");

                    b.Property<string>("Provinsi")
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.Property<string>("RT")
                        .HasMaxLength(5)
                        .HasColumnType("nvarchar(5)");

                    b.Property<string>("RW")
                        .HasMaxLength(5)
                        .HasColumnType("nvarchar(5)");

                    b.Property<string>("ZipCode")
                        .HasMaxLength(10)
                        .HasColumnType("nvarchar(10)");

                    b.HasKey("BranchId");

                    b.ToTable("RfBranchDetails");
                });

            modelBuilder.Entity("NewLMS.UMKM.Data.Entities.RfBranchInsuranceCompany", b =>
                {
                    b.Property<string>("Code")
                        .HasMaxLength(4)
                        .HasColumnType("nvarchar(4)");

                    b.Property<string>("InsuranceCompanyId")
                        .HasMaxLength(20)
                        .HasColumnType("nvarchar(20)");

                    b.Property<Guid>("CreatedBy")
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTime>("CreatedDate")
                        .HasColumnType("datetime2");

                    b.Property<Guid?>("DeletedBy")
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTime?>("DeletedDate")
                        .HasColumnType("datetime2");

                    b.Property<bool>("IsDeleted")
                        .HasColumnType("bit");

                    b.Property<Guid?>("ModifiedBy")
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTime?>("ModifiedDate")
                        .HasColumnType("datetime2");

                    b.Property<string>("RfInsuranceRateTemplateCode")
                        .HasMaxLength(10)
                        .HasColumnType("nvarchar(10)");

                    b.HasKey("Code", "InsuranceCompanyId");

                    b.HasIndex("InsuranceCompanyId");

                    b.HasIndex("RfInsuranceRateTemplateCode");

                    b.ToTable("RfBranchInsuranceCompanies");
                });

            modelBuilder.Entity("NewLMS.UMKM.Data.Entities.RFBRANCHPROVISION", b =>
                {
                    b.Property<string>("PRODUCTID")
                        .HasColumnType("nvarchar(450)");

                    b.Property<string>("BRANCHID")
                        .HasColumnType("nvarchar(450)");

                    b.Property<bool?>("ACTIVE")
                        .HasColumnType("bit");

                    b.Property<string>("CREATEBY")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime?>("CREATEDATE")
                        .HasColumnType("datetime2");

                    b.Property<float?>("DEF_PROVPCTFEE")
                        .HasColumnType("real");

                    b.Property<DateTime?>("ENDDATE")
                        .HasColumnType("datetime2");

                    b.Property<float?>("MAX_PROVPCTFEE")
                        .HasColumnType("real");

                    b.Property<int?>("PROV_PRIO")
                        .HasColumnType("int");

                    b.Property<DateTime?>("STARTDATE")
                        .HasColumnType("datetime2");

                    b.Property<string>("UPDATEBY")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime?>("UPDATEDATE")
                        .HasColumnType("datetime2");

                    b.HasKey("PRODUCTID", "BRANCHID");

                    b.ToTable("RFBRANCHPROVISION");
                });

            modelBuilder.Entity("NewLMS.UMKM.Data.Entities.RfBranchRpc", b =>
                {
                    b.Property<string>("BranchId")
                        .HasMaxLength(20)
                        .HasColumnType("nvarchar(20)");

                    b.Property<string>("SubProductId")
                        .HasMaxLength(10)
                        .HasColumnType("nvarchar(10)");

                    b.Property<Guid>("CreatedBy")
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTime>("CreatedDate")
                        .HasColumnType("datetime2");

                    b.Property<Guid?>("DeletedBy")
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTime?>("DeletedDate")
                        .HasColumnType("datetime2");

                    b.Property<bool>("IsDeleted")
                        .HasColumnType("bit");

                    b.Property<Guid?>("ModifiedBy")
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTime?>("ModifiedDate")
                        .HasColumnType("datetime2");

                    b.Property<double>("Rpc")
                        .HasColumnType("float");

                    b.Property<double>("RpcGaji")
                        .HasColumnType("float");

                    b.Property<double>("RpcTunjangan")
                        .HasColumnType("float");

                    b.Property<bool>("UseKontigensi")
                        .HasColumnType("bit");

                    b.HasKey("BranchId", "SubProductId");

                    b.ToTable("RfBranchRpcs");
                });

            modelBuilder.Entity("NewLMS.UMKM.Data.Entities.RfCollateral", b =>
                {
                    b.Property<string>("CollateralCode")
                        .HasMaxLength(5)
                        .HasColumnType("nvarchar(5)");

                    b.Property<bool>("Active")
                        .HasColumnType("bit");

                    b.Property<int>("BeaGroup")
                        .HasColumnType("int");

                    b.Property<int>("Building")
                        .HasColumnType("int");

                    b.Property<Guid>("CreatedBy")
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTime>("CreatedDate")
                        .HasColumnType("datetime2");

                    b.Property<Guid?>("DeletedBy")
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTime?>("DeletedDate")
                        .HasColumnType("datetime2");

                    b.Property<string>("Description")
                        .HasColumnType("nvarchar(max)");

                    b.Property<bool>("IsDeleted")
                        .HasColumnType("bit");

                    b.Property<int>("Land")
                        .HasColumnType("int");

                    b.Property<Guid?>("ModifiedBy")
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTime?>("ModifiedDate")
                        .HasColumnType("datetime2");

                    b.Property<string>("Type")
                        .HasMaxLength(10)
                        .HasColumnType("nvarchar(10)");

                    b.HasKey("CollateralCode");

                    b.HasIndex("Type");

                    b.ToTable("RfCollateral");
                });

            modelBuilder.Entity("NewLMS.UMKM.Data.Entities.RfColTypePledge", b =>
                {
                    b.Property<string>("RfColTypePledgeId")
                        .HasMaxLength(10)
                        .HasColumnType("nvarchar(10)");

                    b.Property<bool>("Active")
                        .HasColumnType("bit");

                    b.Property<Guid>("CreatedBy")
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTime>("CreatedDate")
                        .HasColumnType("datetime2");

                    b.Property<Guid?>("DeletedBy")
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTime?>("DeletedDate")
                        .HasColumnType("datetime2");

                    b.Property<bool>("IsDeleted")
                        .HasColumnType("bit");

                    b.Property<Guid?>("ModifiedBy")
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTime?>("ModifiedDate")
                        .HasColumnType("datetime2");

                    b.Property<string>("PledgeTypeCode")
                        .HasMaxLength(10)
                        .HasColumnType("nvarchar(10)");

                    b.HasKey("RfColTypePledgeId");

                    b.HasIndex("PledgeTypeCode");

                    b.ToTable("RfColTypePledges");
                });

            modelBuilder.Entity("NewLMS.UMKM.Data.Entities.RfCompany", b =>
                {
                    b.Property<string>("CompId")
                        .HasColumnType("nvarchar(450)");

                    b.Property<bool>("Active")
                        .HasColumnType("bit");

                    b.Property<string>("Address")
                        .HasColumnType("nvarchar(max)");

                    b.Property<double>("Allowances")
                        .HasColumnType("float");

                    b.Property<Guid?>("ApprovedBy")
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTime?>("ApprovedDate")
                        .HasColumnType("datetime2");

                    b.Property<string>("BranchId")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("City")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("CompName")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("CoreCode")
                        .HasColumnType("nvarchar(max)");

                    b.Property<Guid>("CreatedBy")
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTime>("CreatedDate")
                        .HasColumnType("datetime2");

                    b.Property<Guid?>("DeletedBy")
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTime?>("DeletedDate")
                        .HasColumnType("datetime2");

                    b.Property<string>("District")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Email")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("EscrowNo")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("FaxArea")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("FaxNumber")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int?>("IsApproved")
                        .HasColumnType("int");

                    b.Property<bool?>("IsCheker")
                        .HasColumnType("bit");

                    b.Property<bool>("IsDeleted")
                        .HasColumnType("bit");

                    b.Property<double>("MaxLimit")
                        .HasColumnType("float");

                    b.Property<double>("MaxRpc")
                        .HasColumnType("float");

                    b.Property<int>("MaxTenor")
                        .HasColumnType("int");

                    b.Property<int>("MaximumYearBeforeRetirement")
                        .HasColumnType("int");

                    b.Property<Guid?>("ModifiedBy")
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTime?>("ModifiedDate")
                        .HasColumnType("datetime2");

                    b.Property<bool>("Mou")
                        .HasColumnType("bit");

                    b.Property<string>("Neighborhoods")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("PhoneArea")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("PhoneExt")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("PhoneNumber")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Province")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("RT")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("RW")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("RequestType")
                        .HasColumnType("nvarchar(max)");

                    b.Property<bool>("RpcPortion")
                        .HasColumnType("bit");

                    b.Property<double>("Salaray")
                        .HasColumnType("float");

                    b.Property<string>("StatusChecker")
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.Property<bool>("Temp_Active")
                        .HasColumnType("bit");

                    b.Property<string>("Temp_Address")
                        .HasColumnType("nvarchar(max)");

                    b.Property<double>("Temp_Allowances")
                        .HasColumnType("float");

                    b.Property<string>("Temp_BranchId")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Temp_City")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Temp_CompId")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Temp_CompName")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Temp_CoreCode")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Temp_District")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Temp_Email")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Temp_EscrowNo")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Temp_FaxArea")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Temp_FaxNumber")
                        .HasColumnType("nvarchar(max)");

                    b.Property<double>("Temp_MaxLimit")
                        .HasColumnType("float");

                    b.Property<double>("Temp_MaxRpc")
                        .HasColumnType("float");

                    b.Property<int>("Temp_MaxTenor")
                        .HasColumnType("int");

                    b.Property<int>("Temp_MaximumYearBeforeRetirement")
                        .HasColumnType("int");

                    b.Property<bool>("Temp_Mou")
                        .HasColumnType("bit");

                    b.Property<string>("Temp_Neighborhoods")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Temp_PhoneArea")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Temp_PhoneExt")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Temp_PhoneNumber")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Temp_Province")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Temp_RT")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Temp_RW")
                        .HasColumnType("nvarchar(max)");

                    b.Property<bool>("Temp_RpcPortion")
                        .HasColumnType("bit");

                    b.Property<double>("Temp_Salaray")
                        .HasColumnType("float");

                    b.Property<string>("Temp_ZIPCode")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("ZIPCode")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("CompId");

                    b.ToTable("RfCompanies");
                });

            modelBuilder.Entity("NewLMS.UMKM.Data.Entities.RfCondition", b =>
                {
                    b.Property<string>("ConditionCode")
                        .HasMaxLength(5)
                        .HasColumnType("nvarchar(5)");

                    b.Property<bool>("Active")
                        .HasColumnType("bit");

                    b.Property<string>("ConditionCategory")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("ConditionDesc")
                        .HasColumnType("nvarchar(max)");

                    b.Property<Guid>("CreatedBy")
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTime>("CreatedDate")
                        .HasColumnType("datetime2");

                    b.Property<Guid?>("DeletedBy")
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTime?>("DeletedDate")
                        .HasColumnType("datetime2");

                    b.Property<bool>("IsDeleted")
                        .HasColumnType("bit");

                    b.Property<Guid?>("ModifiedBy")
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTime?>("ModifiedDate")
                        .HasColumnType("datetime2");

                    b.HasKey("ConditionCode");

                    b.ToTable("RfConditions");
                });

            modelBuilder.Entity("NewLMS.UMKM.Data.Entities.RfCreditType", b =>
                {
                    b.Property<string>("Code")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<Guid>("CreatedBy")
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTime>("CreatedDate")
                        .HasColumnType("datetime2");

                    b.Property<bool>("CreditAgreement")
                        .HasColumnType("bit");

                    b.Property<Guid?>("DeletedBy")
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTime?>("DeletedDate")
                        .HasColumnType("datetime2");

                    b.Property<string>("Description")
                        .HasMaxLength(200)
                        .HasColumnType("nvarchar(200)");

                    b.Property<bool>("IsDeleted")
                        .HasColumnType("bit");

                    b.Property<Guid?>("ModifiedBy")
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTime?>("ModifiedDate")
                        .HasColumnType("datetime2");

                    b.HasKey("Code");

                    b.ToTable("RfCreditType");
                });

            modelBuilder.Entity("NewLMS.UMKM.Data.Entities.RfCSBP", b =>
                {
                    b.Property<string>("RfCSBPId")
                        .HasMaxLength(10)
                        .HasColumnType("nvarchar(10)");

                    b.Property<Guid>("CreatedBy")
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTime>("CreatedDate")
                        .HasColumnType("datetime2");

                    b.Property<Guid?>("DeletedBy")
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTime?>("DeletedDate")
                        .HasColumnType("datetime2");

                    b.Property<bool>("IsDeleted")
                        .HasColumnType("bit");

                    b.Property<Guid?>("ModifiedBy")
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTime?>("ModifiedDate")
                        .HasColumnType("datetime2");

                    b.Property<string>("Name")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("RfCSBPGroupId")
                        .IsRequired()
                        .HasMaxLength(3)
                        .HasColumnType("nvarchar(3)");

                    b.Property<string>("Value")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("RfCSBPId");

                    b.HasIndex("RfCSBPGroupId");

                    b.ToTable("RfCSBPs");
                });

            modelBuilder.Entity("NewLMS.UMKM.Data.Entities.RfCSBPGroup", b =>
                {
                    b.Property<string>("RfCSBPGroupId")
                        .HasMaxLength(3)
                        .HasColumnType("nvarchar(3)");

                    b.Property<Guid>("CreatedBy")
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTime>("CreatedDate")
                        .HasColumnType("datetime2");

                    b.Property<Guid?>("DeletedBy")
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTime?>("DeletedDate")
                        .HasColumnType("datetime2");

                    b.Property<string>("GroupDesc")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("GroupName")
                        .HasColumnType("nvarchar(max)");

                    b.Property<bool>("IsDeleted")
                        .HasColumnType("bit");

                    b.Property<Guid?>("ModifiedBy")
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTime?>("ModifiedDate")
                        .HasColumnType("datetime2");

                    b.HasKey("RfCSBPGroupId");

                    b.ToTable("RfCSBPGroups");
                });

            modelBuilder.Entity("NewLMS.UMKM.Data.Entities.RfDeviation", b =>
                {
                    b.Property<string>("RfDeviationId")
                        .HasMaxLength(3)
                        .HasColumnType("nvarchar(3)");

                    b.Property<bool>("Active")
                        .HasColumnType("bit");

                    b.Property<string>("CoreCode")
                        .HasColumnType("nvarchar(max)");

                    b.Property<Guid>("CreatedBy")
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTime>("CreatedDate")
                        .HasColumnType("datetime2");

                    b.Property<Guid?>("DeletedBy")
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTime?>("DeletedDate")
                        .HasColumnType("datetime2");

                    b.Property<string>("DeviationCode")
                        .HasMaxLength(25)
                        .HasColumnType("nvarchar(25)");

                    b.Property<string>("DeviationDesc")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("DeviationLevel")
                        .HasColumnType("nvarchar(max)");

                    b.Property<bool>("IsDeleted")
                        .HasColumnType("bit");

                    b.Property<Guid?>("ModifiedBy")
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTime?>("ModifiedDate")
                        .HasColumnType("datetime2");

                    b.HasKey("RfDeviationId");

                    b.ToTable("RfDeviations");
                });

            modelBuilder.Entity("NewLMS.UMKM.Data.Entities.RfDimParam", b =>
                {
                    b.Property<string>("Code")
                        .HasMaxLength(10)
                        .HasColumnType("nvarchar(10)");

                    b.Property<Guid>("CreatedBy")
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTime>("CreatedDate")
                        .HasColumnType("datetime2");

                    b.Property<Guid?>("DeletedBy")
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTime?>("DeletedDate")
                        .HasColumnType("datetime2");

                    b.Property<string>("Description")
                        .HasColumnType("nvarchar(max)");

                    b.Property<bool>("IsDeleted")
                        .HasColumnType("bit");

                    b.Property<int>("Length")
                        .HasColumnType("int");

                    b.Property<Guid?>("ModifiedBy")
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTime?>("ModifiedDate")
                        .HasColumnType("datetime2");

                    b.HasKey("Code");

                    b.ToTable("RfDimParams");
                });

            modelBuilder.Entity("NewLMS.UMKM.Data.Entities.RfDimParamMapping", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"), 1L, 1);

                    b.Property<Guid>("CreatedBy")
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTime>("CreatedDate")
                        .HasColumnType("datetime2");

                    b.Property<string>("DIMCode")
                        .HasColumnType("nvarchar(10)");

                    b.Property<string>("DIMType")
                        .HasColumnType("nvarchar(max)");

                    b.Property<Guid?>("DeletedBy")
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTime?>("DeletedDate")
                        .HasColumnType("datetime2");

                    b.Property<bool>("IsDeleted")
                        .HasColumnType("bit");

                    b.Property<Guid?>("ModifiedBy")
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTime?>("ModifiedDate")
                        .HasColumnType("datetime2");

                    b.HasKey("Id");

                    b.HasIndex("DIMCode");

                    b.ToTable("RfDimParamMappings");
                });

            modelBuilder.Entity("NewLMS.UMKM.Data.Entities.RfDocumentGenerate", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<Guid>("CreatedBy")
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTime>("CreatedDate")
                        .HasColumnType("datetime2");

                    b.Property<Guid?>("DeletedBy")
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTime?>("DeletedDate")
                        .HasColumnType("datetime2");

                    b.Property<string>("FileName")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("FileType")
                        .HasColumnType("nvarchar(max)");

                    b.Property<bool>("IsDeleted")
                        .HasColumnType("bit");

                    b.Property<Guid?>("ModifiedBy")
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTime?>("ModifiedDate")
                        .HasColumnType("datetime2");

                    b.Property<string>("OtherType")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("ProductType")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("RfSubProductId")
                        .HasColumnType("nvarchar(450)");

                    b.Property<bool>("active")
                        .HasColumnType("bit");

                    b.HasKey("Id");

                    b.HasIndex("RfSubProductId");

                    b.ToTable("RfDocumentGenerates");
                });

            modelBuilder.Entity("NewLMS.UMKM.Data.Entities.RfDocumentList", b =>
                {
                    b.Property<Guid>("DocumentListId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier")
                        .HasColumnOrder(0);

                    b.Property<Guid>("CreatedBy")
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTime>("CreatedDate")
                        .HasColumnType("datetime2");

                    b.Property<Guid?>("DeletedBy")
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTime?>("DeletedDate")
                        .HasColumnType("datetime2");

                    b.Property<string>("Description")
                        .HasColumnType("nvarchar(max)")
                        .HasColumnOrder(3);

                    b.Property<string>("DocumentCode")
                        .HasMaxLength(15)
                        .HasColumnType("nvarchar(15)")
                        .HasColumnOrder(1);

                    b.Property<string>("DocumentType")
                        .HasMaxLength(10)
                        .HasColumnType("nvarchar(10)")
                        .HasColumnOrder(2);

                    b.Property<bool>("IsDeleted")
                        .HasColumnType("bit");

                    b.Property<bool>("Mandatory")
                        .HasColumnType("bit");

                    b.Property<Guid?>("ModifiedBy")
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTime?>("ModifiedDate")
                        .HasColumnType("datetime2");

                    b.Property<string>("SubProductId")
                        .HasColumnType("nvarchar(max)")
                        .HasColumnOrder(4);

                    b.HasKey("DocumentListId");

                    b.HasIndex("DocumentType");

                    b.ToTable("RfDocumentLists");
                });

            modelBuilder.Entity("NewLMS.UMKM.Data.Entities.RfDocumentType", b =>
                {
                    b.Property<string>("RfDocumentTypeId")
                        .HasMaxLength(10)
                        .HasColumnType("nvarchar(10)");

                    b.Property<bool>("Active")
                        .HasColumnType("bit");

                    b.Property<Guid>("CreatedBy")
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTime>("CreatedDate")
                        .HasColumnType("datetime2");

                    b.Property<Guid?>("DeletedBy")
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTime?>("DeletedDate")
                        .HasColumnType("datetime2");

                    b.Property<string>("Description")
                        .HasColumnType("nvarchar(max)");

                    b.Property<bool>("IsDeleted")
                        .HasColumnType("bit");

                    b.Property<Guid?>("ModifiedBy")
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTime?>("ModifiedDate")
                        .HasColumnType("datetime2");

                    b.HasKey("RfDocumentTypeId");

                    b.ToTable("RfDocumentTypes");
                });

            modelBuilder.Entity("NewLMS.UMKM.Data.Entities.RfGolonganPangkat", b =>
                {
                    b.Property<int>("GolonganId")
                        .HasColumnType("int");

                    b.Property<int>("PangkatId")
                        .HasColumnType("int");

                    b.Property<Guid>("CreatedBy")
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTime>("CreatedDate")
                        .HasColumnType("datetime2");

                    b.Property<Guid?>("DeletedBy")
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTime?>("DeletedDate")
                        .HasColumnType("datetime2");

                    b.Property<bool>("IsDeleted")
                        .HasColumnType("bit");

                    b.Property<Guid?>("ModifiedBy")
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTime?>("ModifiedDate")
                        .HasColumnType("datetime2");

                    b.HasKey("GolonganId", "PangkatId");

                    b.ToTable("RfGolonganPangkats");
                });

            modelBuilder.Entity("NewLMS.UMKM.Data.Entities.RfGracePeriod", b =>
                {
                    b.Property<string>("Code")
                        .HasMaxLength(2)
                        .HasColumnType("nvarchar(2)");

                    b.Property<int>("BlockParamAfterGracePeriod")
                        .HasColumnType("int");

                    b.Property<int>("BlockParamGracePeriod")
                        .HasColumnType("int");

                    b.Property<Guid>("CreatedBy")
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTime>("CreatedDate")
                        .HasColumnType("datetime2");

                    b.Property<Guid?>("DeletedBy")
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTime?>("DeletedDate")
                        .HasColumnType("datetime2");

                    b.Property<string>("Description")
                        .HasMaxLength(450)
                        .HasColumnType("nvarchar(450)");

                    b.Property<bool>("IsDeleted")
                        .HasColumnType("bit");

                    b.Property<int>("MaxMonthToRetire")
                        .HasColumnType("int");

                    b.Property<int>("MinMonthToRetire")
                        .HasColumnType("int");

                    b.Property<Guid?>("ModifiedBy")
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTime?>("ModifiedDate")
                        .HasColumnType("datetime2");

                    b.HasKey("Code");

                    b.ToTable("RfGracePeriods");
                });

            modelBuilder.Entity("NewLMS.UMKM.Data.Entities.RfInsurance", b =>
                {
                    b.Property<string>("CompId")
                        .HasMaxLength(20)
                        .HasColumnType("nvarchar(20)");

                    b.Property<bool>("Active")
                        .HasColumnType("bit");

                    b.Property<string>("Addr1")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Addr2")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Addr3")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("BankAccount")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("City")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("CompName")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("CompType")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("CoreId")
                        .HasColumnType("nvarchar(max)");

                    b.Property<Guid>("CreatedBy")
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTime>("CreatedDate")
                        .HasColumnType("datetime2");

                    b.Property<Guid?>("DeletedBy")
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTime?>("DeletedDate")
                        .HasColumnType("datetime2");

                    b.Property<string>("Email")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("FaxArea")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("FaxNum")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("FormulaId")
                        .HasColumnType("nvarchar(max)");

                    b.Property<bool>("IsDeleted")
                        .HasColumnType("bit");

                    b.Property<Guid?>("ModifiedBy")
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTime?>("ModifiedDate")
                        .HasColumnType("datetime2");

                    b.Property<string>("PhoneArea")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("PhoneExt")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("PhoneNum")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("RekFire")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("RekLife")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("ZipCode")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("CompId");

                    b.ToTable("RfInsurances");
                });

            modelBuilder.Entity("NewLMS.UMKM.Data.Entities.RfInsuranceCompany", b =>
                {
                    b.Property<string>("InsuranceCompanyId")
                        .HasMaxLength(20)
                        .HasColumnType("nvarchar(20)");

                    b.Property<string>("AccountNumber")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<string>("Address1")
                        .HasMaxLength(200)
                        .HasColumnType("nvarchar(200)");

                    b.Property<string>("Address2")
                        .HasMaxLength(200)
                        .HasColumnType("nvarchar(200)");

                    b.Property<string>("Address3")
                        .HasMaxLength(200)
                        .HasColumnType("nvarchar(200)");

                    b.Property<string>("CompanyType")
                        .HasMaxLength(20)
                        .HasColumnType("nvarchar(20)");

                    b.Property<string>("CoreId")
                        .HasMaxLength(20)
                        .HasColumnType("nvarchar(20)");

                    b.Property<Guid>("CreatedBy")
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTime>("CreatedDate")
                        .HasColumnType("datetime2");

                    b.Property<Guid?>("DeletedBy")
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTime?>("DeletedDate")
                        .HasColumnType("datetime2");

                    b.Property<string>("Email")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<string>("FaxArea")
                        .HasMaxLength(5)
                        .HasColumnType("nvarchar(5)");

                    b.Property<string>("FaxNumber")
                        .HasMaxLength(15)
                        .HasColumnType("nvarchar(15)");

                    b.Property<string>("FormulaId")
                        .HasMaxLength(10)
                        .HasColumnType("nvarchar(10)");

                    b.Property<string>("InsuranceCompanyName")
                        .HasMaxLength(200)
                        .HasColumnType("nvarchar(200)");

                    b.Property<bool>("IsDeleted")
                        .HasColumnType("bit");

                    b.Property<Guid?>("ModifiedBy")
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTime?>("ModifiedDate")
                        .HasColumnType("datetime2");

                    b.Property<string>("PhoneArea")
                        .HasMaxLength(5)
                        .HasColumnType("nvarchar(5)");

                    b.Property<string>("PhoneExt")
                        .HasMaxLength(5)
                        .HasColumnType("nvarchar(5)");

                    b.Property<string>("PhoneNumber")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<string>("RekFire")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<string>("RekLife")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<int?>("RfZipCodeId")
                        .HasColumnType("int");

                    b.HasKey("InsuranceCompanyId");

                    b.HasIndex("RfZipCodeId");

                    b.ToTable("RfInsuranceCompanies");
                });

            modelBuilder.Entity("NewLMS.UMKM.Data.Entities.RfInsuranceCompanyTemplate", b =>
                {
                    b.Property<Guid>("CreatedBy")
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTime>("CreatedDate")
                        .HasColumnType("datetime2");

                    b.Property<Guid?>("DeletedBy")
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTime?>("DeletedDate")
                        .HasColumnType("datetime2");

                    b.Property<string>("InsuranceCompanyId")
                        .HasMaxLength(20)
                        .HasColumnType("nvarchar(20)");

                    b.Property<string>("InsuranceTemplateCode")
                        .HasMaxLength(10)
                        .HasColumnType("nvarchar(10)");

                    b.Property<bool>("IsDeleted")
                        .HasColumnType("bit");

                    b.Property<Guid?>("ModifiedBy")
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTime?>("ModifiedDate")
                        .HasColumnType("datetime2");

                    b.HasIndex("InsuranceCompanyId");

                    b.HasIndex("InsuranceTemplateCode");

                    b.ToTable("RfInsuranceCompanyTemplates");
                });

            modelBuilder.Entity("NewLMS.UMKM.Data.Entities.RfInsuranceCoverage", b =>
                {
                    b.Property<string>("RiskCode")
                        .HasMaxLength(20)
                        .HasColumnType("nvarchar(20)");

                    b.Property<string>("Active")
                        .HasColumnType("nvarchar(max)");

                    b.Property<Guid>("CreatedBy")
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTime>("CreatedDate")
                        .HasColumnType("datetime2");

                    b.Property<Guid?>("DeletedBy")
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTime?>("DeletedDate")
                        .HasColumnType("datetime2");

                    b.Property<bool>("IsDeleted")
                        .HasColumnType("bit");

                    b.Property<Guid?>("ModifiedBy")
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTime?>("ModifiedDate")
                        .HasColumnType("datetime2");

                    b.Property<string>("RiskDesc")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("RiskCode");

                    b.ToTable("RfInsuranceCoverages");
                });

            modelBuilder.Entity("NewLMS.UMKM.Data.Entities.RfInsuranceRateMapping", b =>
                {
                    b.Property<string>("InsuranceRateId")
                        .HasMaxLength(10)
                        .HasColumnType("nvarchar(10)");

                    b.Property<Guid>("CreatedBy")
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTime>("CreatedDate")
                        .HasColumnType("datetime2");

                    b.Property<Guid?>("DeletedBy")
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTime?>("DeletedDate")
                        .HasColumnType("datetime2");

                    b.Property<float?>("InsuranceRate")
                        .HasColumnType("real");

                    b.Property<bool>("IsDeleted")
                        .HasColumnType("bit");

                    b.Property<string>("JobCode")
                        .HasMaxLength(10)
                        .HasColumnType("nvarchar(10)");

                    b.Property<int?>("MaxAge")
                        .HasColumnType("int");

                    b.Property<int?>("MaxTenor")
                        .HasColumnType("int");

                    b.Property<int?>("MinAge")
                        .HasColumnType("int");

                    b.Property<int?>("MinTenor")
                        .HasColumnType("int");

                    b.Property<Guid?>("ModifiedBy")
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTime?>("ModifiedDate")
                        .HasColumnType("datetime2");

                    b.Property<string>("ProductId")
                        .HasMaxLength(10)
                        .HasColumnType("nvarchar(10)");

                    b.Property<string>("SubProductId")
                        .HasMaxLength(10)
                        .HasColumnType("nvarchar(10)");

                    b.Property<string>("TPLCode")
                        .HasMaxLength(10)
                        .HasColumnType("nvarchar(10)");

                    b.Property<int?>("TPLPrio")
                        .HasColumnType("int");

                    b.HasKey("InsuranceRateId");

                    b.ToTable("RfInsuranceRateMappings");
                });

            modelBuilder.Entity("NewLMS.UMKM.Data.Entities.RfInsuranceRateTemplate", b =>
                {
                    b.Property<string>("RfInsuranceRateTemplateCode")
                        .HasMaxLength(10)
                        .HasColumnType("nvarchar(10)");

                    b.Property<Guid>("CreatedBy")
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTime>("CreatedDate")
                        .HasColumnType("datetime2");

                    b.Property<Guid?>("DeletedBy")
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTime?>("DeletedDate")
                        .HasColumnType("datetime2");

                    b.Property<bool>("IsDeleted")
                        .HasColumnType("bit");

                    b.Property<Guid?>("ModifiedBy")
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTime?>("ModifiedDate")
                        .HasColumnType("datetime2");

                    b.Property<string>("RfInsuranceRateTemplateDescription")
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.HasKey("RfInsuranceRateTemplateCode");

                    b.ToTable("RfInsuranceRateTemplates");
                });

            modelBuilder.Entity("NewLMS.UMKM.Data.Entities.RfInsuranceTemplate", b =>
                {
                    b.Property<string>("InsuranceTemplateCode")
                        .HasMaxLength(10)
                        .HasColumnType("nvarchar(10)");

                    b.Property<string>("CoreCode")
                        .HasMaxLength(10)
                        .HasColumnType("nvarchar(10)");

                    b.Property<Guid>("CreatedBy")
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTime>("CreatedDate")
                        .HasColumnType("datetime2");

                    b.Property<Guid?>("DeletedBy")
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTime?>("DeletedDate")
                        .HasColumnType("datetime2");

                    b.Property<string>("InsuranceTemplateDescription")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<string>("InsuranceTemplateType")
                        .HasMaxLength(3)
                        .HasColumnType("nvarchar(3)");

                    b.Property<bool>("IsDeleted")
                        .HasColumnType("bit");

                    b.Property<Guid?>("ModifiedBy")
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTime?>("ModifiedDate")
                        .HasColumnType("datetime2");

                    b.HasKey("InsuranceTemplateCode");

                    b.ToTable("RfInsuranceTemplates");
                });

            modelBuilder.Entity("NewLMS.UMKM.Data.Entities.RfJobFieldTpl", b =>
                {
                    b.Property<string>("SHOW_TPL")
                        .HasMaxLength(10)
                        .HasColumnType("nvarchar(10)");

                    b.Property<Guid>("CreatedBy")
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTime>("CreatedDate")
                        .HasColumnType("datetime2");

                    b.Property<Guid?>("DeletedBy")
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTime?>("DeletedDate")
                        .HasColumnType("datetime2");

                    b.Property<bool?>("GAJIATBJB")
                        .HasColumnType("bit");

                    b.Property<bool?>("GAJIBERSIH")
                        .HasColumnType("bit");

                    b.Property<bool?>("GAJIPOKOK")
                        .HasColumnType("bit");

                    b.Property<bool?>("GOLONGAN")
                        .HasColumnType("bit");

                    b.Property<bool>("GRD_CODE")
                        .HasColumnType("bit");

                    b.Property<bool>("IsDeleted")
                        .HasColumnType("bit");

                    b.Property<bool?>("KARPEG")
                        .HasColumnType("bit");

                    b.Property<bool?>("KODEDINAS")
                        .HasColumnType("bit");

                    b.Property<bool?>("LAMAKERJA")
                        .HasColumnType("bit");

                    b.Property<bool?>("MASAJABATAN")
                        .HasColumnType("bit");

                    b.Property<bool?>("MAXTHNSBLMPENSIUN")
                        .HasColumnType("bit");

                    b.Property<Guid?>("ModifiedBy")
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTime?>("ModifiedDate")
                        .HasColumnType("datetime2");

                    b.Property<bool?>("NIK")
                        .HasColumnType("bit");

                    b.Property<string>("NIK_FIELDNAME")
                        .HasMaxLength(200)
                        .HasColumnType("nvarchar(200)");

                    b.Property<bool?>("NRP")
                        .HasColumnType("bit");

                    b.Property<bool?>("PENSIUNTHT")
                        .HasColumnType("bit");

                    b.Property<string>("SHOW_TPLDESC")
                        .HasColumnType("nvarchar(max)");

                    b.Property<bool?>("SISAPENSIUN")
                        .HasColumnType("bit");

                    b.Property<bool?>("SKASABRI")
                        .HasColumnType("bit");

                    b.Property<bool?>("SKBERKALA")
                        .HasColumnType("bit");

                    b.Property<bool?>("SKCPNS")
                        .HasColumnType("bit");

                    b.Property<bool?>("SKKARIP")
                        .HasColumnType("bit");

                    b.Property<bool?>("SKPANGKAT")
                        .HasColumnType("bit");

                    b.Property<bool?>("SKPEG")
                        .HasColumnType("bit");

                    b.Property<bool?>("SKPENGANGKATAN")
                        .HasColumnType("bit");

                    b.Property<bool?>("SKPENSIUN")
                        .HasColumnType("bit");

                    b.Property<bool?>("SKTASPEN")
                        .HasColumnType("bit");

                    b.Property<bool?>("SKTERAKHIR")
                        .HasColumnType("bit");

                    b.Property<bool?>("TGLPENGANGKATAN")
                        .HasColumnType("bit");

                    b.Property<bool?>("TGLPENSIUN")
                        .HasColumnType("bit");

                    b.Property<bool?>("TUNJANGAN")
                        .HasColumnType("bit");

                    b.HasKey("SHOW_TPL");

                    b.ToTable("RfJobFieldTpls");
                });

            modelBuilder.Entity("NewLMS.UMKM.Data.Entities.RfJobGrade", b =>
                {
                    b.Property<string>("GradeCode")
                        .HasMaxLength(10)
                        .HasColumnType("nvarchar(10)");

                    b.Property<Guid>("CreatedBy")
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTime>("CreatedDate")
                        .HasColumnType("datetime2");

                    b.Property<Guid?>("DeletedBy")
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTime?>("DeletedDate")
                        .HasColumnType("datetime2");

                    b.Property<string>("GradeDesc")
                        .HasMaxLength(150)
                        .HasColumnType("nvarchar(150)");

                    b.Property<bool>("IsDeleted")
                        .HasColumnType("bit");

                    b.Property<double>("MaxPlafon")
                        .HasColumnType("float");

                    b.Property<Guid?>("ModifiedBy")
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTime?>("ModifiedDate")
                        .HasColumnType("datetime2");

                    b.Property<int>("RetirementAge")
                        .HasColumnType("int");

                    b.Property<double>("Rpc")
                        .HasColumnType("float");

                    b.Property<int>("Sequence")
                        .HasColumnType("int");

                    b.Property<int>("Tenor")
                        .HasColumnType("int");

                    b.HasKey("GradeCode");

                    b.ToTable("RfJobGrades");
                });

            modelBuilder.Entity("NewLMS.UMKM.Data.Entities.RfJobPensiunTpl", b =>
                {
                    b.Property<string>("TplCode")
                        .HasMaxLength(10)
                        .HasColumnType("nvarchar(10)");

                    b.Property<Guid>("CreatedBy")
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTime>("CreatedDate")
                        .HasColumnType("datetime2");

                    b.Property<Guid?>("DeletedBy")
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTime?>("DeletedDate")
                        .HasColumnType("datetime2");

                    b.Property<string>("GolCode")
                        .HasMaxLength(10)
                        .HasColumnType("nvarchar(10)");

                    b.Property<bool>("IsDeleted")
                        .HasColumnType("bit");

                    b.Property<string>("JobCode")
                        .HasMaxLength(10)
                        .HasColumnType("nvarchar(10)");

                    b.Property<int?>("MaxTermOfOffice")
                        .HasColumnType("int");

                    b.Property<Guid?>("ModifiedBy")
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTime?>("ModifiedDate")
                        .HasColumnType("datetime2");

                    b.Property<string>("PangkatCode")
                        .HasMaxLength(10)
                        .HasColumnType("nvarchar(10)");

                    b.Property<int?>("RetirementAge")
                        .HasColumnType("int");

                    b.Property<int?>("TplPrio")
                        .HasColumnType("int");

                    b.HasKey("TplCode");

                    b.ToTable("RfJobPensiunTpls");
                });

            modelBuilder.Entity("NewLMS.UMKM.Data.Entities.RfParameter", b =>
                {
                    b.Property<int>("ParameterId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("ParameterId"), 1L, 1);

                    b.Property<bool>("Active")
                        .HasColumnType("bit");

                    b.Property<Guid>("CreatedBy")
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTime>("CreatedDate")
                        .HasColumnType("datetime2");

                    b.Property<Guid?>("DeletedBy")
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTime?>("DeletedDate")
                        .HasColumnType("datetime2");

                    b.Property<string>("Description")
                        .HasColumnType("nvarchar(max)");

                    b.Property<bool>("IsDeleted")
                        .HasColumnType("bit");

                    b.Property<Guid?>("ModifiedBy")
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTime?>("ModifiedDate")
                        .HasColumnType("datetime2");

                    b.Property<string>("Name")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("ParameterId");

                    b.ToTable("RfParameters");
                });

            modelBuilder.Entity("NewLMS.UMKM.Data.Entities.RfParameterDetail", b =>
                {
                    b.Property<int>("ParameterDetailId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("ParameterDetailId"), 1L, 1);

                    b.Property<bool>("Active")
                        .HasColumnType("bit");

                    b.Property<string>("Code")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("CoreCode")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<Guid>("CreatedBy")
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTime>("CreatedDate")
                        .HasColumnType("datetime2");

                    b.Property<Guid?>("DeletedBy")
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTime?>("DeletedDate")
                        .HasColumnType("datetime2");

                    b.Property<string>("Description")
                        .HasColumnType("nvarchar(max)");

                    b.Property<bool>("IsDeleted")
                        .HasColumnType("bit");

                    b.Property<Guid?>("ModifiedBy")
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTime?>("ModifiedDate")
                        .HasColumnType("datetime2");

                    b.Property<string>("Name")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("Order")
                        .HasColumnType("int");

                    b.Property<int>("ParameterId")
                        .HasColumnType("int");

                    b.HasKey("ParameterDetailId");

                    b.HasIndex("ParameterId");

                    b.ToTable("RfParameterDetails");
                });

            modelBuilder.Entity("NewLMS.UMKM.Data.Entities.RfPaymentMethod", b =>
                {
                    b.Property<string>("PayCode")
                        .HasMaxLength(10)
                        .HasColumnType("nvarchar(10)");

                    b.Property<string>("CodeCode")
                        .HasMaxLength(10)
                        .HasColumnType("nvarchar(10)");

                    b.Property<Guid>("CreatedBy")
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTime>("CreatedDate")
                        .HasColumnType("datetime2");

                    b.Property<Guid?>("DeletedBy")
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTime?>("DeletedDate")
                        .HasColumnType("datetime2");

                    b.Property<bool>("IsDeleted")
                        .HasColumnType("bit");

                    b.Property<int?>("MinTenor")
                        .HasColumnType("int");

                    b.Property<Guid?>("ModifiedBy")
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTime?>("ModifiedDate")
                        .HasColumnType("datetime2");

                    b.Property<string>("PayDesc")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<int?>("maxTenor")
                        .HasColumnType("int");

                    b.HasKey("PayCode");

                    b.ToTable("RfPaymentMethods");
                });

            modelBuilder.Entity("NewLMS.UMKM.Data.Entities.RfPledge", b =>
                {
                    b.Property<string>("PledgeId")
                        .HasMaxLength(10)
                        .HasColumnType("nvarchar(10)");

                    b.Property<bool>("Active")
                        .HasColumnType("bit");

                    b.Property<string>("CoreCode")
                        .HasMaxLength(10)
                        .HasColumnType("nvarchar(10)");

                    b.Property<Guid>("CreatedBy")
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTime>("CreatedDate")
                        .HasColumnType("datetime2");

                    b.Property<Guid?>("DeletedBy")
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTime?>("DeletedDate")
                        .HasColumnType("datetime2");

                    b.Property<bool>("IsDeleted")
                        .HasColumnType("bit");

                    b.Property<Guid?>("ModifiedBy")
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTime?>("ModifiedDate")
                        .HasColumnType("datetime2");

                    b.Property<string>("PledgeTypeDesc")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("PledgeId");

                    b.ToTable("RfPledges");
                });

            modelBuilder.Entity("NewLMS.UMKM.Data.Entities.RfPledgeType", b =>
                {
                    b.Property<string>("RfPledgeTypeId")
                        .HasMaxLength(10)
                        .HasColumnType("nvarchar(10)");

                    b.Property<bool>("Active")
                        .HasColumnType("bit");

                    b.Property<string>("CollateralCode")
                        .HasMaxLength(5)
                        .HasColumnType("nvarchar(5)");

                    b.Property<string>("CoreCode")
                        .HasColumnType("nvarchar(max)");

                    b.Property<Guid>("CreatedBy")
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTime>("CreatedDate")
                        .HasColumnType("datetime2");

                    b.Property<Guid?>("DeletedBy")
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTime?>("DeletedDate")
                        .HasColumnType("datetime2");

                    b.Property<bool>("IsDeleted")
                        .HasColumnType("bit");

                    b.Property<Guid?>("ModifiedBy")
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTime?>("ModifiedDate")
                        .HasColumnType("datetime2");

                    b.Property<string>("PledgeTypeCode")
                        .HasMaxLength(10)
                        .HasColumnType("nvarchar(10)");

                    b.Property<string>("PledgeTypeDesc")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("RfPledgeTypeId");

                    b.HasIndex("CollateralCode");

                    b.HasIndex("PledgeTypeCode");

                    b.ToTable("RfPledgeTypes");
                });

            modelBuilder.Entity("NewLMS.UMKM.Data.Entities.RfPremi", b =>
                {
                    b.Property<string>("InsRateCode")
                        .HasMaxLength(20)
                        .HasColumnType("nvarchar(20)");

                    b.Property<bool>("Active")
                        .HasColumnType("bit");

                    b.Property<string>("AreaCode")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("BtsRiskCode")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("ColusiaCode")
                        .HasColumnType("nvarchar(max)");

                    b.Property<Guid>("CreatedBy")
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTime>("CreatedDate")
                        .HasColumnType("datetime2");

                    b.Property<int>("DebiturAge")
                        .HasColumnType("int");

                    b.Property<Guid?>("DeletedBy")
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTime?>("DeletedDate")
                        .HasColumnType("datetime2");

                    b.Property<float>("InsRate")
                        .HasColumnType("real");

                    b.Property<bool>("IsDeleted")
                        .HasColumnType("bit");

                    b.Property<string>("JobCode")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("KetreCode")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("KetvehCode")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("LoanType")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("MaxTenor")
                        .HasColumnType("int");

                    b.Property<float>("MaxTtg")
                        .HasColumnType("real");

                    b.Property<int>("MinTenor")
                        .HasColumnType("int");

                    b.Property<float>("MinTtg")
                        .HasColumnType("real");

                    b.Property<Guid?>("ModifiedBy")
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTime?>("ModifiedDate")
                        .HasColumnType("datetime2");

                    b.Property<string>("PurposeCode")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("RiskCode")
                        .HasMaxLength(20)
                        .HasColumnType("nvarchar(20)");

                    b.Property<string>("TplCode")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("ZoneCode")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("InsRateCode");

                    b.HasIndex("RiskCode");

                    b.ToTable("RfPremis");
                });

            modelBuilder.Entity("NewLMS.UMKM.Data.Entities.RfProduct", b =>
                {
                    b.Property<string>("ProductId")
                        .HasColumnType("nvarchar(450)");

                    b.Property<int>("BlockParam")
                        .HasColumnType("int");

                    b.Property<string>("CoreCode")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("CoreProvCode")
                        .HasColumnType("nvarchar(max)");

                    b.Property<Guid>("CreatedBy")
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTime>("CreatedDate")
                        .HasColumnType("datetime2");

                    b.Property<double>("DefAdminFee")
                        .HasColumnType("float");

                    b.Property<double>("DefInterest")
                        .HasColumnType("float");

                    b.Property<double>("DefProvPctFee")
                        .HasColumnType("float");

                    b.Property<double>("DefSpread")
                        .HasColumnType("float");

                    b.Property<int>("DefTenor")
                        .HasColumnType("int");

                    b.Property<string>("DefintType")
                        .HasColumnType("nvarchar(max)");

                    b.Property<Guid?>("DeletedBy")
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTime?>("DeletedDate")
                        .HasColumnType("datetime2");

                    b.Property<string>("Description")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Division")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<bool>("IsDeleted")
                        .HasColumnType("bit");

                    b.Property<double>("LimitColumnReq")
                        .HasColumnType("float");

                    b.Property<int>("MaxAge")
                        .HasColumnType("int");

                    b.Property<double>("MaxInterest")
                        .HasColumnType("float");

                    b.Property<double>("MaxLimit")
                        .HasColumnType("float");

                    b.Property<double>("MaxProvPctFee")
                        .HasColumnType("float");

                    b.Property<int>("MaxRpc")
                        .HasColumnType("int");

                    b.Property<int>("MaxTenor")
                        .HasColumnType("int");

                    b.Property<double>("MinInterest")
                        .HasColumnType("float");

                    b.Property<Guid?>("ModifiedBy")
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTime?>("ModifiedDate")
                        .HasColumnType("datetime2");

                    b.Property<double>("PenaltyPSJT")
                        .HasColumnType("float");

                    b.Property<double>("PenaltyTopup")
                        .HasColumnType("float");

                    b.Property<string>("Type")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("ProductId");

                    b.ToTable("RfProducts");
                });

            modelBuilder.Entity("NewLMS.UMKM.Data.Entities.RfProgram", b =>
                {
                    b.Property<string>("ProgramId")
                        .HasMaxLength(15)
                        .HasColumnType("nvarchar(15)");

                    b.Property<bool>("Active")
                        .HasColumnType("bit");

                    b.Property<Guid>("CreatedBy")
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTime>("CreatedDate")
                        .HasColumnType("datetime2");

                    b.Property<double>("DefProvPctFee")
                        .HasColumnType("float");

                    b.Property<Guid?>("DeletedBy")
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTime?>("DeletedDate")
                        .HasColumnType("datetime2");

                    b.Property<string>("Description")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime>("EndDate")
                        .HasColumnType("datetime2");

                    b.Property<bool>("IsDeleted")
                        .HasColumnType("bit");

                    b.Property<double>("MaxProvPctFee")
                        .HasColumnType("float");

                    b.Property<Guid?>("ModifiedBy")
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTime?>("ModifiedDate")
                        .HasColumnType("datetime2");

                    b.Property<bool>("ModifyingProv")
                        .HasColumnType("bit");

                    b.Property<bool>("RepaymentDisc")
                        .HasColumnType("bit");

                    b.Property<DateTime>("StartDate")
                        .HasColumnType("datetime2");

                    b.HasKey("ProgramId");

                    b.ToTable("RfPrograms");
                });

            modelBuilder.Entity("NewLMS.UMKM.Data.Entities.RfProgramBranch", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"), 1L, 1);

                    b.Property<string>("BranchId")
                        .HasColumnType("nvarchar(4)");

                    b.Property<Guid>("CreatedBy")
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTime>("CreatedDate")
                        .HasColumnType("datetime2");

                    b.Property<Guid?>("DeletedBy")
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTime?>("DeletedDate")
                        .HasColumnType("datetime2");

                    b.Property<bool>("IsDeleted")
                        .HasColumnType("bit");

                    b.Property<Guid?>("ModifiedBy")
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTime?>("ModifiedDate")
                        .HasColumnType("datetime2");

                    b.Property<string>("ProgramId")
                        .HasColumnType("nvarchar(15)");

                    b.HasKey("Id");

                    b.HasIndex("BranchId");

                    b.HasIndex("ProgramId");

                    b.ToTable("RfProgramBranches");
                });

            modelBuilder.Entity("NewLMS.UMKM.Data.Entities.RfProgramSubProduct", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<Guid>("CreatedBy")
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTime>("CreatedDate")
                        .HasColumnType("datetime2");

                    b.Property<Guid?>("DeletedBy")
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTime?>("DeletedDate")
                        .HasColumnType("datetime2");

                    b.Property<bool>("IsDeleted")
                        .HasColumnType("bit");

                    b.Property<Guid?>("ModifiedBy")
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTime?>("ModifiedDate")
                        .HasColumnType("datetime2");

                    b.Property<string>("ProgramId")
                        .HasMaxLength(15)
                        .HasColumnType("nvarchar(15)");

                    b.Property<string>("SubProductId")
                        .HasColumnType("nvarchar(450)");

                    b.HasKey("Id");

                    b.HasIndex("ProgramId");

                    b.HasIndex("SubProductId");

                    b.ToTable("RfProgramSubProducts");
                });

            modelBuilder.Entity("NewLMS.UMKM.Data.Entities.RfRate", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"), 1L, 1);

                    b.Property<Guid>("CreatedBy")
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTime>("CreatedDate")
                        .HasColumnType("datetime2");

                    b.Property<Guid?>("DeletedBy")
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTime?>("DeletedDate")
                        .HasColumnType("datetime2");

                    b.Property<bool>("IsDeleted")
                        .HasColumnType("bit");

                    b.Property<int?>("MaxTenor")
                        .HasColumnType("int");

                    b.Property<int?>("MinTenor")
                        .HasColumnType("int");

                    b.Property<Guid?>("ModifiedBy")
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTime?>("ModifiedDate")
                        .HasColumnType("datetime2");

                    b.Property<decimal>("RateNew")
                        .HasColumnType("decimal(18,2)");

                    b.Property<decimal>("RateTopUp")
                        .HasColumnType("decimal(18,2)");

                    b.Property<decimal>("SpreadMusisi")
                        .HasColumnType("decimal(18,2)");

                    b.Property<string>("SubProductId")
                        .IsRequired()
                        .HasColumnType("nvarchar(450)");

                    b.HasKey("Id");

                    b.HasIndex("SubProductId");

                    b.ToTable("RfRates");
                });

            modelBuilder.Entity("NewLMS.UMKM.Data.Entities.RfRateBranch", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"), 1L, 1);

                    b.Property<string>("BranchId")
                        .HasColumnType("nvarchar(4)");

                    b.Property<Guid>("CreatedBy")
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTime>("CreatedDate")
                        .HasColumnType("datetime2");

                    b.Property<Guid?>("DeletedBy")
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTime?>("DeletedDate")
                        .HasColumnType("datetime2");

                    b.Property<DateTime?>("EndDate")
                        .HasColumnType("datetime2");

                    b.Property<bool>("IsDeleted")
                        .HasColumnType("bit");

                    b.Property<Guid?>("ModifiedBy")
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTime?>("ModifiedDate")
                        .HasColumnType("datetime2");

                    b.Property<int>("RateId")
                        .HasColumnType("int");

                    b.Property<decimal>("SpreadRate")
                        .HasColumnType("decimal(18,2)");

                    b.Property<DateTime?>("StartDate")
                        .HasColumnType("datetime2");

                    b.HasKey("Id");

                    b.HasIndex("BranchId");

                    b.HasIndex("RateId");

                    b.ToTable("RfRateBranches");
                });

            modelBuilder.Entity("NewLMS.UMKM.Data.Entities.RfRateCompany", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"), 1L, 1);

                    b.Property<string>("CompanyId")
                        .HasColumnType("nvarchar(450)");

                    b.Property<Guid>("CreatedBy")
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTime>("CreatedDate")
                        .HasColumnType("datetime2");

                    b.Property<Guid?>("DeletedBy")
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTime?>("DeletedDate")
                        .HasColumnType("datetime2");

                    b.Property<DateTime?>("EndDate")
                        .HasColumnType("datetime2");

                    b.Property<bool>("IsDeleted")
                        .HasColumnType("bit");

                    b.Property<Guid?>("ModifiedBy")
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTime?>("ModifiedDate")
                        .HasColumnType("datetime2");

                    b.Property<int>("RateId")
                        .HasColumnType("int");

                    b.Property<decimal>("SpreadRate")
                        .HasColumnType("decimal(18,2)");

                    b.Property<DateTime?>("StartDate")
                        .HasColumnType("datetime2");

                    b.HasKey("Id");

                    b.HasIndex("CompanyId");

                    b.HasIndex("RateId");

                    b.ToTable("RfRateCompanies");
                });

            modelBuilder.Entity("NewLMS.UMKM.Data.Entities.RfSandiBI", b =>
                {
                    b.Property<string>("RfSandiBIId")
                        .HasMaxLength(10)
                        .HasColumnType("nvarchar(10)")
                        .HasColumnOrder(0);

                    b.Property<bool>("Active")
                        .HasColumnType("bit")
                        .HasColumnOrder(6);

                    b.Property<string>("BICode")
                        .HasMaxLength(10)
                        .HasColumnType("nvarchar(10)")
                        .HasColumnOrder(3);

                    b.Property<string>("BIDesc")
                        .HasColumnType("nvarchar(max)")
                        .HasColumnOrder(4);

                    b.Property<string>("BIGroup")
                        .IsRequired()
                        .HasMaxLength(3)
                        .HasColumnType("nvarchar(3)")
                        .HasColumnOrder(1);

                    b.Property<string>("BIType")
                        .HasMaxLength(5)
                        .HasColumnType("nvarchar(5)")
                        .HasColumnOrder(2);

                    b.Property<string>("CategoryCode")
                        .HasColumnType("nvarchar(max)")
                        .HasColumnOrder(7);

                    b.Property<string>("CoreCode")
                        .HasMaxLength(10)
                        .HasColumnType("nvarchar(10)")
                        .HasColumnOrder(5);

                    b.Property<Guid>("CreatedBy")
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTime>("CreatedDate")
                        .HasColumnType("datetime2");

                    b.Property<Guid?>("DeletedBy")
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTime?>("DeletedDate")
                        .HasColumnType("datetime2");

                    b.Property<bool>("IsDeleted")
                        .HasColumnType("bit");

                    b.Property<Guid?>("ModifiedBy")
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTime?>("ModifiedDate")
                        .HasColumnType("datetime2");

                    b.HasKey("RfSandiBIId");

                    b.HasIndex("BIGroup");

                    b.ToTable("RfSandiBIs");
                });

            modelBuilder.Entity("NewLMS.UMKM.Data.Entities.RfSandiBIGroup", b =>
                {
                    b.Property<string>("BIGroup")
                        .HasMaxLength(3)
                        .HasColumnType("nvarchar(3)")
                        .HasColumnOrder(0);

                    b.Property<string>("BIDesc")
                        .HasColumnType("nvarchar(max)")
                        .HasColumnOrder(1);

                    b.Property<Guid>("CreatedBy")
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTime>("CreatedDate")
                        .HasColumnType("datetime2");

                    b.Property<Guid?>("DeletedBy")
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTime?>("DeletedDate")
                        .HasColumnType("datetime2");

                    b.Property<bool>("IsDeleted")
                        .HasColumnType("bit");

                    b.Property<Guid?>("ModifiedBy")
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTime?>("ModifiedDate")
                        .HasColumnType("datetime2");

                    b.HasKey("BIGroup");

                    b.ToTable("RfSandiBIGroups");
                });

            modelBuilder.Entity("NewLMS.UMKM.Data.Entities.RfSchemaMaxInstallment", b =>
                {
                    b.Property<string>("SchemaMaxInstallment")
                        .HasMaxLength(10)
                        .HasColumnType("nvarchar(10)");

                    b.Property<bool>("IsDeleted")
                        .HasColumnType("bit");

                    b.Property<float>("RPC")
                        .HasColumnType("real");

                    b.Property<string>("SchemaMaxInstallmentDesc")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.HasKey("SchemaMaxInstallment");

                    b.ToTable("RfSchemaMaxInstallments");
                });

            modelBuilder.Entity("NewLMS.UMKM.Data.Entities.RfScoringAging", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"), 1L, 1);

                    b.Property<string>("Category")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.Property<string>("Code")
                        .IsRequired()
                        .HasMaxLength(10)
                        .HasColumnType("nvarchar(10)");

                    b.Property<Guid>("CreatedBy")
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTime>("CreatedDate")
                        .HasColumnType("datetime2");

                    b.Property<Guid?>("DeletedBy")
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTime?>("DeletedDate")
                        .HasColumnType("datetime2");

                    b.Property<bool>("IsDeleted")
                        .HasColumnType("bit");

                    b.Property<int>("MaxAge")
                        .HasColumnType("int");

                    b.Property<int>("MinAge")
                        .HasColumnType("int");

                    b.Property<Guid?>("ModifiedBy")
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTime?>("ModifiedDate")
                        .HasColumnType("datetime2");

                    b.Property<int>("Order")
                        .HasColumnType("int");

                    b.Property<double>("Score")
                        .HasColumnType("float");

                    b.Property<string>("ScreenBisnis")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.Property<string>("Type")
                        .IsRequired()
                        .HasMaxLength(1)
                        .HasColumnType("nvarchar(1)");

                    b.Property<string>("Version")
                        .IsRequired()
                        .HasMaxLength(7)
                        .HasColumnType("nvarchar(7)");

                    b.HasKey("Id");

                    b.ToTable("RfScoringAgings");
                });

            modelBuilder.Entity("NewLMS.UMKM.Data.Entities.RfScoringAgingParam", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"), 1L, 1);

                    b.Property<string>("ColumnName")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("ColumnType")
                        .HasColumnType("nvarchar(max)");

                    b.Property<Guid>("CreatedBy")
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTime>("CreatedDate")
                        .HasColumnType("datetime2");

                    b.Property<Guid?>("DeletedBy")
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTime?>("DeletedDate")
                        .HasColumnType("datetime2");

                    b.Property<bool>("IsDeleted")
                        .HasColumnType("bit");

                    b.Property<Guid?>("ModifiedBy")
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTime?>("ModifiedDate")
                        .HasColumnType("datetime2");

                    b.Property<string>("Operator")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Type")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Version")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("WhereClause")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.ToTable("RfScoringAgingParams");
                });

            modelBuilder.Entity("NewLMS.UMKM.Data.Entities.RfScoringBeta", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"), 1L, 1);

                    b.Property<Guid>("CreatedBy")
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTime>("CreatedDate")
                        .HasColumnType("datetime2");

                    b.Property<Guid?>("DeletedBy")
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTime?>("DeletedDate")
                        .HasColumnType("datetime2");

                    b.Property<bool>("IsDeleted")
                        .HasColumnType("bit");

                    b.Property<Guid?>("ModifiedBy")
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTime?>("ModifiedDate")
                        .HasColumnType("datetime2");

                    b.Property<string>("Type")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Value")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Version")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.ToTable("RfScoringBetas");
                });

            modelBuilder.Entity("NewLMS.UMKM.Data.Entities.RFScoringBIChecking", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"), 1L, 1);

                    b.Property<string>("BICheckingValue")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Category")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.Property<string>("Code")
                        .IsRequired()
                        .HasMaxLength(10)
                        .HasColumnType("nvarchar(10)");

                    b.Property<Guid>("CreatedBy")
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTime>("CreatedDate")
                        .HasColumnType("datetime2");

                    b.Property<Guid?>("DeletedBy")
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTime?>("DeletedDate")
                        .HasColumnType("datetime2");

                    b.Property<bool>("IsDeleted")
                        .HasColumnType("bit");

                    b.Property<Guid?>("ModifiedBy")
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTime?>("ModifiedDate")
                        .HasColumnType("datetime2");

                    b.Property<int>("Order")
                        .HasColumnType("int");

                    b.Property<double>("Score")
                        .HasColumnType("float");

                    b.Property<string>("ScreenBisnis")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.Property<string>("Type")
                        .IsRequired()
                        .HasMaxLength(1)
                        .HasColumnType("nvarchar(1)");

                    b.Property<string>("Version")
                        .IsRequired()
                        .HasMaxLength(7)
                        .HasColumnType("nvarchar(7)");

                    b.HasKey("Id");

                    b.ToTable("RFScoringBICheckings");
                });

            modelBuilder.Entity("NewLMS.UMKM.Data.Entities.RfScoringBICheckingParam", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"), 1L, 1);

                    b.Property<string>("ColumnName")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("ColumnType")
                        .HasColumnType("nvarchar(max)");

                    b.Property<Guid>("CreatedBy")
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTime>("CreatedDate")
                        .HasColumnType("datetime2");

                    b.Property<Guid?>("DeletedBy")
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTime?>("DeletedDate")
                        .HasColumnType("datetime2");

                    b.Property<bool>("IsDeleted")
                        .HasColumnType("bit");

                    b.Property<Guid?>("ModifiedBy")
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTime?>("ModifiedDate")
                        .HasColumnType("datetime2");

                    b.Property<string>("Operator")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Type")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Version")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("WhereClause")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.ToTable("RfScoringBICheckingParams");
                });

            modelBuilder.Entity("NewLMS.UMKM.Data.Entities.RfScoringCreditTerm", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"), 1L, 1);

                    b.Property<string>("Category")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.Property<string>("Code")
                        .IsRequired()
                        .HasMaxLength(10)
                        .HasColumnType("nvarchar(10)");

                    b.Property<Guid>("CreatedBy")
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTime>("CreatedDate")
                        .HasColumnType("datetime2");

                    b.Property<Guid?>("DeletedBy")
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTime?>("DeletedDate")
                        .HasColumnType("datetime2");

                    b.Property<bool>("IsDeleted")
                        .HasColumnType("bit");

                    b.Property<int>("MaxTerm")
                        .HasColumnType("int");

                    b.Property<int>("MinTerm")
                        .HasColumnType("int");

                    b.Property<Guid?>("ModifiedBy")
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTime?>("ModifiedDate")
                        .HasColumnType("datetime2");

                    b.Property<int>("Order")
                        .HasColumnType("int");

                    b.Property<double>("Score")
                        .HasColumnType("float");

                    b.Property<string>("ScreenBisnis")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.Property<string>("Type")
                        .IsRequired()
                        .HasMaxLength(1)
                        .HasColumnType("nvarchar(1)");

                    b.Property<string>("Version")
                        .IsRequired()
                        .HasMaxLength(7)
                        .HasColumnType("nvarchar(7)");

                    b.HasKey("Id");

                    b.ToTable("RfScoringCreditTerms");
                });

            modelBuilder.Entity("NewLMS.UMKM.Data.Entities.RfScoringCreditTermParam", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"), 1L, 1);

                    b.Property<string>("ColumnName")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("ColumnType")
                        .HasColumnType("nvarchar(max)");

                    b.Property<Guid>("CreatedBy")
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTime>("CreatedDate")
                        .HasColumnType("datetime2");

                    b.Property<Guid?>("DeletedBy")
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTime?>("DeletedDate")
                        .HasColumnType("datetime2");

                    b.Property<bool>("IsDeleted")
                        .HasColumnType("bit");

                    b.Property<Guid?>("ModifiedBy")
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTime?>("ModifiedDate")
                        .HasColumnType("datetime2");

                    b.Property<string>("Operator")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Type")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Version")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("WhereClause")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.ToTable("RfScoringCreditTermParams");
                });

            modelBuilder.Entity("NewLMS.UMKM.Data.Entities.RfScoringDebtorType", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"), 1L, 1);

                    b.Property<string>("Category")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.Property<string>("Code")
                        .IsRequired()
                        .HasMaxLength(10)
                        .HasColumnType("nvarchar(10)");

                    b.Property<Guid>("CreatedBy")
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTime>("CreatedDate")
                        .HasColumnType("datetime2");

                    b.Property<string>("DebtorTypeValue")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<Guid?>("DeletedBy")
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTime?>("DeletedDate")
                        .HasColumnType("datetime2");

                    b.Property<bool>("IsDeleted")
                        .HasColumnType("bit");

                    b.Property<Guid?>("ModifiedBy")
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTime?>("ModifiedDate")
                        .HasColumnType("datetime2");

                    b.Property<int>("Order")
                        .HasColumnType("int");

                    b.Property<double>("Score")
                        .HasColumnType("float");

                    b.Property<string>("ScreenBisnis")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.Property<string>("Type")
                        .IsRequired()
                        .HasMaxLength(1)
                        .HasColumnType("nvarchar(1)");

                    b.Property<string>("Version")
                        .IsRequired()
                        .HasMaxLength(7)
                        .HasColumnType("nvarchar(7)");

                    b.HasKey("Id");

                    b.ToTable("RfScoringDebtorTypes");
                });

            modelBuilder.Entity("NewLMS.UMKM.Data.Entities.RfScoringDebtorTypeParam", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"), 1L, 1);

                    b.Property<string>("ColumnName")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("ColumnType")
                        .HasColumnType("nvarchar(max)");

                    b.Property<Guid>("CreatedBy")
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTime>("CreatedDate")
                        .HasColumnType("datetime2");

                    b.Property<Guid?>("DeletedBy")
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTime?>("DeletedDate")
                        .HasColumnType("datetime2");

                    b.Property<bool>("IsDeleted")
                        .HasColumnType("bit");

                    b.Property<Guid?>("ModifiedBy")
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTime?>("ModifiedDate")
                        .HasColumnType("datetime2");

                    b.Property<string>("Operator")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Type")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Version")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("WhereClause")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.ToTable("RfScoringDebtorTypeParams");
                });

            modelBuilder.Entity("NewLMS.UMKM.Data.Entities.RfScoringEmployeeStatus", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"), 1L, 1);

                    b.Property<string>("Category")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.Property<string>("Code")
                        .IsRequired()
                        .HasMaxLength(10)
                        .HasColumnType("nvarchar(10)");

                    b.Property<Guid>("CreatedBy")
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTime>("CreatedDate")
                        .HasColumnType("datetime2");

                    b.Property<Guid?>("DeletedBy")
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTime?>("DeletedDate")
                        .HasColumnType("datetime2");

                    b.Property<string>("EmployeeStatusValue")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<bool>("IsDeleted")
                        .HasColumnType("bit");

                    b.Property<Guid?>("ModifiedBy")
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTime?>("ModifiedDate")
                        .HasColumnType("datetime2");

                    b.Property<int>("Order")
                        .HasColumnType("int");

                    b.Property<double>("Score")
                        .HasColumnType("float");

                    b.Property<string>("ScreenBisnis")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.Property<string>("Type")
                        .IsRequired()
                        .HasMaxLength(1)
                        .HasColumnType("nvarchar(1)");

                    b.Property<string>("Version")
                        .IsRequired()
                        .HasMaxLength(7)
                        .HasColumnType("nvarchar(7)");

                    b.HasKey("Id");

                    b.ToTable("RfScoringEmployeeStatuses");
                });

            modelBuilder.Entity("NewLMS.UMKM.Data.Entities.RfScoringEmployeeStatusParam", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"), 1L, 1);

                    b.Property<string>("ColumnName")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("ColumnType")
                        .HasColumnType("nvarchar(max)");

                    b.Property<Guid>("CreatedBy")
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTime>("CreatedDate")
                        .HasColumnType("datetime2");

                    b.Property<Guid?>("DeletedBy")
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTime?>("DeletedDate")
                        .HasColumnType("datetime2");

                    b.Property<bool>("IsDeleted")
                        .HasColumnType("bit");

                    b.Property<Guid?>("ModifiedBy")
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTime?>("ModifiedDate")
                        .HasColumnType("datetime2");

                    b.Property<string>("Operator")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Type")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Version")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("WhereClause")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.ToTable("RfScoringEmployeeStatusParams");
                });

            modelBuilder.Entity("NewLMS.UMKM.Data.Entities.RfScoringMaritalStatus", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"), 1L, 1);

                    b.Property<string>("Category")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.Property<string>("Code")
                        .IsRequired()
                        .HasMaxLength(10)
                        .HasColumnType("nvarchar(10)");

                    b.Property<Guid>("CreatedBy")
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTime>("CreatedDate")
                        .HasColumnType("datetime2");

                    b.Property<Guid?>("DeletedBy")
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTime?>("DeletedDate")
                        .HasColumnType("datetime2");

                    b.Property<bool>("IsDeleted")
                        .HasColumnType("bit");

                    b.Property<string>("MaritalStatusValue")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<Guid?>("ModifiedBy")
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTime?>("ModifiedDate")
                        .HasColumnType("datetime2");

                    b.Property<int>("Order")
                        .HasColumnType("int");

                    b.Property<double>("Score")
                        .HasColumnType("float");

                    b.Property<string>("ScreenBisnis")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.Property<string>("Type")
                        .IsRequired()
                        .HasMaxLength(1)
                        .HasColumnType("nvarchar(1)");

                    b.Property<string>("Version")
                        .IsRequired()
                        .HasMaxLength(7)
                        .HasColumnType("nvarchar(7)");

                    b.HasKey("Id");

                    b.ToTable("RfScoringMaritalStatuses");
                });

            modelBuilder.Entity("NewLMS.UMKM.Data.Entities.RfScoringMaritalStatusParam", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"), 1L, 1);

                    b.Property<string>("ColumnName")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("ColumnType")
                        .HasColumnType("nvarchar(max)");

                    b.Property<Guid>("CreatedBy")
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTime>("CreatedDate")
                        .HasColumnType("datetime2");

                    b.Property<Guid?>("DeletedBy")
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTime?>("DeletedDate")
                        .HasColumnType("datetime2");

                    b.Property<bool>("IsDeleted")
                        .HasColumnType("bit");

                    b.Property<Guid?>("ModifiedBy")
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTime?>("ModifiedDate")
                        .HasColumnType("datetime2");

                    b.Property<string>("Operator")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Type")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Version")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("WhereClause")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.ToTable("RfScoringMaritalStatusParams");
                });

            modelBuilder.Entity("NewLMS.UMKM.Data.Entities.RfScoringNumberOfDepents", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"), 1L, 1);

                    b.Property<string>("Category")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.Property<string>("Code")
                        .IsRequired()
                        .HasMaxLength(10)
                        .HasColumnType("nvarchar(10)");

                    b.Property<Guid>("CreatedBy")
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTime>("CreatedDate")
                        .HasColumnType("datetime2");

                    b.Property<Guid?>("DeletedBy")
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTime?>("DeletedDate")
                        .HasColumnType("datetime2");

                    b.Property<bool>("IsDeleted")
                        .HasColumnType("bit");

                    b.Property<Guid?>("ModifiedBy")
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTime?>("ModifiedDate")
                        .HasColumnType("datetime2");

                    b.Property<int>("NumberOfDepent")
                        .HasColumnType("int");

                    b.Property<int>("Order")
                        .HasColumnType("int");

                    b.Property<double>("Score")
                        .HasColumnType("float");

                    b.Property<string>("ScreenBisnis")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.Property<string>("Type")
                        .IsRequired()
                        .HasMaxLength(1)
                        .HasColumnType("nvarchar(1)");

                    b.Property<string>("Version")
                        .IsRequired()
                        .HasMaxLength(7)
                        .HasColumnType("nvarchar(7)");

                    b.HasKey("Id");

                    b.ToTable("RfScoringNumberOfDepents");
                });

            modelBuilder.Entity("NewLMS.UMKM.Data.Entities.RfScoringNumberOfDepentsParam", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"), 1L, 1);

                    b.Property<string>("ColumnName")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("ColumnType")
                        .HasColumnType("nvarchar(max)");

                    b.Property<Guid>("CreatedBy")
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTime>("CreatedDate")
                        .HasColumnType("datetime2");

                    b.Property<Guid?>("DeletedBy")
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTime?>("DeletedDate")
                        .HasColumnType("datetime2");

                    b.Property<bool>("IsDeleted")
                        .HasColumnType("bit");

                    b.Property<Guid?>("ModifiedBy")
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTime?>("ModifiedDate")
                        .HasColumnType("datetime2");

                    b.Property<string>("Operator")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Type")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Version")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("WhereClause")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.ToTable("RfScoringNumberOfDepentsParams");
                });

            modelBuilder.Entity("NewLMS.UMKM.Data.Entities.RfScoringParam", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"), 1L, 1);

                    b.Property<bool>("IsDeleted")
                        .HasColumnType("bit");

                    b.Property<string>("Name")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Type")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Version")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.ToTable("RfScoringParams");
                });

            modelBuilder.Entity("NewLMS.UMKM.Data.Entities.RfScoringParamDetail", b =>
                {
                    b.Property<string>("Id")
                        .HasColumnType("nvarchar(450)");

                    b.Property<string>("Field")
                        .HasColumnType("nvarchar(max)");

                    b.Property<bool>("IsDeleted")
                        .HasColumnType("bit");

                    b.Property<string>("Operator")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("RfScoringParamId")
                        .HasColumnType("int");

                    b.Property<string>("Type")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("WhereClause")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.HasIndex("RfScoringParamId");

                    b.ToTable("RfScoringParamDetails");
                });

            modelBuilder.Entity("NewLMS.UMKM.Data.Entities.RfScoringResidenceStatus", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"), 1L, 1);

                    b.Property<string>("Category")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.Property<string>("Code")
                        .IsRequired()
                        .HasMaxLength(10)
                        .HasColumnType("nvarchar(10)");

                    b.Property<Guid>("CreatedBy")
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTime>("CreatedDate")
                        .HasColumnType("datetime2");

                    b.Property<Guid?>("DeletedBy")
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTime?>("DeletedDate")
                        .HasColumnType("datetime2");

                    b.Property<bool>("IsDeleted")
                        .HasColumnType("bit");

                    b.Property<Guid?>("ModifiedBy")
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTime?>("ModifiedDate")
                        .HasColumnType("datetime2");

                    b.Property<int>("Order")
                        .HasColumnType("int");

                    b.Property<string>("ResidenceStatusValue")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<double>("Score")
                        .HasColumnType("float");

                    b.Property<string>("ScreenBisnis")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.Property<string>("Type")
                        .IsRequired()
                        .HasMaxLength(1)
                        .HasColumnType("nvarchar(1)");

                    b.Property<string>("Version")
                        .IsRequired()
                        .HasMaxLength(7)
                        .HasColumnType("nvarchar(7)");

                    b.HasKey("Id");

                    b.ToTable("RfScoringResidenceStatuses");
                });

            modelBuilder.Entity("NewLMS.UMKM.Data.Entities.RfScoringResidenceStatusParam", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"), 1L, 1);

                    b.Property<string>("ColumnName")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("ColumnType")
                        .HasColumnType("nvarchar(max)");

                    b.Property<Guid>("CreatedBy")
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTime>("CreatedDate")
                        .HasColumnType("datetime2");

                    b.Property<Guid?>("DeletedBy")
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTime?>("DeletedDate")
                        .HasColumnType("datetime2");

                    b.Property<bool>("IsDeleted")
                        .HasColumnType("bit");

                    b.Property<Guid?>("ModifiedBy")
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTime?>("ModifiedDate")
                        .HasColumnType("datetime2");

                    b.Property<string>("Operator")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Type")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Version")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("WhereClause")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.ToTable("RfScoringResidenceStatusParams");
                });

            modelBuilder.Entity("NewLMS.UMKM.Data.Entities.RfScoringServicePeriod", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"), 1L, 1);

                    b.Property<string>("Category")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.Property<string>("Code")
                        .IsRequired()
                        .HasMaxLength(10)
                        .HasColumnType("nvarchar(10)");

                    b.Property<Guid>("CreatedBy")
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTime>("CreatedDate")
                        .HasColumnType("datetime2");

                    b.Property<Guid?>("DeletedBy")
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTime?>("DeletedDate")
                        .HasColumnType("datetime2");

                    b.Property<bool>("IsDeleted")
                        .HasColumnType("bit");

                    b.Property<Guid?>("ModifiedBy")
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTime?>("ModifiedDate")
                        .HasColumnType("datetime2");

                    b.Property<int>("Order")
                        .HasColumnType("int");

                    b.Property<double>("Score")
                        .HasColumnType("float");

                    b.Property<string>("ScreenBisnis")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.Property<int>("ServicePeriodValue")
                        .HasColumnType("int");

                    b.Property<string>("Type")
                        .IsRequired()
                        .HasMaxLength(1)
                        .HasColumnType("nvarchar(1)");

                    b.Property<string>("Version")
                        .IsRequired()
                        .HasMaxLength(7)
                        .HasColumnType("nvarchar(7)");

                    b.HasKey("Id");

                    b.ToTable("RfScoringServicePeriods");
                });

            modelBuilder.Entity("NewLMS.UMKM.Data.Entities.RfScoringServicePeriodParam", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"), 1L, 1);

                    b.Property<string>("ColumnName")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("ColumnType")
                        .HasColumnType("nvarchar(max)");

                    b.Property<Guid>("CreatedBy")
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTime>("CreatedDate")
                        .HasColumnType("datetime2");

                    b.Property<Guid?>("DeletedBy")
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTime?>("DeletedDate")
                        .HasColumnType("datetime2");

                    b.Property<bool>("IsDeleted")
                        .HasColumnType("bit");

                    b.Property<Guid?>("ModifiedBy")
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTime?>("ModifiedDate")
                        .HasColumnType("datetime2");

                    b.Property<string>("Operator")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Type")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Version")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("WhereClause")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.ToTable("RfScoringServicePeriodParams");
                });

            modelBuilder.Entity("NewLMS.UMKM.Data.Entities.RfScoringStatusCredit", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"), 1L, 1);

                    b.Property<string>("Category")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.Property<string>("Code")
                        .IsRequired()
                        .HasMaxLength(10)
                        .HasColumnType("nvarchar(10)");

                    b.Property<Guid>("CreatedBy")
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTime>("CreatedDate")
                        .HasColumnType("datetime2");

                    b.Property<Guid?>("DeletedBy")
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTime?>("DeletedDate")
                        .HasColumnType("datetime2");

                    b.Property<bool>("IsDeleted")
                        .HasColumnType("bit");

                    b.Property<Guid?>("ModifiedBy")
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTime?>("ModifiedDate")
                        .HasColumnType("datetime2");

                    b.Property<int>("Order")
                        .HasColumnType("int");

                    b.Property<double>("Score")
                        .HasColumnType("float");

                    b.Property<string>("ScreenBisnis")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.Property<string>("StatusCreditValue")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Type")
                        .IsRequired()
                        .HasMaxLength(1)
                        .HasColumnType("nvarchar(1)");

                    b.Property<string>("Version")
                        .IsRequired()
                        .HasMaxLength(7)
                        .HasColumnType("nvarchar(7)");

                    b.HasKey("Id");

                    b.ToTable("RfScoringStatusCredits");
                });

            modelBuilder.Entity("NewLMS.UMKM.Data.Entities.RfScoringStatusCreditParam", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"), 1L, 1);

                    b.Property<string>("ColumnName")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("ColumnType")
                        .HasColumnType("nvarchar(max)");

                    b.Property<Guid>("CreatedBy")
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTime>("CreatedDate")
                        .HasColumnType("datetime2");

                    b.Property<Guid?>("DeletedBy")
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTime?>("DeletedDate")
                        .HasColumnType("datetime2");

                    b.Property<bool>("IsDeleted")
                        .HasColumnType("bit");

                    b.Property<Guid?>("ModifiedBy")
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTime?>("ModifiedDate")
                        .HasColumnType("datetime2");

                    b.Property<string>("Operator")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Type")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Version")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("WhereClause")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.ToTable("RfScoringStatusCreditParams");
                });

            modelBuilder.Entity("NewLMS.UMKM.Data.Entities.RfSectorLBU1", b =>
                {
                    b.Property<string>("Code")
                        .HasColumnType("nvarchar(450)");

                    b.Property<string>("CoreCode")
                        .HasColumnType("nvarchar(max)");

                    b.Property<Guid>("CreatedBy")
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTime>("CreatedDate")
                        .HasColumnType("datetime2");

                    b.Property<Guid?>("DeletedBy")
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTime?>("DeletedDate")
                        .HasColumnType("datetime2");

                    b.Property<string>("Description")
                        .HasColumnType("nvarchar(max)");

                    b.Property<bool>("IsDeleted")
                        .HasColumnType("bit");

                    b.Property<bool>("IsShowing")
                        .HasColumnType("bit");

                    b.Property<Guid?>("ModifiedBy")
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTime?>("ModifiedDate")
                        .HasColumnType("datetime2");

                    b.HasKey("Code");

                    b.ToTable("RfSectorLBU1s");
                });

            modelBuilder.Entity("NewLMS.UMKM.Data.Entities.RfSectorLBU2", b =>
                {
                    b.Property<string>("Code")
                        .HasColumnType("nvarchar(450)");

                    b.Property<string>("CoreCode")
                        .HasColumnType("nvarchar(max)");

                    b.Property<Guid>("CreatedBy")
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTime>("CreatedDate")
                        .HasColumnType("datetime2");

                    b.Property<Guid?>("DeletedBy")
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTime?>("DeletedDate")
                        .HasColumnType("datetime2");

                    b.Property<string>("Description")
                        .HasColumnType("nvarchar(max)");

                    b.Property<bool>("IsDeleted")
                        .HasColumnType("bit");

                    b.Property<bool>("IsShowing")
                        .HasColumnType("bit");

                    b.Property<string>("LBCode1")
                        .HasColumnType("nvarchar(max)");

                    b.Property<Guid?>("ModifiedBy")
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTime?>("ModifiedDate")
                        .HasColumnType("datetime2");

                    b.Property<string>("RfSectorLBU1Code")
                        .HasColumnType("nvarchar(450)");

                    b.HasKey("Code");

                    b.HasIndex("RfSectorLBU1Code");

                    b.ToTable("RfSectorLBU2s");
                });

            modelBuilder.Entity("NewLMS.UMKM.Data.Entities.RfSectorLBU3", b =>
                {
                    b.Property<string>("Code")
                        .HasColumnType("nvarchar(450)");

                    b.Property<string>("CategoryCode")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("CoreCode")
                        .HasColumnType("nvarchar(max)");

                    b.Property<Guid>("CreatedBy")
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTime>("CreatedDate")
                        .HasColumnType("datetime2");

                    b.Property<Guid?>("DeletedBy")
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTime?>("DeletedDate")
                        .HasColumnType("datetime2");

                    b.Property<string>("Description")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("Group")
                        .HasColumnType("int");

                    b.Property<bool>("IsDeleted")
                        .HasColumnType("bit");

                    b.Property<bool>("IsShowing")
                        .HasColumnType("bit");

                    b.Property<string>("LBCode2")
                        .HasColumnType("nvarchar(max)");

                    b.Property<Guid?>("ModifiedBy")
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTime?>("ModifiedDate")
                        .HasColumnType("datetime2");

                    b.Property<string>("RfSectorLBU2Code")
                        .HasColumnType("nvarchar(450)");

                    b.Property<string>("Type")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Code");

                    b.HasIndex("RfSectorLBU2Code");

                    b.ToTable("RfSectorLBU3s");
                });

            modelBuilder.Entity("NewLMS.UMKM.Data.Entities.RfStage", b =>
                {
                    b.Property<Guid>("StageId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("Code")
                        .HasMaxLength(5)
                        .HasColumnType("nvarchar(5)");

                    b.Property<Guid>("CreatedBy")
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTime>("CreatedDate")
                        .HasColumnType("datetime2");

                    b.Property<Guid?>("DeletedBy")
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTime?>("DeletedDate")
                        .HasColumnType("datetime2");

                    b.Property<string>("Description")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("GroupName")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("GroupStage")
                        .HasColumnType("int");

                    b.Property<bool>("IsDeleted")
                        .HasColumnType("bit");

                    b.Property<bool>("IsShowInTracking")
                        .HasColumnType("bit");

                    b.Property<Guid?>("ModifiedBy")
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTime?>("ModifiedDate")
                        .HasColumnType("datetime2");

                    b.HasKey("StageId");

                    b.ToTable("RfStages");
                });

            modelBuilder.Entity("NewLMS.UMKM.Data.Entities.RfSubProduct", b =>
                {
                    b.Property<string>("SubProductId")
                        .HasColumnType("nvarchar(450)");

                    b.Property<bool>("BjbMusisi")
                        .HasColumnType("bit");

                    b.Property<int>("BlockParam")
                        .HasColumnType("int");

                    b.Property<string>("ChargeCodeFeeAdministration")
                        .HasMaxLength(5)
                        .HasColumnType("nvarchar(5)");

                    b.Property<string>("ChargeCodeInsurance")
                        .HasMaxLength(5)
                        .HasColumnType("nvarchar(5)");

                    b.Property<string>("ChargeCodeProvisi")
                        .HasMaxLength(5)
                        .HasColumnType("nvarchar(5)");

                    b.Property<string>("CoreCode")
                        .HasColumnType("nvarchar(max)");

                    b.Property<Guid>("CreatedBy")
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTime>("CreatedDate")
                        .HasColumnType("datetime2");

                    b.Property<string>("DIMType")
                        .HasMaxLength(6)
                        .HasColumnType("nvarchar(6)");

                    b.Property<double>("DefAdmPcmFee")
                        .HasColumnType("float");

                    b.Property<string>("DefIntType")
                        .HasColumnType("nvarchar(max)");

                    b.Property<double>("DefProvPctFee")
                        .HasColumnType("float");

                    b.Property<string>("DefpayCode")
                        .HasColumnType("nvarchar(max)");

                    b.Property<Guid?>("DeletedBy")
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTime?>("DeletedDate")
                        .HasColumnType("datetime2");

                    b.Property<string>("Description")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("DivisionCode")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("GradePeriodPension")
                        .HasColumnType("int");

                    b.Property<bool>("IsDeleted")
                        .HasColumnType("bit");

                    b.Property<bool>("IsGracePeriod")
                        .HasColumnType("bit");

                    b.Property<double>("MaxPlanfond")
                        .HasColumnType("float");

                    b.Property<double>("MaxProvPctFee")
                        .HasColumnType("float");

                    b.Property<int>("MaximumMonthBeforeRetirement")
                        .HasColumnType("int");

                    b.Property<int>("MaximumYearBeforeRetirement")
                        .HasColumnType("int");

                    b.Property<Guid?>("ModifiedBy")
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTime?>("ModifiedDate")
                        .HasColumnType("datetime2");

                    b.Property<string>("Payroll")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("ProductId")
                        .HasColumnType("nvarchar(450)");

                    b.Property<string>("SchemaMaxInstallment")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("TplSurveyCode")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("SubProductId");

                    b.HasIndex("ProductId");

                    b.ToTable("RfSubProducts");
                });

            modelBuilder.Entity("NewLMS.UMKM.Data.Entities.RfSubProductAdministration", b =>
                {
                    b.Property<string>("RfBranchCode")
                        .HasMaxLength(4)
                        .HasColumnType("nvarchar(4)");

                    b.Property<string>("RfSubProductId")
                        .HasColumnType("nvarchar(450)");

                    b.Property<decimal>("LowLimit")
                        .HasColumnType("decimal(18,2)");

                    b.Property<decimal>("UpperLimit")
                        .HasColumnType("decimal(18,2)");

                    b.Property<decimal>("Fee")
                        .HasColumnType("decimal(18,2)");

                    b.Property<bool>("IsDeleted")
                        .HasColumnType("bit");

                    b.Property<Guid>("CreatedBy")
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTime>("CreatedDate")
                        .HasColumnType("datetime2");

                    b.Property<Guid?>("DeletedBy")
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTime?>("DeletedDate")
                        .HasColumnType("datetime2");

                    b.Property<Guid?>("ModifiedBy")
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTime?>("ModifiedDate")
                        .HasColumnType("datetime2");

                    b.HasKey("RfBranchCode", "RfSubProductId", "LowLimit", "UpperLimit", "Fee", "IsDeleted");

                    b.HasIndex("RfSubProductId");

                    b.ToTable("RfSubProductAdministrations");
                });

            modelBuilder.Entity("NewLMS.UMKM.Data.Entities.RfSubProductInsuranceTier", b =>
                {
                    b.Property<string>("RfSubProductId")
                        .HasColumnType("nvarchar(450)");

                    b.Property<int>("TierSeq")
                        .HasColumnType("int");

                    b.Property<Guid>("CreatedBy")
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTime>("CreatedDate")
                        .HasColumnType("datetime2");

                    b.Property<Guid?>("DeletedBy")
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTime?>("DeletedDate")
                        .HasColumnType("datetime2");

                    b.Property<bool>("IsDeleted")
                        .HasColumnType("bit");

                    b.Property<int?>("MAXAGE")
                        .HasColumnType("int");

                    b.Property<int?>("MINAGE")
                        .HasColumnType("int");

                    b.Property<Guid?>("ModifiedBy")
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTime?>("ModifiedDate")
                        .HasColumnType("datetime2");

                    b.HasKey("RfSubProductId", "TierSeq");

                    b.ToTable("RfSubProductInsuranceTiers");
                });

            modelBuilder.Entity("NewLMS.UMKM.Data.Entities.RfSubProductInterest", b =>
                {
                    b.Property<string>("TplCode")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<bool>("Active")
                        .HasColumnType("bit");

                    b.Property<string>("BaseRate")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int?>("BaseRateYear")
                        .HasColumnType("int");

                    b.Property<Guid?>("BatchId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<int?>("BatchIdSeq")
                        .HasColumnType("int");

                    b.Property<string>("BranchId")
                        .HasMaxLength(20)
                        .HasColumnType("nvarchar(20)");

                    b.Property<string>("CompanyId")
                        .HasMaxLength(10)
                        .HasColumnType("nvarchar(10)");

                    b.Property<string>("CreateBy")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime?>("CreateDate")
                        .HasColumnType("datetime2");

                    b.Property<DateTime?>("EndDate")
                        .HasColumnType("datetime2");

                    b.Property<string>("GolCode")
                        .HasMaxLength(10)
                        .HasColumnType("nvarchar(10)");

                    b.Property<string>("GracePeriodCode")
                        .HasMaxLength(10)
                        .HasColumnType("nvarchar(10)");

                    b.Property<double?>("InterestNew")
                        .HasColumnType("float");

                    b.Property<string>("InterestPromoType")
                        .HasMaxLength(20)
                        .HasColumnType("nvarchar(20)");

                    b.Property<double?>("InterestRepeat")
                        .HasColumnType("float");

                    b.Property<double?>("InterestTopUp")
                        .HasColumnType("float");

                    b.Property<string>("InterestType")
                        .HasColumnType("nvarchar(max)");

                    b.Property<bool>("IsDeleted")
                        .HasColumnType("bit");

                    b.Property<string>("JobCode")
                        .HasMaxLength(10)
                        .HasColumnType("nvarchar(10)");

                    b.Property<int?>("MaxAge")
                        .HasColumnType("int");

                    b.Property<int?>("MaxTenor")
                        .HasColumnType("int");

                    b.Property<int?>("MinAge")
                        .HasColumnType("int");

                    b.Property<int?>("MinTenor")
                        .HasColumnType("int");

                    b.Property<double?>("MusisiNew")
                        .HasColumnType("float");

                    b.Property<double?>("MusisiRepeat")
                        .HasColumnType("float");

                    b.Property<double?>("MusisiTopUp")
                        .HasColumnType("float");

                    b.Property<double?>("ParamSpread")
                        .HasColumnType("float");

                    b.Property<string>("PngktCode")
                        .HasMaxLength(10)
                        .HasColumnType("nvarchar(10)");

                    b.Property<string>("ProductId")
                        .HasMaxLength(10)
                        .HasColumnType("nvarchar(10)");

                    b.Property<DateTime?>("StartDate")
                        .HasColumnType("datetime2");

                    b.Property<string>("SubProductId")
                        .HasMaxLength(10)
                        .HasColumnType("nvarchar(10)");

                    b.Property<int?>("TplPrio")
                        .HasColumnType("int");

                    b.Property<string>("UpdateBy")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime?>("UpdateDate")
                        .HasColumnType("datetime2");

                    b.HasKey("TplCode");

                    b.ToTable("RfSubProductInterests");
                });

            modelBuilder.Entity("NewLMS.UMKM.Data.Entities.RfSubProductJobCode", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"), 1L, 1);

                    b.Property<bool>("Active")
                        .HasColumnType("bit");

                    b.Property<Guid>("CreatedBy")
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTime>("CreatedDate")
                        .HasColumnType("datetime2");

                    b.Property<Guid?>("DeletedBy")
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTime?>("DeletedDate")
                        .HasColumnType("datetime2");

                    b.Property<bool>("IsDeleted")
                        .HasColumnType("bit");

                    b.Property<int>("JobCode")
                        .HasColumnType("int");

                    b.Property<int>("MaxPlafondNonPayroll")
                        .HasColumnType("int");

                    b.Property<int>("MaxPlafondPayroll")
                        .HasColumnType("int");

                    b.Property<int>("MaxTenor")
                        .HasColumnType("int");

                    b.Property<int>("MaxTenorNonPayroll")
                        .HasColumnType("int");

                    b.Property<int>("MaxTenorPayroll")
                        .HasColumnType("int");

                    b.Property<int>("MinTenor")
                        .HasColumnType("int");

                    b.Property<Guid?>("ModifiedBy")
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTime?>("ModifiedDate")
                        .HasColumnType("datetime2");

                    b.Property<string>("ShowTpl")
                        .HasColumnType("nvarchar(10)");

                    b.Property<string>("SubProductId")
                        .HasColumnType("nvarchar(450)");

                    b.HasKey("Id");

                    b.HasIndex("JobCode");

                    b.HasIndex("ShowTpl");

                    b.HasIndex("SubProductId");

                    b.ToTable("RfSubProductJobCode");
                });

            modelBuilder.Entity("NewLMS.UMKM.Data.Entities.RfSubProductTermTemplate", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<Guid>("CreatedBy")
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTime>("CreatedDate")
                        .HasColumnType("datetime2");

                    b.Property<Guid?>("DeletedBy")
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTime?>("DeletedDate")
                        .HasColumnType("datetime2");

                    b.Property<bool>("IsDeleted")
                        .HasColumnType("bit");

                    b.Property<Guid?>("ModifiedBy")
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTime?>("ModifiedDate")
                        .HasColumnType("datetime2");

                    b.Property<string>("SubProuctId")
                        .HasColumnType("nvarchar(450)");

                    b.Property<Guid>("TermTemplateId")
                        .HasColumnType("uniqueidentifier");

                    b.HasKey("Id");

                    b.HasIndex("SubProuctId");

                    b.HasIndex("TermTemplateId");

                    b.ToTable("RfSubProductTermTemplates");
                });

            modelBuilder.Entity("NewLMS.UMKM.Data.Entities.RfSubProgram", b =>
                {
                    b.Property<string>("SubProgramId")
                        .HasMaxLength(15)
                        .HasColumnType("nvarchar(15)");

                    b.Property<Guid>("CreatedBy")
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTime>("CreatedDate")
                        .HasColumnType("datetime2");

                    b.Property<Guid?>("DeletedBy")
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTime?>("DeletedDate")
                        .HasColumnType("datetime2");

                    b.Property<string>("Description")
                        .HasColumnType("nvarchar(max)");

                    b.Property<bool>("IsDeleted")
                        .HasColumnType("bit");

                    b.Property<Guid?>("ModifiedBy")
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTime?>("ModifiedDate")
                        .HasColumnType("datetime2");

                    b.Property<string>("ProgramId")
                        .HasColumnType("nvarchar(15)");

                    b.HasKey("SubProgramId");

                    b.HasIndex("ProgramId");

                    b.ToTable("RfSubPrograms");
                });

            modelBuilder.Entity("NewLMS.UMKM.Data.Entities.RfTermCondition", b =>
                {
                    b.Property<string>("Code")
                        .HasMaxLength(10)
                        .HasColumnType("nvarchar(10)");

                    b.Property<string>("BTB")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("CoreCode")
                        .HasColumnType("nvarchar(max)");

                    b.Property<Guid>("CreatedBy")
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTime>("CreatedDate")
                        .HasColumnType("datetime2");

                    b.Property<Guid?>("DeletedBy")
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTime?>("DeletedDate")
                        .HasColumnType("datetime2");

                    b.Property<string>("Description")
                        .HasMaxLength(10)
                        .HasColumnType("nvarchar(10)");

                    b.Property<bool>("IsDeleted")
                        .HasColumnType("bit");

                    b.Property<Guid?>("ModifiedBy")
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTime?>("ModifiedDate")
                        .HasColumnType("datetime2");

                    b.Property<string>("TemplateCode")
                        .HasMaxLength(10)
                        .HasColumnType("nvarchar(10)");

                    b.HasKey("Code");

                    b.ToTable("RfTermConditions");
                });

            modelBuilder.Entity("NewLMS.UMKM.Data.Entities.RfTermTemplate", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<Guid>("CreatedBy")
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTime>("CreatedDate")
                        .HasColumnType("datetime2");

                    b.Property<Guid?>("DeletedBy")
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTime?>("DeletedDate")
                        .HasColumnType("datetime2");

                    b.Property<bool>("IsDeleted")
                        .HasColumnType("bit");

                    b.Property<Guid?>("ModifiedBy")
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTime?>("ModifiedDate")
                        .HasColumnType("datetime2");

                    b.Property<string>("TermConditionCode")
                        .HasMaxLength(10)
                        .HasColumnType("nvarchar(10)");

                    b.Property<string>("TermTemplateCode")
                        .HasMaxLength(10)
                        .HasColumnType("nvarchar(10)");

                    b.HasKey("Id");

                    b.HasIndex("TermConditionCode");

                    b.ToTable("RfTermTemplates");
                });

            modelBuilder.Entity("NewLMS.UMKM.Data.Entities.RfTest", b =>
                {
                    b.Property<Guid>("RfTestId")
                        .ValueGeneratedOnAdd()
                        .HasMaxLength(16)
                        .HasColumnType("uniqueidentifier");

                    b.Property<Guid>("CreatedBy")
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTime>("CreatedDate")
                        .HasColumnType("datetime2");

                    b.Property<Guid?>("DeletedBy")
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTime?>("DeletedDate")
                        .HasColumnType("datetime2");

                    b.Property<string>("Description")
                        .HasMaxLength(30)
                        .HasColumnType("nvarchar(30)");

                    b.Property<bool>("IsDeleted")
                        .HasColumnType("bit");

                    b.Property<Guid?>("ModifiedBy")
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTime?>("ModifiedDate")
                        .HasColumnType("datetime2");

                    b.HasKey("RfTestId");

                    b.ToTable("RfTests");
                });

            modelBuilder.Entity("NewLMS.UMKM.Data.Entities.RfZipCode", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"), 1L, 1);

                    b.Property<bool>("Active")
                        .HasColumnType("bit");

                    b.Property<Guid>("CreatedBy")
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTime>("CreatedDate")
                        .HasColumnType("datetime2");

                    b.Property<string>("Dati_II")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Dati_II_Code")
                        .HasColumnType("nvarchar(max)");

                    b.Property<Guid?>("DeletedBy")
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTime?>("DeletedDate")
                        .HasColumnType("datetime2");

                    b.Property<bool>("IsDeleted")
                        .HasColumnType("bit");

                    b.Property<string>("Kecamatan")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Kelurahan")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("KodeKabKota")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("KodeKabupaten")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("KodeKecamatan")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("KodeKelurahan")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("KodeProvinsi")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Kota")
                        .HasColumnType("nvarchar(max)");

                    b.Property<Guid?>("ModifiedBy")
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTime?>("ModifiedDate")
                        .HasColumnType("datetime2");

                    b.Property<string>("Negara")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Provinsi")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("SandiWilayahBI")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("Seq")
                        .HasColumnType("int");

                    b.Property<string>("ZipCode")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("ZipDesc")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.ToTable("RfZipCodes");
                });

            modelBuilder.Entity("NewLMS.UMKM.Data.Entities.Role", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("ConcurrencyStamp")
                        .IsConcurrencyToken()
                        .HasColumnType("nvarchar(max)");

                    b.Property<Guid?>("CreatedBy")
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTime>("CreatedDate")
                        .HasColumnType("datetime2");

                    b.Property<Guid?>("DeletedBy")
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTime?>("DeletedDate")
                        .HasColumnType("datetime2");

                    b.Property<string>("IdFungsi")
                        .HasColumnType("nvarchar(max)");

                    b.Property<bool>("IsDeleted")
                        .HasColumnType("bit");

                    b.Property<Guid>("ModifiedBy")
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTime>("ModifiedDate")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("datetime2")
                        .HasDefaultValueSql("getdate()");

                    b.Property<string>("Name")
                        .HasMaxLength(256)
                        .HasColumnType("nvarchar(256)");

                    b.Property<string>("NormalizedName")
                        .HasMaxLength(256)
                        .HasColumnType("nvarchar(256)");

                    b.HasKey("Id");

                    b.HasIndex("CreatedBy");

                    b.HasIndex("DeletedBy");

                    b.HasIndex("ModifiedBy");

                    b.HasIndex("NormalizedName")
                        .IsUnique()
                        .HasDatabaseName("RoleNameIndex")
                        .HasFilter("[NormalizedName] IS NOT NULL");

                    b.ToTable("Roles", (string)null);
                });

            modelBuilder.Entity("NewLMS.UMKM.Data.Entities.RoleClaim", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"), 1L, 1);

                    b.Property<Guid>("ActionId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("ClaimType")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("ClaimValue")
                        .HasColumnType("nvarchar(max)");

                    b.Property<Guid>("PageId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<Guid>("RoleId")
                        .HasColumnType("uniqueidentifier");

                    b.HasKey("Id");

                    b.HasIndex("ActionId");

                    b.HasIndex("PageId");

                    b.HasIndex("RoleId");

                    b.ToTable("RoleClaims", (string)null);
                });

            modelBuilder.Entity("NewLMS.UMKM.Data.Entities.SCJabatan", b =>
                {
                    b.Property<string>("JabCode")
                        .HasMaxLength(10)
                        .HasColumnType("nvarchar(10)");

                    b.Property<bool>("Active")
                        .HasColumnType("bit");

                    b.Property<string>("CoreCode")
                        .HasColumnType("nvarchar(max)");

                    b.Property<Guid>("CreatedBy")
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTime>("CreatedDate")
                        .HasColumnType("datetime2");

                    b.Property<Guid?>("DeletedBy")
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTime?>("DeletedDate")
                        .HasColumnType("datetime2");

                    b.Property<bool>("IsDeleted")
                        .HasColumnType("bit");

                    b.Property<string>("JabDesc")
                        .HasColumnType("nvarchar(max)");

                    b.Property<Guid?>("ModifiedBy")
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTime?>("ModifiedDate")
                        .HasColumnType("datetime2");

                    b.Property<string>("SKCode")
                        .HasColumnType("nvarchar(450)");

                    b.Property<string>("SKLimitCode")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("JabCode");

                    b.HasIndex("SKCode");

                    b.ToTable("SCJabatans");
                });

            modelBuilder.Entity("NewLMS.UMKM.Data.Entities.ScoringConsumer", b =>
                {
                    b.Property<decimal>("FinalResult")
                        .HasColumnType("decimal(18,2)");

                    b.Property<bool>("IsDeleted")
                        .HasColumnType("bit");

                    b.ToTable("ScoringConsumers");
                });

            modelBuilder.Entity("NewLMS.UMKM.Data.Entities.ScSkLimit", b =>
                {
                    b.Property<string>("SkCode")
                        .HasColumnType("nvarchar(450)");

                    b.Property<string>("ProductId")
                        .HasColumnType("nvarchar(450)");

                    b.Property<Guid>("CreatedBy")
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTime>("CreatedDate")
                        .HasColumnType("datetime2");

                    b.Property<Guid?>("DeletedBy")
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTime?>("DeletedDate")
                        .HasColumnType("datetime2");

                    b.Property<bool?>("Deviation")
                        .HasColumnType("bit");

                    b.Property<bool>("IsDeleted")
                        .HasColumnType("bit");

                    b.Property<float?>("Limit")
                        .HasColumnType("real");

                    b.Property<float?>("LimitRpc")
                        .HasColumnType("real");

                    b.Property<Guid?>("ModifiedBy")
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTime?>("ModifiedDate")
                        .HasColumnType("datetime2");

                    b.HasKey("SkCode", "ProductId");

                    b.HasIndex("ProductId");

                    b.ToTable("SCSKLIMITs");
                });

            modelBuilder.Entity("NewLMS.UMKM.Data.Entities.ScSuratKeputusan", b =>
                {
                    b.Property<string>("SkCode")
                        .HasColumnType("nvarchar(450)");

                    b.Property<Guid>("CreatedBy")
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTime>("CreatedDate")
                        .HasColumnType("datetime2");

                    b.Property<Guid?>("DeletedBy")
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTime?>("DeletedDate")
                        .HasColumnType("datetime2");

                    b.Property<bool>("IsDeleted")
                        .HasColumnType("bit");

                    b.Property<float?>("Limit")
                        .HasColumnType("real");

                    b.Property<Guid?>("ModifiedBy")
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTime?>("ModifiedDate")
                        .HasColumnType("datetime2");

                    b.Property<DateTime?>("SKExpDate")
                        .HasColumnType("datetime2");

                    b.Property<string>("SKNo")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("SkBy")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("SkClausal")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime?>("SkDate")
                        .HasColumnType("datetime2");

                    b.Property<string>("SkDesc")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("SkHal")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("SkType")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("SkCode");

                    b.ToTable("ScSuratKeputusans");
                });

            modelBuilder.Entity("NewLMS.UMKM.Data.Entities.SCUser", b =>
                {
                    b.Property<string>("UserId")
                        .HasColumnType("nvarchar(450)");

                    b.Property<bool?>("Active")
                        .HasColumnType("bit");

                    b.Property<bool?>("AdFlag")
                        .HasColumnType("bit");

                    b.Property<Guid>("CreatedBy")
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTime>("CreatedDate")
                        .HasColumnType("datetime2");

                    b.Property<Guid?>("DeletedBy")
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTime?>("DeletedDate")
                        .HasColumnType("datetime2");

                    b.Property<bool>("IsDeleted")
                        .HasColumnType("bit");

                    b.Property<DateTime?>("LastActivity")
                        .HasColumnType("datetime2");

                    b.Property<DateTime?>("LastLogin")
                        .HasColumnType("datetime2");

                    b.Property<bool?>("LoginFlag")
                        .HasColumnType("bit");

                    b.Property<Guid?>("ModifiedBy")
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTime?>("ModifiedDate")
                        .HasColumnType("datetime2");

                    b.Property<int?>("PWDFalse")
                        .HasColumnType("int");

                    b.Property<DateTime?>("PWDLastChange")
                        .HasColumnType("datetime2");

                    b.Property<DateTime?>("PWDLastFalse")
                        .HasColumnType("datetime2");

                    b.Property<bool?>("PWDMustChange")
                        .HasColumnType("bit");

                    b.Property<string>("PerihalSK")
                        .HasColumnType("nvarchar(max)");

                    b.Property<bool?>("ResetPWD")
                        .HasColumnType("bit");

                    b.Property<bool?>("RevokeFlag")
                        .HasColumnType("bit");

                    b.Property<DateTime?>("SKDate")
                        .HasColumnType("datetime2");

                    b.Property<string>("SKNo")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("UserAddress")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("UserEmail")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("UserNIP")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("UserName")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("UserPWD")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("UserPhone")
                        .HasMaxLength(13)
                        .HasColumnType("nvarchar(13)");

                    b.HasKey("UserId");

                    b.ToTable("SCUsers");
                });

            modelBuilder.Entity("NewLMS.UMKM.Data.Entities.ScUserDetail", b =>
                {
                    b.Property<string>("UserId")
                        .HasColumnType("nvarchar(450)");

                    b.Property<string>("BranchId")
                        .HasColumnType("nvarchar(max)");

                    b.Property<Guid>("CreatedBy")
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTime>("CreatedDate")
                        .HasColumnType("datetime2");

                    b.Property<Guid?>("DeletedBy")
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTime?>("DeletedDate")
                        .HasColumnType("datetime2");

                    b.Property<DateTime?>("EndDate")
                        .HasColumnType("datetime2");

                    b.Property<bool>("IsDeleted")
                        .HasColumnType("bit");

                    b.Property<string>("JabCode")
                        .HasColumnType("nvarchar(10)");

                    b.Property<double?>("LimitUser")
                        .HasColumnType("Float");

                    b.Property<Guid?>("ModifiedBy")
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTime?>("ModifiedDate")
                        .HasColumnType("datetime2");

                    b.Property<string>("SKMutasiCode")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("SkCode")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("SkMutasiHal")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime?>("SkMutasiTgl")
                        .HasColumnType("datetime2");

                    b.Property<DateTime?>("StartDate")
                        .HasColumnType("datetime2");

                    b.HasKey("UserId");

                    b.HasIndex("JabCode");

                    b.ToTable("ScUserDetails");
                });

            modelBuilder.Entity("NewLMS.UMKM.Data.Entities.SCUserGroup", b =>
                {
                    b.Property<Guid>("SCUserGroupId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("AccessId")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("AccessType")
                        .HasMaxLength(2)
                        .HasColumnType("nvarchar(2)");

                    b.Property<Guid>("CreatedBy")
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTime>("CreatedDate")
                        .HasColumnType("datetime2");

                    b.Property<Guid?>("DeletedBy")
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTime?>("DeletedDate")
                        .HasColumnType("datetime2");

                    b.Property<string>("GroupId")
                        .HasMaxLength(15)
                        .HasColumnType("nvarchar(15)");

                    b.Property<bool>("IsDeleted")
                        .HasColumnType("bit");

                    b.Property<Guid?>("ModifiedBy")
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTime?>("ModifiedDate")
                        .HasColumnType("datetime2");

                    b.Property<int>("SystemId")
                        .HasColumnType("int");

                    b.Property<string>("Upliner")
                        .HasColumnType("nvarchar(450)");

                    b.Property<string>("UserId")
                        .HasColumnType("nvarchar(450)");

                    b.HasKey("SCUserGroupId");

                    b.HasIndex("Upliner");

                    b.HasIndex("UserId");

                    b.ToTable("SCUserGroups");
                });

            modelBuilder.Entity("NewLMS.UMKM.Data.Entities.SkkSp3k", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("AccountOfficerCode")
                        .HasColumnType("nvarchar(max)");

                    b.Property<Guid>("CreatedBy")
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTime>("CreatedDate")
                        .HasColumnType("datetime2");

                    b.Property<Guid?>("DeletedBy")
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTime?>("DeletedDate")
                        .HasColumnType("datetime2");

                    b.Property<bool?>("IsApproved")
                        .HasColumnType("bit");

                    b.Property<bool>("IsDeleted")
                        .HasColumnType("bit");

                    b.Property<Guid?>("LoanApplicationId")
                        .IsRequired()
                        .HasColumnType("uniqueidentifier");

                    b.Property<Guid?>("ModifiedBy")
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTime?>("ModifiedDate")
                        .HasColumnType("datetime2");

                    b.Property<string>("NoSKK")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Position1")
                        .HasMaxLength(10)
                        .HasColumnType("nvarchar(10)");

                    b.Property<string>("Position2")
                        .HasMaxLength(10)
                        .HasColumnType("nvarchar(10)");

                    b.Property<string>("Remarks")
                        .HasColumnType("text");

                    b.Property<DateTime?>("SkkSp3kDate")
                        .HasColumnType("datetime2");

                    b.Property<string>("Stakeholders1")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Stakeholders2")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Type")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.HasIndex("LoanApplicationId")
                        .IsUnique();

                    b.HasIndex("Position1");

                    b.HasIndex("Position2");

                    b.ToTable("SkkSp3ks");
                });

            modelBuilder.Entity("NewLMS.UMKM.Data.Entities.SLIKRequest", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<bool>("AdminVerified")
                        .HasColumnType("bit");

                    b.Property<string>("BranchId")
                        .HasColumnType("nvarchar(4)");

                    b.Property<Guid>("CreatedBy")
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTime>("CreatedDate")
                        .HasColumnType("datetime2");

                    b.Property<Guid?>("DeletedBy")
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTime?>("DeletedDate")
                        .HasColumnType("datetime2");

                    b.Property<DateTime>("InquiryDate")
                        .HasColumnType("datetime2");

                    b.Property<bool>("IsDeleted")
                        .HasColumnType("bit");

                    b.Property<Guid>("LoanApplicationId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<Guid?>("ModifiedBy")
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTime?>("ModifiedDate")
                        .HasColumnType("datetime2");

                    b.Property<DateTime>("ProcessDate")
                        .HasColumnType("datetime2");

                    b.Property<byte>("ProcessStatus")
                        .HasMaxLength(4)
                        .HasColumnType("tinyint");

                    b.Property<string>("Remarks")
                        .HasColumnType("text");

                    b.Property<int>("TotalCreditCard")
                        .HasColumnType("int");

                    b.Property<int>("TotalLimitSlik")
                        .HasColumnType("int");

                    b.Property<int>("TotalOtherUsers")
                        .HasColumnType("int");

                    b.Property<int>("TotalWorkingCapital")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("BranchId");

                    b.HasIndex("LoanApplicationId")
                        .IsUnique();

                    b.ToTable("SLIKRequests");
                });

            modelBuilder.Entity("NewLMS.UMKM.Data.Entities.SLIKRequestDebtor", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("ApplicationStatus")
                        .HasColumnType("nvarchar(max)");

                    b.Property<bool?>("ByKesamaan")
                        .HasColumnType("bit");

                    b.Property<bool?>("ByNoIdentitas")
                        .HasColumnType("bit");

                    b.Property<Guid>("CreatedBy")
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTime>("CreatedDate")
                        .HasColumnType("datetime2");

                    b.Property<DateTime>("DateOfBirth")
                        .HasColumnType("datetime2");

                    b.Property<Guid?>("DeletedBy")
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTime?>("DeletedDate")
                        .HasColumnType("datetime2");

                    b.Property<string>("Fullname")
                        .HasColumnType("nvarchar(max)");

                    b.Property<bool>("IsDeleted")
                        .HasColumnType("bit");

                    b.Property<string>("KodeRefPengguna")
                        .HasColumnType("nvarchar(max)");

                    b.Property<Guid?>("ModifiedBy")
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTime?>("ModifiedDate")
                        .HasColumnType("datetime2");

                    b.Property<string>("NPWP")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("NoIdentity")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("PlaceOfBirth")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime>("RequestDate")
                        .HasColumnType("datetime2");

                    b.Property<string>("SIDStatus")
                        .HasColumnType("nvarchar(max)");

                    b.Property<Guid?>("SLIKDocumentUrl")
                        .HasColumnType("uniqueidentifier");

                    b.Property<Guid>("SLIKRequestId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("SLIKResult")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("TujuanPermintaan")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.HasIndex("SLIKDocumentUrl");

                    b.HasIndex("SLIKRequestId");

                    b.ToTable("SLIKRequestDebtors");
                });

            modelBuilder.Entity("NewLMS.UMKM.Data.Entities.SlikUser", b =>
                {
                    b.Property<Guid>("CreatedBy")
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTime>("CreatedDate")
                        .HasColumnType("datetime2");

                    b.Property<Guid?>("DeletedBy")
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTime?>("DeletedDate")
                        .HasColumnType("datetime2");

                    b.Property<bool>("IsDeleted")
                        .HasColumnType("bit");

                    b.Property<string>("KC")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("KCName")
                        .HasColumnType("nvarchar(max)");

                    b.Property<Guid?>("ModifiedBy")
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTime?>("ModifiedDate")
                        .HasColumnType("datetime2");

                    b.Property<string>("UserId")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("UserSlik")
                        .HasColumnType("nvarchar(max)");

                    b.ToTable("SlikUsers");
                });

            modelBuilder.Entity("NewLMS.UMKM.Data.Entities.SpGetInterest", b =>
                {
                    b.Property<double?>("BaseInterest")
                        .HasColumnType("float");

                    b.Property<double?>("BaseInterestGp")
                        .HasColumnType("float");

                    b.Property<int?>("BaseMinTenor")
                        .HasColumnType("int");

                    b.Property<int?>("BaseMinTenorGp")
                        .HasColumnType("int");

                    b.Property<string>("BaseRate")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("BaseRateCode")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("BaseRateCodeGp")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("BaseRateGp")
                        .HasColumnType("nvarchar(max)");

                    b.Property<double?>("Interest")
                        .HasColumnType("float");

                    b.Property<double?>("InterestGp")
                        .HasColumnType("float");

                    b.Property<double?>("ParamSpread")
                        .HasColumnType("float");

                    b.Property<double?>("ParamSpreadGp")
                        .HasColumnType("float");

                    b.Property<int?>("TenorGp")
                        .HasColumnType("int");

                    b.ToTable("SpGetInterest");
                });

            modelBuilder.Entity("NewLMS.UMKM.Data.Entities.SpGetInterestSimulation", b =>
                {
                    b.Property<double?>("BaseInterest")
                        .HasColumnType("float");

                    b.Property<double?>("BaseInterestGp")
                        .HasColumnType("float");

                    b.Property<int?>("BaseMinTenor")
                        .HasColumnType("int");

                    b.Property<int?>("BaseMinTenorGp")
                        .HasColumnType("int");

                    b.Property<string>("BaseRate")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("BaseRateCode")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("BaseRateCodeGp")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("BaseRateGp")
                        .HasColumnType("nvarchar(max)");

                    b.Property<double?>("Interest")
                        .HasColumnType("float");

                    b.Property<double?>("InterestGp")
                        .HasColumnType("float");

                    b.Property<double?>("ParamSpread")
                        .HasColumnType("float");

                    b.Property<double?>("ParamSpreadGp")
                        .HasColumnType("float");

                    b.Property<int?>("TenorGp")
                        .HasColumnType("int");

                    b.ToTable("SpGetInterestSimulation");
                });

            modelBuilder.Entity("NewLMS.UMKM.Data.Entities.SpGetProvision", b =>
                {
                    b.Property<double?>("DEF_PROVPCTFEE")
                        .HasColumnType("float");

                    b.Property<bool>("IsDeleted")
                        .HasColumnType("bit");

                    b.Property<double?>("MAX_PROVPCTFEE")
                        .HasColumnType("float");

                    b.Property<double?>("OLD_DEFPROVPCT")
                        .HasColumnType("float");

                    b.Property<double?>("OLD_MAXPROVPCT")
                        .HasColumnType("float");

                    b.Property<double?>("OLD_PROVFEE")
                        .HasColumnType("float");

                    b.Property<double?>("OLD_PROVPCT")
                        .HasColumnType("float");

                    b.ToTable("SpGetProvision");
                });

            modelBuilder.Entity("NewLMS.UMKM.Data.Entities.SpGetSchemaFasilitas", b =>
                {
                    b.Property<string>("GradeCode")
                        .HasColumnType("nvarchar(max)");

                    b.Property<bool?>("IsPensiun")
                        .HasColumnType("bit");

                    b.Property<double?>("MaxPlafon")
                        .HasColumnType("float");

                    b.Property<int?>("MaxTenor")
                        .HasColumnType("int");

                    b.Property<int?>("MaxTenorBTB")
                        .HasColumnType("int");

                    b.Property<int?>("MinTenor")
                        .HasColumnType("int");

                    b.Property<int?>("MinTenorBTB")
                        .HasColumnType("int");

                    b.Property<double?>("Rpc")
                        .HasColumnType("float");

                    b.Property<double?>("RpcGaji")
                        .HasColumnType("float");

                    b.Property<double?>("RpcTunjangan")
                        .HasColumnType("float");

                    b.Property<bool?>("UseKontigensi")
                        .HasColumnType("bit");

                    b.Property<bool?>("WithGrade")
                        .HasColumnType("bit");

                    b.Property<bool?>("WithTunjangan")
                        .HasColumnType("bit");

                    b.ToTable("SpGetSchemaFasilitas");
                });

            modelBuilder.Entity("NewLMS.UMKM.Data.Entities.SpGetSchemaFasilitasSimulation", b =>
                {
                    b.Property<string>("GradeCode")
                        .HasColumnType("nvarchar(max)");

                    b.Property<bool?>("IsPensiun")
                        .HasColumnType("bit");

                    b.Property<double?>("MaxPlafon")
                        .HasColumnType("float");

                    b.Property<int?>("MaxTenor")
                        .HasColumnType("int");

                    b.Property<int?>("MaxTenorBTB")
                        .HasColumnType("int");

                    b.Property<int?>("MinTenor")
                        .HasColumnType("int");

                    b.Property<int?>("MinTenorBTB")
                        .HasColumnType("int");

                    b.Property<double?>("Rpc")
                        .HasColumnType("float");

                    b.Property<double?>("RpcGaji")
                        .HasColumnType("float");

                    b.Property<double?>("RpcTunjangan")
                        .HasColumnType("float");

                    b.Property<bool?>("UseKontigensi")
                        .HasColumnType("bit");

                    b.Property<bool?>("WithGrade")
                        .HasColumnType("bit");

                    b.Property<bool?>("WithTunjangan")
                        .HasColumnType("bit");

                    b.ToTable("SpGetSchemaFasilitasSimulation");
                });

            modelBuilder.Entity("NewLMS.UMKM.Data.Entities.SubmittedFacility", b =>
                {
                    b.Property<Guid>("SubmittedFacilityId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<int>("AdministrationFee")
                        .HasColumnType("int");

                    b.Property<string>("BindingMethod")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("BlockParam")
                        .HasColumnType("int");

                    b.Property<Guid?>("ClosedExistingFacilityId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<Guid>("CreatedBy")
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTime>("CreatedDate")
                        .HasColumnType("datetime2");

                    b.Property<string>("CreditPurpose")
                        .HasColumnType("nvarchar(max)");

                    b.Property<Guid?>("DeletedBy")
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTime?>("DeletedDate")
                        .HasColumnType("datetime2");

                    b.Property<string>("FacilityPurpose")
                        .HasColumnType("nvarchar(max)");

                    b.Property<long?>("FinalPlafond")
                        .HasColumnType("bigint");

                    b.Property<int?>("GPInstallment")
                        .HasColumnType("int");

                    b.Property<float?>("GPInstallmentAfter")
                        .HasColumnType("real");

                    b.Property<float?>("GPInterest")
                        .HasColumnType("real");

                    b.Property<float?>("GPInterestSpread")
                        .HasColumnType("real");

                    b.Property<float?>("GPInterestTotal")
                        .HasColumnType("real");

                    b.Property<int?>("GPLoanTerm")
                        .HasColumnType("int");

                    b.Property<float?>("GPRemainingInterest")
                        .HasColumnType("real");

                    b.Property<string>("GPScheme")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int?>("InsurancePremiDiscount")
                        .HasColumnType("int");

                    b.Property<float>("Interest")
                        .HasColumnType("real");

                    b.Property<float>("InterestSpread")
                        .HasColumnType("real");

                    b.Property<float>("InterestTotal")
                        .HasColumnType("real");

                    b.Property<string>("InterestType")
                        .HasColumnType("nvarchar(max)");

                    b.Property<bool>("IsDeleted")
                        .HasColumnType("bit");

                    b.Property<Guid>("LoanApplicationId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<int>("LoanTerm")
                        .HasColumnType("int");

                    b.Property<int?>("MGTotalInterest")
                        .HasColumnType("int");

                    b.Property<float?>("MaxRpc")
                        .HasColumnType("real");

                    b.Property<int?>("MaxTenor")
                        .HasColumnType("int");

                    b.Property<long>("MaximumPlafond")
                        .HasColumnType("bigint");

                    b.Property<Guid?>("ModifiedBy")
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTime?>("ModifiedDate")
                        .HasColumnType("datetime2");

                    b.Property<int>("MonthlyInstallment")
                        .HasColumnType("int");

                    b.Property<int>("NotaryFee")
                        .HasColumnType("int");

                    b.Property<int?>("OtherBankObligation")
                        .HasColumnType("int");

                    b.Property<string>("PaymentPlan")
                        .HasColumnType("nvarchar(max)");

                    b.Property<float>("RPC")
                        .HasColumnType("real");

                    b.Property<int?>("RemainingInBankBjb")
                        .HasColumnType("int");

                    b.Property<Guid>("StageId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("SubmissionType")
                        .HasColumnType("nvarchar(max)");

                    b.Property<long>("SubmittedPlafond")
                        .HasColumnType("bigint");

                    b.Property<long>("TargetPlafond")
                        .HasColumnType("bigint");

                    b.Property<float?>("UpperLimitPlafond")
                        .HasColumnType("real");

                    b.HasKey("SubmittedFacilityId");

                    b.HasIndex("ClosedExistingFacilityId");

                    b.HasIndex("LoanApplicationId");

                    b.HasIndex("StageId");

                    b.ToTable("SubmittedFacilities");
                });

            modelBuilder.Entity("NewLMS.UMKM.Data.Entities.SubmittedFacilityLog", b =>
                {
                    b.Property<Guid>("SubmittedFacilityLogId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<int>("AdministrationFee")
                        .HasColumnType("int");

                    b.Property<string>("BindingMethod")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("BlockParam")
                        .HasColumnType("int");

                    b.Property<Guid>("CreatedBy")
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTime>("CreatedDate")
                        .HasColumnType("datetime2");

                    b.Property<string>("CreditPurpose")
                        .HasColumnType("nvarchar(max)");

                    b.Property<Guid?>("DeletedBy")
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTime?>("DeletedDate")
                        .HasColumnType("datetime2");

                    b.Property<string>("FacilityPurpose")
                        .HasColumnType("nvarchar(max)");

                    b.Property<long?>("FinalPlafond")
                        .HasColumnType("bigint");

                    b.Property<int?>("GPInstallment")
                        .HasColumnType("int");

                    b.Property<float?>("GPInstallmentAfter")
                        .HasColumnType("real");

                    b.Property<float?>("GPInterest")
                        .HasColumnType("real");

                    b.Property<float?>("GPInterestSpread")
                        .HasColumnType("real");

                    b.Property<float?>("GPInterestTotal")
                        .HasColumnType("real");

                    b.Property<int?>("GPLoanTerm")
                        .HasColumnType("int");

                    b.Property<float?>("GPRemainingInterest")
                        .HasColumnType("real");

                    b.Property<float>("Interest")
                        .HasColumnType("real");

                    b.Property<float>("InterestSpread")
                        .HasColumnType("real");

                    b.Property<float>("InterestTotal")
                        .HasColumnType("real");

                    b.Property<string>("InterestType")
                        .HasColumnType("nvarchar(max)");

                    b.Property<bool>("IsDeleted")
                        .HasColumnType("bit");

                    b.Property<Guid>("LoanApplicationId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<int>("LoanTerm")
                        .HasColumnType("int");

                    b.Property<long>("MaximumPlafond")
                        .HasColumnType("bigint");

                    b.Property<Guid?>("ModifiedBy")
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTime?>("ModifiedDate")
                        .HasColumnType("datetime2");

                    b.Property<int>("MonthlyInstallment")
                        .HasColumnType("int");

                    b.Property<int>("NotaryFee")
                        .HasColumnType("int");

                    b.Property<int?>("OtherBankObligation")
                        .HasColumnType("int");

                    b.Property<string>("PaymentPlan")
                        .HasColumnType("nvarchar(max)");

                    b.Property<float>("RPC")
                        .HasColumnType("real");

                    b.Property<int?>("RemainingInBankBjb")
                        .HasColumnType("int");

                    b.Property<Guid>("StageMark")
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("SubmissionType")
                        .HasColumnType("nvarchar(max)");

                    b.Property<long>("SubmittedPlafond")
                        .HasColumnType("bigint");

                    b.Property<long?>("TargetPlafond")
                        .HasColumnType("bigint");

                    b.HasKey("SubmittedFacilityLogId");

                    b.HasIndex("LoanApplicationId");

                    b.HasIndex("StageMark");

                    b.ToTable("SubmittedFacilitiesLogs");
                });

            modelBuilder.Entity("NewLMS.UMKM.Data.Entities.Table", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<Guid>("CreatedBy")
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTime>("CreatedDate")
                        .HasColumnType("datetime2");

                    b.Property<Guid?>("DeletedBy")
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTime?>("DeletedDate")
                        .HasColumnType("datetime2");

                    b.Property<string>("Fields")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Href")
                        .HasColumnType("nvarchar(max)");

                    b.Property<bool>("IsDeleted")
                        .HasColumnType("bit");

                    b.Property<Guid?>("ModifiedBy")
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTime?>("ModifiedDate")
                        .HasColumnType("datetime2");

                    b.Property<string>("TableName")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.ToTable("Tables");
                });

            modelBuilder.Entity("NewLMS.UMKM.Data.Entities.TestEntity", b =>
                {
                    b.Property<Guid>("TestId")
                        .ValueGeneratedOnAdd()
                        .HasMaxLength(16)
                        .HasColumnType("uniqueidentifier");

                    b.Property<Guid>("CreatedBy")
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTime>("CreatedDate")
                        .HasColumnType("datetime2");

                    b.Property<Guid?>("DeletedBy")
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTime?>("DeletedDate")
                        .HasColumnType("datetime2");

                    b.Property<string>("Description")
                        .HasMaxLength(30)
                        .HasColumnType("nvarchar(30)");

                    b.Property<bool>("IsDeleted")
                        .HasColumnType("bit");

                    b.Property<Guid?>("ModifiedBy")
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTime?>("ModifiedDate")
                        .HasColumnType("datetime2");

                    b.Property<Guid>("RfTestId")
                        .HasColumnType("uniqueidentifier");

                    b.HasKey("TestId");

                    b.HasIndex("RfTestId");

                    b.ToTable("TestEntities");
                });

            modelBuilder.Entity("NewLMS.UMKM.Data.Entities.ThridParty", b =>
                {
                    b.Property<string>("Name")
                        .HasMaxLength(128)
                        .HasColumnType("nvarchar(128)");

                    b.Property<string>("ClientId")
                        .IsRequired()
                        .HasMaxLength(128)
                        .HasColumnType("nvarchar(128)");

                    b.Property<string>("ClientSecret")
                        .IsRequired()
                        .HasMaxLength(128)
                        .HasColumnType("nvarchar(128)");

                    b.Property<string>("CreatedBy")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime>("CreatedDate")
                        .HasColumnType("datetime2");

                    b.Property<string>("DeletedBy")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime?>("DeletedDate")
                        .HasColumnType("datetime2");

                    b.Property<bool>("IsDeleted")
                        .HasColumnType("bit");

                    b.Property<string>("ModifiedBy")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime?>("ModifiedDate")
                        .HasColumnType("datetime2");

                    b.Property<string>("UrlCallback")
                        .IsRequired()
                        .HasMaxLength(450)
                        .HasColumnType("nvarchar(450)");

                    b.HasKey("Name");

                    b.ToTable("ThridParties");
                });

            modelBuilder.Entity("NewLMS.UMKM.Data.Entities.ThridPartyDisbursement", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("AccountOfficer")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("CreatedBy")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime>("CreatedDate")
                        .HasColumnType("datetime2");

                    b.Property<string>("DeletedBy")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime?>("DeletedDate")
                        .HasColumnType("datetime2");

                    b.Property<bool>("IsDeleted")
                        .HasColumnType("bit");

                    b.Property<bool>("IsHasDisbursement")
                        .HasColumnType("bit");

                    b.Property<string>("ModifiedBy")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime?>("ModifiedDate")
                        .HasColumnType("datetime2");

                    b.Property<string>("Request")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime>("RequestDate")
                        .HasColumnType("datetime2");

                    b.Property<string>("Response")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime?>("ResponseDate")
                        .HasColumnType("datetime2");

                    b.Property<string>("Source")
                        .HasColumnType("nvarchar(128)");

                    b.HasKey("Id");

                    b.HasIndex("Source");

                    b.ToTable("ThridPartyDisbursement");
                });

            modelBuilder.Entity("NewLMS.UMKM.Data.Entities.ThridPartyDisbursementDocument", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("CreatedBy")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime>("CreatedDate")
                        .HasColumnType("datetime2");

                    b.Property<string>("DeletedBy")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime?>("DeletedDate")
                        .HasColumnType("datetime2");

                    b.Property<Guid>("DisbursementId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<short>("DocumentType")
                        .HasColumnType("smallint");

                    b.Property<string>("FilePath")
                        .HasMaxLength(450)
                        .HasColumnType("nvarchar(450)");

                    b.Property<string>("FileSize")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("FileType")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Filename")
                        .HasColumnType("nvarchar(max)");

                    b.Property<bool>("IsDeleted")
                        .HasColumnType("bit");

                    b.Property<string>("ModifiedBy")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime?>("ModifiedDate")
                        .HasColumnType("datetime2");

                    b.HasKey("Id");

                    b.HasIndex("DisbursementId");

                    b.ToTable("ThridPartyDisbursementDocument");
                });

            modelBuilder.Entity("NewLMS.UMKM.Data.Entities.ThridPartyDisbursementMonitoring", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("CreatedBy")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime>("CreatedDate")
                        .HasColumnType("datetime2");

                    b.Property<string>("DeletedBy")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime?>("DeletedDate")
                        .HasColumnType("datetime2");

                    b.Property<bool>("IsDeleted")
                        .HasColumnType("bit");

                    b.Property<string>("ModifiedBy")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime?>("ModifiedDate")
                        .HasColumnType("datetime2");

                    b.Property<string>("Request")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime>("RequestDate")
                        .HasColumnType("datetime2");

                    b.Property<string>("Response")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime?>("ResponseDate")
                        .HasColumnType("datetime2");

                    b.Property<string>("Service")
                        .HasMaxLength(10)
                        .HasColumnType("nvarchar(10)");

                    b.Property<string>("Status")
                        .HasMaxLength(5)
                        .HasColumnType("nvarchar(5)");

                    b.Property<Guid>("ThridPartyDisbursementId")
                        .HasColumnType("uniqueidentifier");

                    b.HasKey("Id");

                    b.HasIndex("ThridPartyDisbursementId");

                    b.ToTable("ThridPartyDisbursementMonitoring");
                });

            modelBuilder.Entity("NewLMS.UMKM.Data.Entities.User", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<int>("AccessFailedCount")
                        .HasColumnType("int");

                    b.Property<string>("AccessToken")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("AccessTokenExpiration")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Address")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("ConcurrencyStamp")
                        .IsConcurrencyToken()
                        .HasColumnType("nvarchar(max)");

                    b.Property<Guid?>("CreatedBy")
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTime>("CreatedDate")
                        .HasColumnType("datetime2");

                    b.Property<Guid?>("DeletedBy")
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTime?>("DeletedDate")
                        .HasColumnType("datetime2");

                    b.Property<string>("Email")
                        .HasMaxLength(256)
                        .HasColumnType("nvarchar(256)");

                    b.Property<bool>("EmailConfirmed")
                        .HasColumnType("bit");

                    b.Property<string>("FirstName")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("FungsiTambahan")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("IdFungsi")
                        .HasColumnType("nvarchar(max)");

                    b.Property<bool>("IsActive")
                        .HasColumnType("bit");

                    b.Property<bool>("IsDeleted")
                        .HasColumnType("bit");

                    b.Property<bool>("IsUseUim")
                        .HasColumnType("bit");

                    b.Property<string>("Jabatan")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("KodeCabang")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("KodeGrade")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("KodeInduk")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("KodeKanwil")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("KodePenempatan")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("LastName")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("LimitDebet")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("LimitKredit")
                        .HasColumnType("nvarchar(max)");

                    b.Property<bool>("LockoutEnabled")
                        .HasColumnType("bit");

                    b.Property<DateTimeOffset?>("LockoutEnd")
                        .HasColumnType("datetimeoffset");

                    b.Property<Guid?>("ModifiedBy")
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTime>("ModifiedDate")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("datetime2")
                        .HasDefaultValueSql("getdate()");

                    b.Property<string>("Nama")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("NamaCabang")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("NamaInduk")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("NamaKanwil")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Nip")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("NormalizedEmail")
                        .HasMaxLength(256)
                        .HasColumnType("nvarchar(256)");

                    b.Property<string>("NormalizedUserName")
                        .HasMaxLength(256)
                        .HasColumnType("nvarchar(256)");

                    b.Property<string>("PasswordHash")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("PhoneNumber")
                        .HasColumnType("nvarchar(max)");

                    b.Property<bool>("PhoneNumberConfirmed")
                        .HasColumnType("bit");

                    b.Property<string>("PosisiPenempatan")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("ProfilePhoto")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Provider")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("RefreshToken")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("SecurityStamp")
                        .HasColumnType("nvarchar(max)");

                    b.Property<bool>("TwoFactorEnabled")
                        .HasColumnType("bit");

                    b.Property<string>("UimId")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("UserId")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("UserName")
                        .HasMaxLength(256)
                        .HasColumnType("nvarchar(256)");

                    b.HasKey("Id");

                    b.HasIndex("NormalizedEmail")
                        .HasDatabaseName("EmailIndex");

                    b.HasIndex("NormalizedUserName")
                        .IsUnique()
                        .HasDatabaseName("UserNameIndex")
                        .HasFilter("[NormalizedUserName] IS NOT NULL");

                    b.ToTable("Users", (string)null);
                });

            modelBuilder.Entity("NewLMS.UMKM.Data.Entities.UserAllowedIP", b =>
                {
                    b.Property<Guid>("UserId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("IPAddress")
                        .HasColumnType("nvarchar(450)");

                    b.HasKey("UserId", "IPAddress");

                    b.ToTable("UserAllowedIPs");
                });

            modelBuilder.Entity("NewLMS.UMKM.Data.Entities.UserClaim", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"), 1L, 1);

                    b.Property<Guid>("ActionId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("ClaimType")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("ClaimValue")
                        .HasColumnType("nvarchar(max)");

                    b.Property<Guid>("PageId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<Guid>("UserId")
                        .HasColumnType("uniqueidentifier");

                    b.HasKey("Id");

                    b.HasIndex("ActionId");

                    b.HasIndex("PageId");

                    b.HasIndex("UserId");

                    b.ToTable("UserClaims", (string)null);
                });

            modelBuilder.Entity("NewLMS.UMKM.Data.Entities.UserDevice", b =>
                {
                    b.Property<Guid>("UserDeviceId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<Guid>("CreatedBy")
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTime>("CreatedDate")
                        .HasColumnType("datetime2");

                    b.Property<Guid?>("DeletedBy")
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTime?>("DeletedDate")
                        .HasColumnType("datetime2");

                    b.Property<string>("DeviceId")
                        .HasColumnType("nvarchar(max)");

                    b.Property<bool>("IsDeleted")
                        .HasColumnType("bit");

                    b.Property<decimal>("Langitude")
                        .HasPrecision(9, 6)
                        .HasColumnType("decimal(9,6)");

                    b.Property<decimal>("Latitude")
                        .HasPrecision(8, 6)
                        .HasColumnType("decimal(8,6)");

                    b.Property<Guid?>("ModifiedBy")
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTime?>("ModifiedDate")
                        .HasColumnType("datetime2");

                    b.Property<Guid>("UserId")
                        .HasColumnType("uniqueidentifier");

                    b.HasKey("UserDeviceId");

                    b.HasIndex("UserId");

                    b.ToTable("UserDevices");
                });

            modelBuilder.Entity("NewLMS.UMKM.Data.Entities.UserFcmToken", b =>
                {
                    b.Property<string>("DeviceId")
                        .HasColumnType("nvarchar(450)");

                    b.Property<Guid>("CreatedBy")
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTime>("CreatedDate")
                        .HasColumnType("datetime2");

                    b.Property<Guid?>("DeletedBy")
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTime?>("DeletedDate")
                        .HasColumnType("datetime2");

                    b.Property<string>("FcmToken")
                        .HasColumnType("nvarchar(max)");

                    b.Property<bool>("IsDeleted")
                        .HasColumnType("bit");

                    b.Property<Guid?>("ModifiedBy")
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTime?>("ModifiedDate")
                        .HasColumnType("datetime2");

                    b.HasKey("DeviceId");

                    b.ToTable("UserFcmTokens");
                });

            modelBuilder.Entity("NewLMS.UMKM.Data.Entities.UserLogin", b =>
                {
                    b.Property<string>("LoginProvider")
                        .HasColumnType("nvarchar(450)");

                    b.Property<string>("ProviderKey")
                        .HasColumnType("nvarchar(450)");

                    b.Property<string>("ProviderDisplayName")
                        .HasColumnType("nvarchar(max)");

                    b.Property<Guid>("UserId")
                        .HasColumnType("uniqueidentifier");

                    b.HasKey("LoginProvider", "ProviderKey");

                    b.HasIndex("UserId");

                    b.ToTable("UserLogins", (string)null);
                });

            modelBuilder.Entity("NewLMS.UMKM.Data.Entities.UserRole", b =>
                {
                    b.Property<Guid>("UserId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<Guid>("RoleId")
                        .HasColumnType("uniqueidentifier");

                    b.HasKey("UserId", "RoleId");

                    b.HasIndex("RoleId");

                    b.ToTable("UserRoles", (string)null);
                });

            modelBuilder.Entity("NewLMS.UMKM.Data.Entities.UserToken", b =>
                {
                    b.Property<Guid>("UserId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("LoginProvider")
                        .HasColumnType("nvarchar(450)");

                    b.Property<string>("Name")
                        .HasColumnType("nvarchar(450)");

                    b.Property<string>("Value")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("UserId", "LoginProvider", "Name");

                    b.ToTable("UserTokens", (string)null);
                });

            modelBuilder.Entity("NewLMS.UMKM.Data.Entities.AccountNumber", b =>
                {
                    b.HasOne("NewLMS.UMKM.Data.Entities.RfBranch", "RfBranch")
                        .WithMany()
                        .HasForeignKey("BranchId");

                    b.HasOne("NewLMS.UMKM.Data.Entities.LoanApplication", "LoanApplication")
                        .WithMany("AccountNumbers")
                        .HasForeignKey("LoanApplicationId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("LoanApplication");

                    b.Navigation("RfBranch");
                });

            modelBuilder.Entity("NewLMS.UMKM.Data.Entities.Action", b =>
                {
                    b.HasOne("NewLMS.UMKM.Data.Entities.User", "CreatedByUser")
                        .WithMany()
                        .HasForeignKey("CreatedBy")
                        .OnDelete(DeleteBehavior.NoAction)
                        .IsRequired();

                    b.HasOne("NewLMS.UMKM.Data.Entities.User", "DeletedByUser")
                        .WithMany()
                        .HasForeignKey("DeletedBy")
                        .OnDelete(DeleteBehavior.NoAction);

                    b.HasOne("NewLMS.UMKM.Data.Entities.User", "ModifiedByUser")
                        .WithMany()
                        .HasForeignKey("ModifiedBy")
                        .OnDelete(DeleteBehavior.NoAction);

                    b.Navigation("CreatedByUser");

                    b.Navigation("DeletedByUser");

                    b.Navigation("ModifiedByUser");
                });

            modelBuilder.Entity("NewLMS.UMKM.Data.Entities.ApprovalRole", b =>
                {
                    b.HasOne("NewLMS.UMKM.Data.Entities.Role", "Role")
                        .WithMany()
                        .HasForeignKey("RoleId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Role");
                });

            modelBuilder.Entity("NewLMS.UMKM.Data.Entities.DataPK", b =>
                {
                    b.HasOne("NewLMS.UMKM.Data.Entities.LoanApplication", "LoanApplication")
                        .WithOne("DataPK")
                        .HasForeignKey("NewLMS.UMKM.Data.Entities.DataPK", "LoanApplicationId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("LoanApplication");
                });

            modelBuilder.Entity("NewLMS.UMKM.Data.Entities.Debtor", b =>
                {
                    b.HasOne("NewLMS.UMKM.Data.Entities.RfZipCode", "RfZipCode")
                        .WithMany()
                        .HasForeignKey("RfZipCodeId");

                    b.Navigation("RfZipCode");
                });

            modelBuilder.Entity("NewLMS.UMKM.Data.Entities.DebtorCollateral", b =>
                {
                    b.HasOne("NewLMS.UMKM.Data.Entities.Debtor", "Debtor")
                        .WithMany("DebtorCollaterals")
                        .HasForeignKey("DebtorId");

                    b.HasOne("NewLMS.UMKM.Data.Entities.LoanApplication", "LoanApplication")
                        .WithMany("DebtorCollateral")
                        .HasForeignKey("LoanApplicationId");

                    b.HasOne("NewLMS.UMKM.Data.Entities.RfCollateral", "RfCollateral")
                        .WithMany()
                        .HasForeignKey("RfCollateralCode");

                    b.Navigation("Debtor");

                    b.Navigation("LoanApplication");

                    b.Navigation("RfCollateral");
                });

            modelBuilder.Entity("NewLMS.UMKM.Data.Entities.DebtorCouple", b =>
                {
                    b.HasOne("NewLMS.UMKM.Data.Entities.Debtor", "Debtor")
                        .WithOne("DebtorCouple")
                        .HasForeignKey("NewLMS.UMKM.Data.Entities.DebtorCouple", "DebtorCoupleId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("NewLMS.UMKM.Data.Entities.RfZipCode", "RfZipCode")
                        .WithMany()
                        .HasForeignKey("RfZipCodeId");

                    b.Navigation("Debtor");

                    b.Navigation("RfZipCode");
                });

            modelBuilder.Entity("NewLMS.UMKM.Data.Entities.DebtorEmergency", b =>
                {
                    b.HasOne("NewLMS.UMKM.Data.Entities.Debtor", "Debtor")
                        .WithMany("Emergency")
                        .HasForeignKey("DebtorId");

                    b.HasOne("NewLMS.UMKM.Data.Entities.RfZipCode", "RfZipCode")
                        .WithMany()
                        .HasForeignKey("RfZipCodeId");

                    b.Navigation("Debtor");

                    b.Navigation("RfZipCode");
                });

            modelBuilder.Entity("NewLMS.UMKM.Data.Entities.DebtorExistingFacility", b =>
                {
                    b.HasOne("NewLMS.UMKM.Data.Entities.Debtor", "Debtor")
                        .WithMany("DebtorExistingFacilities")
                        .HasForeignKey("DebtorId");

                    b.Navigation("Debtor");
                });

            modelBuilder.Entity("NewLMS.UMKM.Data.Entities.DebtorFinance", b =>
                {
                    b.HasOne("NewLMS.UMKM.Data.Entities.RfCompany", "Company")
                        .WithMany("DebtorFinances")
                        .HasForeignKey("CompanyId");

                    b.HasOne("NewLMS.UMKM.Data.Entities.Debtor", "Debtor")
                        .WithOne("DebtorFinance")
                        .HasForeignKey("NewLMS.UMKM.Data.Entities.DebtorFinance", "DebtorFinanceId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("NewLMS.UMKM.Data.Entities.RfZipCode", "RfZipCode")
                        .WithMany()
                        .HasForeignKey("RfZipCodeId");

                    b.Navigation("Company");

                    b.Navigation("Debtor");

                    b.Navigation("RfZipCode");
                });

            modelBuilder.Entity("NewLMS.UMKM.Data.Entities.Deviation", b =>
                {
                    b.HasOne("NewLMS.UMKM.Data.Entities.RfDeviation", "RfDeviation")
                        .WithMany()
                        .HasForeignKey("DeviationDesc");

                    b.HasOne("NewLMS.UMKM.Data.Entities.LoanApplication", "LoanApplication")
                        .WithMany()
                        .HasForeignKey("LoanApplicationId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("LoanApplication");

                    b.Navigation("RfDeviation");
                });

            modelBuilder.Entity("NewLMS.UMKM.Data.Entities.DisbursementLog", b =>
                {
                    b.HasOne("NewLMS.UMKM.Data.Entities.LoanApplication", "LoanApplication")
                        .WithMany("DisbursementLogs")
                        .HasForeignKey("LoanApplicationId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("NewLMS.UMKM.Data.Entities.User", "User")
                        .WithMany()
                        .HasForeignKey("UserAdminKredit")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("LoanApplication");

                    b.Navigation("User");
                });

            modelBuilder.Entity("NewLMS.UMKM.Data.Entities.Document", b =>
                {
                    b.HasOne("NewLMS.UMKM.Data.Entities.RfDocumentList", "RfDocumentList")
                        .WithMany()
                        .HasForeignKey("DocumentCode");

                    b.HasOne("NewLMS.UMKM.Data.Entities.LoanApplication", "LoanApplication")
                        .WithMany("Documents")
                        .HasForeignKey("LoanApplicationId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("LoanApplication");

                    b.Navigation("RfDocumentList");
                });

            modelBuilder.Entity("NewLMS.UMKM.Data.Entities.DocumentFileUrl", b =>
                {
                    b.HasOne("NewLMS.UMKM.Data.Entities.Document", "Document")
                        .WithMany("Files")
                        .HasForeignKey("DocumentId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("NewLMS.UMKM.Data.Entities.FileUrl", "FileUrl")
                        .WithMany()
                        .HasForeignKey("FileUrlId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Document");

                    b.Navigation("FileUrl");
                });

            modelBuilder.Entity("NewLMS.UMKM.Data.Entities.DocumentSp3k", b =>
                {
                    b.HasOne("NewLMS.UMKM.Data.Entities.FileUrl", "FileUrl")
                        .WithMany()
                        .HasForeignKey("DocumentSp3kUrl");

                    b.HasOne("NewLMS.UMKM.Data.Entities.LoanApplication", "LoanApplication")
                        .WithMany()
                        .HasForeignKey("LoanApplicationId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("FileUrl");

                    b.Navigation("LoanApplication");
                });

            modelBuilder.Entity("NewLMS.UMKM.Data.Entities.EmailSMTPSetting", b =>
                {
                    b.HasOne("NewLMS.UMKM.Data.Entities.User", "CreatedByUser")
                        .WithMany()
                        .HasForeignKey("CreatedBy")
                        .OnDelete(DeleteBehavior.NoAction)
                        .IsRequired();

                    b.HasOne("NewLMS.UMKM.Data.Entities.User", "DeletedByUser")
                        .WithMany()
                        .HasForeignKey("DeletedBy")
                        .OnDelete(DeleteBehavior.NoAction);

                    b.HasOne("NewLMS.UMKM.Data.Entities.User", "ModifiedByUser")
                        .WithMany()
                        .HasForeignKey("ModifiedBy")
                        .OnDelete(DeleteBehavior.NoAction);

                    b.Navigation("CreatedByUser");

                    b.Navigation("DeletedByUser");

                    b.Navigation("ModifiedByUser");
                });

            modelBuilder.Entity("NewLMS.UMKM.Data.Entities.LegalSign", b =>
                {
                    b.HasOne("NewLMS.UMKM.Data.Entities.LoanApplication", "LoanApplication")
                        .WithOne("LegalSign")
                        .HasForeignKey("NewLMS.UMKM.Data.Entities.LegalSign", "LoanApplicationId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("NewLMS.UMKM.Data.Entities.SCUser", "SCUserNota")
                        .WithMany()
                        .HasForeignKey("SigningNota");

                    b.HasOne("NewLMS.UMKM.Data.Entities.SCUser", "SCUserPK")
                        .WithMany()
                        .HasForeignKey("SigningPK");

                    b.Navigation("LoanApplication");

                    b.Navigation("SCUserNota");

                    b.Navigation("SCUserPK");
                });

            modelBuilder.Entity("NewLMS.UMKM.Data.Entities.LoanApplication", b =>
                {
                    b.HasOne("NewLMS.UMKM.Data.Entities.RfBranch", "Branch")
                        .WithMany()
                        .HasForeignKey("BranchId");

                    b.HasOne("NewLMS.UMKM.Data.Entities.LoanApplicationInsuranceFee", "LoanApplicationInsuranceFee")
                        .WithMany()
                        .HasForeignKey("LoanApplicationInsuranceFeeId");

                    b.HasOne("NewLMS.UMKM.Data.Entities.Debtor", "Debtor")
                        .WithMany("LoanApplications")
                        .HasForeignKey("NoIdentity");

                    b.HasOne("NewLMS.UMKM.Data.Entities.User", "Owner")
                        .WithMany()
                        .HasForeignKey("OwnerId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("NewLMS.UMKM.Data.Entities.Prospect", "Prospect")
                        .WithMany()
                        .HasForeignKey("ProspectGuid")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("NewLMS.UMKM.Data.Entities.RfSectorLBU3", "RfSectorLBU3")
                        .WithMany()
                        .HasForeignKey("RfSectorLBU3Code");

                    b.HasOne("NewLMS.UMKM.Data.Entities.RfSubProduct", "RfSubProduct")
                        .WithMany()
                        .HasForeignKey("RfSubProductId");

                    b.HasOne("NewLMS.UMKM.Data.Entities.RfStage", "Stage")
                        .WithMany()
                        .HasForeignKey("StageId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Branch");

                    b.Navigation("Debtor");

                    b.Navigation("LoanApplicationInsuranceFee");

                    b.Navigation("Owner");

                    b.Navigation("Prospect");

                    b.Navigation("RfSectorLBU3");

                    b.Navigation("RfSubProduct");

                    b.Navigation("Stage");
                });

            modelBuilder.Entity("NewLMS.UMKM.Data.Entities.LoanApplicationApproval", b =>
                {
                    b.HasOne("NewLMS.UMKM.Data.Entities.LoanApplication", "LoanApplication")
                        .WithMany("LoanApplicationApprovals")
                        .HasForeignKey("LoanApplicationId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("LoanApplication");
                });

            modelBuilder.Entity("NewLMS.UMKM.Data.Entities.LoanApplicationAssignment", b =>
                {
                    b.HasOne("NewLMS.UMKM.Data.Entities.LoanApplication", "LoanApplication")
                        .WithMany()
                        .HasForeignKey("LoanApplicationId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("LoanApplication");
                });

            modelBuilder.Entity("NewLMS.UMKM.Data.Entities.LoanApplicationComplienceSheet", b =>
                {
                    b.HasOne("NewLMS.UMKM.Data.Entities.RfCSBP", "RfCSBPBMPK")
                        .WithMany()
                        .HasForeignKey("BMPK");

                    b.HasOne("NewLMS.UMKM.Data.Entities.RfCSBP", "RfCSBPBankRelations")
                        .WithMany()
                        .HasForeignKey("BankRelations");

                    b.HasOne("NewLMS.UMKM.Data.Entities.RfCSBP", "RfCSBPCDDProfile")
                        .WithMany()
                        .HasForeignKey("CDDProfile");

                    b.HasOne("NewLMS.UMKM.Data.Entities.RfCSBP", "RfCSBPCollateralInsurance")
                        .WithMany()
                        .HasForeignKey("CollateralInsurance");

                    b.HasOne("NewLMS.UMKM.Data.Entities.RfCSBP", "RfCSBPCollateralOwnership")
                        .WithMany()
                        .HasForeignKey("CollateralOwnership");

                    b.HasOne("NewLMS.UMKM.Data.Entities.RfCSBP", "RfCSBPCollateralType")
                        .WithMany()
                        .HasForeignKey("CollateralType");

                    b.HasOne("NewLMS.UMKM.Data.Entities.RfCSBP", "RfCSBPConflictOfInterest")
                        .WithMany()
                        .HasForeignKey("ConflictOfInterest");

                    b.HasOne("NewLMS.UMKM.Data.Entities.RfCSBP", "RfCSBPCorrectIdentity")
                        .WithMany()
                        .HasForeignKey("CorrectIdentity");

                    b.HasOne("NewLMS.UMKM.Data.Entities.RfCSBP", "RfCSBPCreditIncrease")
                        .WithMany()
                        .HasForeignKey("CreditIncrease");

                    b.HasOne("NewLMS.UMKM.Data.Entities.RfCSBP", "RfCSBPCreditLifeInsurance")
                        .WithMany()
                        .HasForeignKey("CreditLifeInsurance");

                    b.HasOne("NewLMS.UMKM.Data.Entities.RfCSBP", "RfCSBPCustomerSince")
                        .WithMany()
                        .HasForeignKey("CustomerSince");

                    b.HasOne("NewLMS.UMKM.Data.Entities.RfCSBP", "RfCSBPDHN")
                        .WithMany()
                        .HasForeignKey("DHN");

                    b.HasOne("NewLMS.UMKM.Data.Entities.RfCSBP", "RfCSBPDHNwithdrawal")
                        .WithMany()
                        .HasForeignKey("DHNwithdrawal");

                    b.HasOne("NewLMS.UMKM.Data.Entities.RfCSBP", "RfCSBPDaftarHitamNasional")
                        .WithMany()
                        .HasForeignKey("DaftarHitamNasional");

                    b.HasOne("NewLMS.UMKM.Data.Entities.RfCSBP", "RfCSBPEmployeeIdentity")
                        .WithMany()
                        .HasForeignKey("EmployeeIdentity");

                    b.HasOne("NewLMS.UMKM.Data.Entities.RfCSBP", "RfCSBPFamilyCertificateLegal")
                        .WithMany()
                        .HasForeignKey("FamilyCertificateLegal");

                    b.HasOne("NewLMS.UMKM.Data.Entities.RfCSBP", "RfCSBPKTPLegal")
                        .WithMany()
                        .HasForeignKey("KTPLegal");

                    b.HasOne("NewLMS.UMKM.Data.Entities.LoanApplication", "LoanApplication")
                        .WithOne("LoanApplicationComplienceSheet")
                        .HasForeignKey("NewLMS.UMKM.Data.Entities.LoanApplicationComplienceSheet", "LoanApplicationComplienceSheetId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("NewLMS.UMKM.Data.Entities.RfCSBP", "RfCSBPMarriageCertificateLegal")
                        .WithMany()
                        .HasForeignKey("MarriageCertificateLegal");

                    b.HasOne("NewLMS.UMKM.Data.Entities.RfCSBP", "RfCSBPProofOfCollateralOwnership")
                        .WithMany()
                        .HasForeignKey("ProofOfCollateralOwnership");

                    b.HasOne("NewLMS.UMKM.Data.Entities.RfCSBP", "RfCSBPProofOfIncome")
                        .WithMany()
                        .HasForeignKey("ProofOfIncome");

                    b.HasOne("NewLMS.UMKM.Data.Entities.RfCSBP", "RfCSBPSLIK")
                        .WithMany()
                        .HasForeignKey("SLIK");

                    b.HasOne("NewLMS.UMKM.Data.Entities.RfCSBP", "RfCSBPSufficientCollateral")
                        .WithMany()
                        .HasForeignKey("SufficientCollateral");

                    b.HasOne("NewLMS.UMKM.Data.Entities.RfCSBP", "RfCSBPValidIdentity")
                        .WithMany()
                        .HasForeignKey("ValidIdentity");

                    b.Navigation("LoanApplication");

                    b.Navigation("RfCSBPBMPK");

                    b.Navigation("RfCSBPBankRelations");

                    b.Navigation("RfCSBPCDDProfile");

                    b.Navigation("RfCSBPCollateralInsurance");

                    b.Navigation("RfCSBPCollateralOwnership");

                    b.Navigation("RfCSBPCollateralType");

                    b.Navigation("RfCSBPConflictOfInterest");

                    b.Navigation("RfCSBPCorrectIdentity");

                    b.Navigation("RfCSBPCreditIncrease");

                    b.Navigation("RfCSBPCreditLifeInsurance");

                    b.Navigation("RfCSBPCustomerSince");

                    b.Navigation("RfCSBPDHN");

                    b.Navigation("RfCSBPDHNwithdrawal");

                    b.Navigation("RfCSBPDaftarHitamNasional");

                    b.Navigation("RfCSBPEmployeeIdentity");

                    b.Navigation("RfCSBPFamilyCertificateLegal");

                    b.Navigation("RfCSBPKTPLegal");

                    b.Navigation("RfCSBPMarriageCertificateLegal");

                    b.Navigation("RfCSBPProofOfCollateralOwnership");

                    b.Navigation("RfCSBPProofOfIncome");

                    b.Navigation("RfCSBPSLIK");

                    b.Navigation("RfCSBPSufficientCollateral");

                    b.Navigation("RfCSBPValidIdentity");
                });

            modelBuilder.Entity("NewLMS.UMKM.Data.Entities.LoanApplicationCreditContractTerm", b =>
                {
                    b.HasOne("NewLMS.UMKM.Data.Entities.LoanApplication", "LoanApplication")
                        .WithMany("LoanApplicationCreditContractTerm")
                        .HasForeignKey("LoanApplicationId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("NewLMS.UMKM.Data.Entities.SCUser", "SCUser")
                        .WithMany()
                        .HasForeignKey("UserId");

                    b.HasOne("NewLMS.UMKM.Data.Entities.SCUser", "SCUserOOK")
                        .WithMany()
                        .HasForeignKey("UserIdOOK");

                    b.Navigation("LoanApplication");

                    b.Navigation("SCUser");

                    b.Navigation("SCUserOOK");
                });

            modelBuilder.Entity("NewLMS.UMKM.Data.Entities.LoanApplicationCreditHistory", b =>
                {
                    b.HasOne("NewLMS.UMKM.Data.Entities.RfSandiBI", "RfSandiBIApplicationTypeClass")
                        .WithMany()
                        .HasForeignKey("ApplicationType");

                    b.HasOne("NewLMS.UMKM.Data.Entities.RfBank", "RfBank")
                        .WithMany()
                        .HasForeignKey("BankId");

                    b.HasOne("NewLMS.UMKM.Data.Entities.RfSandiBI", "RfSandiBIBehaviourClass")
                        .WithMany()
                        .HasForeignKey("Behaviour");

                    b.HasOne("NewLMS.UMKM.Data.Entities.RfSandiBI", "RfSandiBICollectibilityClass")
                        .WithMany()
                        .HasForeignKey("Collectibility");

                    b.HasOne("NewLMS.UMKM.Data.Entities.RfCondition", "RfCondition")
                        .WithMany()
                        .HasForeignKey("Condition");

                    b.HasOne("NewLMS.UMKM.Data.Entities.RfCreditType", "RfCreditType")
                        .WithMany()
                        .HasForeignKey("CreditType");

                    b.HasOne("NewLMS.UMKM.Data.Entities.RfSandiBI", "RfSandiBIEconomySectorClass")
                        .WithMany()
                        .HasForeignKey("EconomySector");

                    b.HasOne("NewLMS.UMKM.Data.Entities.LoanApplication", "LoanApplication")
                        .WithMany("LoanApplicationCreditHistories")
                        .HasForeignKey("LoanApplicationid")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("LoanApplication");

                    b.Navigation("RfBank");

                    b.Navigation("RfCondition");

                    b.Navigation("RfCreditType");

                    b.Navigation("RfSandiBIApplicationTypeClass");

                    b.Navigation("RfSandiBIBehaviourClass");

                    b.Navigation("RfSandiBICollectibilityClass");

                    b.Navigation("RfSandiBIEconomySectorClass");
                });

            modelBuilder.Entity("NewLMS.UMKM.Data.Entities.LoanApplicationDuplication", b =>
                {
                    b.HasOne("NewLMS.UMKM.Data.Entities.LoanApplication", "LoanApplication")
                        .WithMany()
                        .HasForeignKey("LoanApplicationId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("LoanApplication");
                });

            modelBuilder.Entity("NewLMS.UMKM.Data.Entities.LoanApplicationInsuranceFee", b =>
                {
                    b.HasOne("NewLMS.UMKM.Data.Entities.RfInsuranceCompany", "RfInsuranceCompany")
                        .WithMany()
                        .HasForeignKey("BrokerCode");

                    b.HasOne("NewLMS.UMKM.Data.Entities.RfInsuranceRateTemplate", "RfInsuranceRateTemplate")
                        .WithMany()
                        .HasForeignKey("CoverageCode");

                    b.HasOne("NewLMS.UMKM.Data.Entities.SubmittedFacility", "SubmittedFacility")
                        .WithOne("LoanApplicationInsuranceFee")
                        .HasForeignKey("NewLMS.UMKM.Data.Entities.LoanApplicationInsuranceFee", "LoanApplicationInsuranceFeeId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("RfInsuranceCompany");

                    b.Navigation("RfInsuranceRateTemplate");

                    b.Navigation("SubmittedFacility");
                });

            modelBuilder.Entity("NewLMS.UMKM.Data.Entities.LoanApplicationInsuranceFeeLog", b =>
                {
                    b.HasOne("NewLMS.UMKM.Data.Entities.RfInsuranceCompany", "RfInsuranceCompany")
                        .WithMany()
                        .HasForeignKey("BrokerCode");

                    b.HasOne("NewLMS.UMKM.Data.Entities.RfInsuranceRateTemplate", "RfInsuranceRateTemplate")
                        .WithMany()
                        .HasForeignKey("CoverageCode");

                    b.HasOne("NewLMS.UMKM.Data.Entities.LoanApplication", "LoanApplication")
                        .WithMany()
                        .HasForeignKey("LoanApplicationId");

                    b.HasOne("NewLMS.UMKM.Data.Entities.SubmittedFacilityLog", "SubmittedFacilityLog")
                        .WithOne("LoanApplicationInsuranceFeeLog")
                        .HasForeignKey("NewLMS.UMKM.Data.Entities.LoanApplicationInsuranceFeeLog", "LoanApplicationInsuranceFeeLogId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("LoanApplication");

                    b.Navigation("RfInsuranceCompany");

                    b.Navigation("RfInsuranceRateTemplate");

                    b.Navigation("SubmittedFacilityLog");
                });

            modelBuilder.Entity("NewLMS.UMKM.Data.Entities.LoanApplicationInsuranceLife", b =>
                {
                    b.HasOne("NewLMS.UMKM.Data.Entities.RfInsuranceCompany", "RfInsuranceCompany")
                        .WithMany("LoanpApplicationInsuranceLifes")
                        .HasForeignKey("InsuranceCompanyId");

                    b.HasOne("NewLMS.UMKM.Data.Entities.RfInsuranceTemplate", "RfInsuranceTemplate")
                        .WithMany("LoanpApplicationInsuranceLifes")
                        .HasForeignKey("InsuranceTemplateCode");

                    b.HasOne("NewLMS.UMKM.Data.Entities.LoanApplication", "LoanApplication")
                        .WithMany()
                        .HasForeignKey("LoanApplicationNo");

                    b.Navigation("LoanApplication");

                    b.Navigation("RfInsuranceCompany");

                    b.Navigation("RfInsuranceTemplate");
                });

            modelBuilder.Entity("NewLMS.UMKM.Data.Entities.LoanApplicationProgram", b =>
                {
                    b.HasOne("NewLMS.UMKM.Data.Entities.LoanApplication", "LoanApplication")
                        .WithMany("LoanApplicationPrograms")
                        .HasForeignKey("LoanApplicationId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("NewLMS.UMKM.Data.Entities.RfProgram", "RfProgram")
                        .WithMany("LoanApplicationProgram")
                        .HasForeignKey("RfProgramId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("LoanApplication");

                    b.Navigation("RfProgram");
                });

            modelBuilder.Entity("NewLMS.UMKM.Data.Entities.LoanApplicationSandiBI", b =>
                {
                    b.HasOne("NewLMS.UMKM.Data.Entities.RfSandiBI", "RfGolonganDebitur")
                        .WithMany()
                        .HasForeignKey("GolonganDebitur");

                    b.HasOne("NewLMS.UMKM.Data.Entities.RfSandiBI", "RfGolonganDebiturLBU")
                        .WithMany()
                        .HasForeignKey("GolonganDebiturLBU");

                    b.HasOne("NewLMS.UMKM.Data.Entities.RfSandiBI", "RfGolonganDebiturSID")
                        .WithMany()
                        .HasForeignKey("GolonganDebiturSID");

                    b.HasOne("NewLMS.UMKM.Data.Entities.RfSandiBI", "RfGolonganKredit")
                        .WithMany()
                        .HasForeignKey("GolonganKredit");

                    b.HasOne("NewLMS.UMKM.Data.Entities.RfSandiBI", "RfGolonganPenjamin")
                        .WithMany()
                        .HasForeignKey("GolonganPenjamin");

                    b.HasOne("NewLMS.UMKM.Data.Entities.RfSandiBI", "RfJenisAgunanLBU")
                        .WithMany()
                        .HasForeignKey("JenisAgunanLBU");

                    b.HasOne("NewLMS.UMKM.Data.Entities.RfSandiBI", "RfJenisKredit")
                        .WithMany()
                        .HasForeignKey("JenisKredit");

                    b.HasOne("NewLMS.UMKM.Data.Entities.RfSandiBI", "RfJenisKreditLBU")
                        .WithMany()
                        .HasForeignKey("JenisKreditLBU");

                    b.HasOne("NewLMS.UMKM.Data.Entities.RfSandiBI", "RfJenisKreditSID")
                        .WithMany()
                        .HasForeignKey("JenisKreditSID");

                    b.HasOne("NewLMS.UMKM.Data.Entities.RfSandiBI", "RfJenisPengguna")
                        .WithMany()
                        .HasForeignKey("JenisPengguna");

                    b.HasOne("NewLMS.UMKM.Data.Entities.RfSandiBI", "RfJenisPenggunaLBU")
                        .WithMany()
                        .HasForeignKey("JenisPenggunaLBU");

                    b.HasOne("NewLMS.UMKM.Data.Entities.RfSandiBI", "RfJenisPenggunaSID")
                        .WithMany()
                        .HasForeignKey("JenisPenggunaSID");

                    b.HasOne("NewLMS.UMKM.Data.Entities.RfSandiBI", "RfJenisSukuBunga")
                        .WithMany()
                        .HasForeignKey("JenisSukuBunga");

                    b.HasOne("NewLMS.UMKM.Data.Entities.RfSandiBI", "RfKategoriDebitur")
                        .WithMany()
                        .HasForeignKey("KategoriDebitur");

                    b.HasOne("NewLMS.UMKM.Data.Entities.RfSandiBI", "RfKategoriPengukuran")
                        .WithMany()
                        .HasForeignKey("KategoriPengukuran");

                    b.HasOne("NewLMS.UMKM.Data.Entities.RfSandiBI", "RfKategoriPortofolio")
                        .WithMany()
                        .HasForeignKey("KategoriPortofolio");

                    b.HasOne("NewLMS.UMKM.Data.Entities.RfSandiBI", "RfKategoriPortofolioLBU")
                        .WithMany()
                        .HasForeignKey("KategoriPortofolioLBU");

                    b.HasOne("NewLMS.UMKM.Data.Entities.RfSandiBI", "RfKeterkaitanBMPK")
                        .WithMany()
                        .HasForeignKey("KeterkaitanBMPK");

                    b.HasOne("NewLMS.UMKM.Data.Entities.RfSandiBI", "RfKodePeminjam")
                        .WithMany()
                        .HasForeignKey("KodePeminjam");

                    b.HasOne("NewLMS.UMKM.Data.Entities.RfSandiBI", "RfLembagaPemeringkat")
                        .WithMany()
                        .HasForeignKey("LembagaPemeringkat");

                    b.HasOne("NewLMS.UMKM.Data.Entities.LoanApplication", "LoanApplication")
                        .WithOne("LoanApplicationSandiBI")
                        .HasForeignKey("NewLMS.UMKM.Data.Entities.LoanApplicationSandiBI", "LoanApplicationSandiBIId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("NewLMS.UMKM.Data.Entities.RfSandiBI", "RfOrientasiPengguna")
                        .WithMany()
                        .HasForeignKey("OrientasiPengguna");

                    b.HasOne("NewLMS.UMKM.Data.Entities.RfSandiBI", "RfOrientasiPenggunaLBU")
                        .WithMany()
                        .HasForeignKey("OrientasiPenggunaLBU");

                    b.HasOne("NewLMS.UMKM.Data.Entities.RfSandiBI", "RfOrientasiPenggunaSID")
                        .WithMany()
                        .HasForeignKey("OrientasiPenggunaSID");

                    b.HasOne("NewLMS.UMKM.Data.Entities.RfSandiBI", "RfPenerbitAgunan")
                        .WithMany()
                        .HasForeignKey("PenerbitAgunan");

                    b.HasOne("NewLMS.UMKM.Data.Entities.RfSandiBI", "RfPeringkatPenerbitAgunan")
                        .WithMany()
                        .HasForeignKey("PeringkatPenerbitAgunan");

                    b.HasOne("NewLMS.UMKM.Data.Entities.RfSandiBI", "RfPeringkatPerusahaan")
                        .WithMany()
                        .HasForeignKey("PeringkatPerusahaan");

                    b.HasOne("NewLMS.UMKM.Data.Entities.RfSandiBI", "RfSektorEkonomi")
                        .WithMany()
                        .HasForeignKey("SektorEkonomi");

                    b.HasOne("NewLMS.UMKM.Data.Entities.RfSandiBI", "RfSektorEkonomiLBU")
                        .WithMany()
                        .HasForeignKey("SektorEkonomiLBU");

                    b.HasOne("NewLMS.UMKM.Data.Entities.RfSandiBI", "RfSektorEkonomiSID")
                        .WithMany()
                        .HasForeignKey("SektorEkonomiSID");

                    b.HasOne("NewLMS.UMKM.Data.Entities.RfSandiBI", "RfSifatAgunanLBU")
                        .WithMany()
                        .HasForeignKey("SifatAgunanLBU");

                    b.HasOne("NewLMS.UMKM.Data.Entities.RfSandiBI", "RfSifatKredit")
                        .WithMany()
                        .HasForeignKey("SifatKredit");

                    b.HasOne("NewLMS.UMKM.Data.Entities.RfSandiBI", "RfSifatKreditLBU")
                        .WithMany()
                        .HasForeignKey("SifatKreditLBU");

                    b.HasOne("NewLMS.UMKM.Data.Entities.RfSandiBI", "RfSifatKreditSID")
                        .WithMany()
                        .HasForeignKey("SifatKreditSID");

                    b.HasOne("NewLMS.UMKM.Data.Entities.RfSandiBI", "RfStatusDebitur")
                        .WithMany()
                        .HasForeignKey("StatusDebitur");

                    b.HasOne("NewLMS.UMKM.Data.Entities.RfSandiBI", "RfSubSektorEkonomiLBU")
                        .WithMany()
                        .HasForeignKey("SubSektorEkonomiLBU");

                    b.HasOne("NewLMS.UMKM.Data.Entities.RfSandiBI", "RfSubSubSektorEkonomiLBU")
                        .WithMany()
                        .HasForeignKey("SubSubSektorEkonomiLBU");

                    b.HasOne("NewLMS.UMKM.Data.Entities.RfSandiBI", "RfSumberDana")
                        .WithMany()
                        .HasForeignKey("SumberDana");

                    b.HasOne("NewLMS.UMKM.Data.Entities.RfSandiBI", "RfTipePlafond")
                        .WithMany()
                        .HasForeignKey("TipePlafond");

                    b.Navigation("LoanApplication");

                    b.Navigation("RfGolonganDebitur");

                    b.Navigation("RfGolonganDebiturLBU");

                    b.Navigation("RfGolonganDebiturSID");

                    b.Navigation("RfGolonganKredit");

                    b.Navigation("RfGolonganPenjamin");

                    b.Navigation("RfJenisAgunanLBU");

                    b.Navigation("RfJenisKredit");

                    b.Navigation("RfJenisKreditLBU");

                    b.Navigation("RfJenisKreditSID");

                    b.Navigation("RfJenisPengguna");

                    b.Navigation("RfJenisPenggunaLBU");

                    b.Navigation("RfJenisPenggunaSID");

                    b.Navigation("RfJenisSukuBunga");

                    b.Navigation("RfKategoriDebitur");

                    b.Navigation("RfKategoriPengukuran");

                    b.Navigation("RfKategoriPortofolio");

                    b.Navigation("RfKategoriPortofolioLBU");

                    b.Navigation("RfKeterkaitanBMPK");

                    b.Navigation("RfKodePeminjam");

                    b.Navigation("RfLembagaPemeringkat");

                    b.Navigation("RfOrientasiPengguna");

                    b.Navigation("RfOrientasiPenggunaLBU");

                    b.Navigation("RfOrientasiPenggunaSID");

                    b.Navigation("RfPenerbitAgunan");

                    b.Navigation("RfPeringkatPenerbitAgunan");

                    b.Navigation("RfPeringkatPerusahaan");

                    b.Navigation("RfSektorEkonomi");

                    b.Navigation("RfSektorEkonomiLBU");

                    b.Navigation("RfSektorEkonomiSID");

                    b.Navigation("RfSifatAgunanLBU");

                    b.Navigation("RfSifatKredit");

                    b.Navigation("RfSifatKreditLBU");

                    b.Navigation("RfSifatKreditSID");

                    b.Navigation("RfStatusDebitur");

                    b.Navigation("RfSubSektorEkonomiLBU");

                    b.Navigation("RfSubSubSektorEkonomiLBU");

                    b.Navigation("RfSumberDana");

                    b.Navigation("RfTipePlafond");
                });

            modelBuilder.Entity("NewLMS.UMKM.Data.Entities.LoanApplicationStageLog", b =>
                {
                    b.HasOne("NewLMS.UMKM.Data.Entities.LoanApplication", "LoanApplication")
                        .WithMany("LoanApplicationStageLogs")
                        .HasForeignKey("LoanApplicationId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("NewLMS.UMKM.Data.Entities.RfStage", "RfStage")
                        .WithMany()
                        .HasForeignKey("StageId");

                    b.HasOne("NewLMS.UMKM.Data.Entities.RfStage", "RfStageTarget")
                        .WithMany()
                        .HasForeignKey("TargetStage");

                    b.Navigation("LoanApplication");

                    b.Navigation("RfStage");

                    b.Navigation("RfStageTarget");
                });

            modelBuilder.Entity("NewLMS.UMKM.Data.Entities.LoanApplicationSubProgram", b =>
                {
                    b.HasOne("NewLMS.UMKM.Data.Entities.LoanApplication", "LoanApplications")
                        .WithMany()
                        .HasForeignKey("LoanApplicationId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("NewLMS.UMKM.Data.Entities.RfSubProgram", "SubPrograms")
                        .WithMany("LoanApplicationSubPrograms")
                        .HasForeignKey("SubProgramId");

                    b.Navigation("LoanApplications");

                    b.Navigation("SubPrograms");
                });

            modelBuilder.Entity("NewLMS.UMKM.Data.Entities.LoanApplicationTermCredit", b =>
                {
                    b.HasOne("NewLMS.UMKM.Data.Entities.LoanApplication", "LoanApplication")
                        .WithMany("LoanApplicationTermCredits")
                        .HasForeignKey("LoanApplicationId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("NewLMS.UMKM.Data.Entities.RfTermTemplate", "RfTermTemplate")
                        .WithMany("LoanApplicationTermCredits")
                        .HasForeignKey("RfTermTemplateId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("LoanApplication");

                    b.Navigation("RfTermTemplate");
                });

            modelBuilder.Entity("NewLMS.UMKM.Data.Entities.LogSendCallbackThirdParty", b =>
                {
                    b.HasOne("NewLMS.UMKM.Data.Entities.ThridParty", "ThridParty")
                        .WithMany("LogSendCallbackThirdParties")
                        .HasForeignKey("ThridPartyName");

                    b.Navigation("ThridParty");
                });

            modelBuilder.Entity("NewLMS.UMKM.Data.Entities.OfferingLetter", b =>
                {
                    b.HasOne("NewLMS.UMKM.Data.Entities.LoanApplication", "LoanApplication")
                        .WithOne("OfferingLetter")
                        .HasForeignKey("NewLMS.UMKM.Data.Entities.OfferingLetter", "LoanApplicationId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("LoanApplication");
                });

            modelBuilder.Entity("NewLMS.UMKM.Data.Entities.OtherTerm", b =>
                {
                    b.HasOne("NewLMS.UMKM.Data.Entities.LoanApplication", "LoanApplication")
                        .WithMany("OtherTerm")
                        .HasForeignKey("LoanApplicationId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("LoanApplication");
                });

            modelBuilder.Entity("NewLMS.UMKM.Data.Entities.Page", b =>
                {
                    b.HasOne("NewLMS.UMKM.Data.Entities.User", "CreatedByUser")
                        .WithMany()
                        .HasForeignKey("CreatedBy")
                        .OnDelete(DeleteBehavior.NoAction)
                        .IsRequired();

                    b.HasOne("NewLMS.UMKM.Data.Entities.User", "DeletedByUser")
                        .WithMany()
                        .HasForeignKey("DeletedBy")
                        .OnDelete(DeleteBehavior.NoAction);

                    b.HasOne("NewLMS.UMKM.Data.Entities.User", "ModifiedByUser")
                        .WithMany()
                        .HasForeignKey("ModifiedBy")
                        .OnDelete(DeleteBehavior.NoAction);

                    b.Navigation("CreatedByUser");

                    b.Navigation("DeletedByUser");

                    b.Navigation("ModifiedByUser");
                });

            modelBuilder.Entity("NewLMS.UMKM.Data.Entities.PageAction", b =>
                {
                    b.HasOne("NewLMS.UMKM.Data.Entities.Action", "Action")
                        .WithMany()
                        .HasForeignKey("ActionId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("NewLMS.UMKM.Data.Entities.User", "CreatedByUser")
                        .WithMany()
                        .HasForeignKey("CreatedBy")
                        .OnDelete(DeleteBehavior.NoAction)
                        .IsRequired();

                    b.HasOne("NewLMS.UMKM.Data.Entities.User", "DeletedByUser")
                        .WithMany()
                        .HasForeignKey("DeletedBy")
                        .OnDelete(DeleteBehavior.NoAction);

                    b.HasOne("NewLMS.UMKM.Data.Entities.User", "ModifiedByUser")
                        .WithMany()
                        .HasForeignKey("ModifiedBy")
                        .OnDelete(DeleteBehavior.NoAction);

                    b.HasOne("NewLMS.UMKM.Data.Entities.Page", "Page")
                        .WithMany()
                        .HasForeignKey("PageId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Action");

                    b.Navigation("CreatedByUser");

                    b.Navigation("DeletedByUser");

                    b.Navigation("ModifiedByUser");

                    b.Navigation("Page");
                });

            modelBuilder.Entity("NewLMS.UMKM.Data.Entities.PreviousPledge", b =>
                {
                    b.HasOne("NewLMS.UMKM.Data.Entities.RfCollateral", "RfCollateral")
                        .WithMany()
                        .HasForeignKey("CollateralForm");

                    b.HasOne("NewLMS.UMKM.Data.Entities.RfColTypePledge", "RfColTypePledge")
                        .WithMany()
                        .HasForeignKey("CollateralType");

                    b.HasOne("NewLMS.UMKM.Data.Entities.RfDocumentType", "RfDocumentType")
                        .WithMany()
                        .HasForeignKey("DocumentType");

                    b.HasOne("NewLMS.UMKM.Data.Entities.LoanApplication", "LoanApplication")
                        .WithMany()
                        .HasForeignKey("LoanApplicationId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("NewLMS.UMKM.Data.Entities.RfPledge", "RfPledge")
                        .WithMany()
                        .HasForeignKey("PledgeType");

                    b.Navigation("LoanApplication");

                    b.Navigation("RfColTypePledge");

                    b.Navigation("RfCollateral");

                    b.Navigation("RfDocumentType");

                    b.Navigation("RfPledge");
                });

            modelBuilder.Entity("NewLMS.UMKM.Data.Entities.Prospect", b =>
                {
                    b.HasOne("NewLMS.UMKM.Data.Entities.RfBranch", "RfBookingBranch")
                        .WithMany()
                        .HasForeignKey("BookingBranch");

                    b.HasOne("NewLMS.UMKM.Data.Entities.RfBranch", "Branch")
                        .WithMany()
                        .HasForeignKey("BranchId");

                    b.HasOne("NewLMS.UMKM.Data.Entities.RfCompany", "Company")
                        .WithMany("Prospects")
                        .HasForeignKey("CompanyId");

                    b.HasOne("NewLMS.UMKM.Data.Entities.Debtor", "Debtor")
                        .WithMany()
                        .HasForeignKey("NoIdentity");

                    b.HasOne("NewLMS.UMKM.Data.Entities.RfSectorLBU3", "RfSectorLBU3")
                        .WithMany("Prospects")
                        .HasForeignKey("RfSectorLBU3Code");

                    b.HasOne("NewLMS.UMKM.Data.Entities.RfSubProduct", "SubProduct")
                        .WithMany("Prospects")
                        .HasForeignKey("SubProductId");

                    b.Navigation("Branch");

                    b.Navigation("Company");

                    b.Navigation("Debtor");

                    b.Navigation("RfBookingBranch");

                    b.Navigation("RfSectorLBU3");

                    b.Navigation("SubProduct");
                });

            modelBuilder.Entity("NewLMS.UMKM.Data.Entities.ReceivedFacility", b =>
                {
                    b.HasOne("NewLMS.UMKM.Data.Entities.Debtor", "Debtor")
                        .WithMany("ReceivedFacilities")
                        .HasForeignKey("DebtorId");

                    b.HasOne("NewLMS.UMKM.Data.Entities.LoanApplication", "LoanApplication")
                        .WithOne("ReceivedFacility")
                        .HasForeignKey("NewLMS.UMKM.Data.Entities.ReceivedFacility", "FacilityId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Debtor");

                    b.Navigation("LoanApplication");
                });

            modelBuilder.Entity("NewLMS.UMKM.Data.Entities.RfBethanol", b =>
                {
                    b.HasOne("NewLMS.UMKM.Data.Entities.RfSubProduct", "RfSubProduct")
                        .WithMany()
                        .HasForeignKey("SubProductId");

                    b.Navigation("RfSubProduct");
                });

            modelBuilder.Entity("NewLMS.UMKM.Data.Entities.RfBranch", b =>
                {
                    b.HasOne("NewLMS.UMKM.Data.Entities.User", "CreatedByUser")
                        .WithMany()
                        .HasForeignKey("CreatedBy")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("NewLMS.UMKM.Data.Entities.User", "DeletedByUser")
                        .WithMany()
                        .HasForeignKey("DeletedBy");

                    b.HasOne("NewLMS.UMKM.Data.Entities.User", "ModifiedByUser")
                        .WithMany()
                        .HasForeignKey("ModifiedBy");

                    b.Navigation("CreatedByUser");

                    b.Navigation("DeletedByUser");

                    b.Navigation("ModifiedByUser");
                });

            modelBuilder.Entity("NewLMS.UMKM.Data.Entities.RfBranchDetail", b =>
                {
                    b.HasOne("NewLMS.UMKM.Data.Entities.RfBranch", "RfBranch")
                        .WithOne("RfBranchDetail")
                        .HasForeignKey("NewLMS.UMKM.Data.Entities.RfBranchDetail", "BranchId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("RfBranch");
                });

            modelBuilder.Entity("NewLMS.UMKM.Data.Entities.RfBranchInsuranceCompany", b =>
                {
                    b.HasOne("NewLMS.UMKM.Data.Entities.RfBranch", "RfBranch")
                        .WithMany("RfBranchInsuranceCompanies")
                        .HasForeignKey("Code")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("NewLMS.UMKM.Data.Entities.RfInsuranceCompany", "RfInsuranceCompany")
                        .WithMany("RfBranchInsuranceCompanies")
                        .HasForeignKey("InsuranceCompanyId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("NewLMS.UMKM.Data.Entities.RfInsuranceRateTemplate", "RfInsuranceRateTemplate")
                        .WithMany("RfBranchInsuranceCompanies")
                        .HasForeignKey("RfInsuranceRateTemplateCode");

                    b.Navigation("RfBranch");

                    b.Navigation("RfInsuranceCompany");

                    b.Navigation("RfInsuranceRateTemplate");
                });

            modelBuilder.Entity("NewLMS.UMKM.Data.Entities.RfCollateral", b =>
                {
                    b.HasOne("NewLMS.UMKM.Data.Entities.RfColTypePledge", "RfColTypePledge")
                        .WithMany("RfCollaterals")
                        .HasForeignKey("Type");

                    b.Navigation("RfColTypePledge");
                });

            modelBuilder.Entity("NewLMS.UMKM.Data.Entities.RfColTypePledge", b =>
                {
                    b.HasOne("NewLMS.UMKM.Data.Entities.RfPledge", "RfPledge")
                        .WithMany()
                        .HasForeignKey("PledgeTypeCode");

                    b.Navigation("RfPledge");
                });

            modelBuilder.Entity("NewLMS.UMKM.Data.Entities.RfCSBP", b =>
                {
                    b.HasOne("NewLMS.UMKM.Data.Entities.RfCSBPGroup", "RfCSBPGroup")
                        .WithMany("RfCSBPs")
                        .HasForeignKey("RfCSBPGroupId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("RfCSBPGroup");
                });

            modelBuilder.Entity("NewLMS.UMKM.Data.Entities.RfDimParamMapping", b =>
                {
                    b.HasOne("NewLMS.UMKM.Data.Entities.RfDimParam", "DIMParam")
                        .WithMany()
                        .HasForeignKey("DIMCode");

                    b.Navigation("DIMParam");
                });

            modelBuilder.Entity("NewLMS.UMKM.Data.Entities.RfDocumentGenerate", b =>
                {
                    b.HasOne("NewLMS.UMKM.Data.Entities.RfSubProduct", "RfSubProduct")
                        .WithMany()
                        .HasForeignKey("RfSubProductId");

                    b.Navigation("RfSubProduct");
                });

            modelBuilder.Entity("NewLMS.UMKM.Data.Entities.RfDocumentList", b =>
                {
                    b.HasOne("NewLMS.UMKM.Data.Entities.RfDocumentType", "RfDocumentType")
                        .WithMany()
                        .HasForeignKey("DocumentType");

                    b.Navigation("RfDocumentType");
                });

            modelBuilder.Entity("NewLMS.UMKM.Data.Entities.RfInsuranceCompany", b =>
                {
                    b.HasOne("NewLMS.UMKM.Data.Entities.RfZipCode", "RfZipCode")
                        .WithMany("RfInsuranceCompany")
                        .HasForeignKey("RfZipCodeId");

                    b.Navigation("RfZipCode");
                });

            modelBuilder.Entity("NewLMS.UMKM.Data.Entities.RfInsuranceCompanyTemplate", b =>
                {
                    b.HasOne("NewLMS.UMKM.Data.Entities.RfInsuranceCompany", "RfInsuranceCompany")
                        .WithMany()
                        .HasForeignKey("InsuranceCompanyId");

                    b.HasOne("NewLMS.UMKM.Data.Entities.RfInsuranceTemplate", "RfInsuranceTemplate")
                        .WithMany()
                        .HasForeignKey("InsuranceTemplateCode");

                    b.Navigation("RfInsuranceCompany");

                    b.Navigation("RfInsuranceTemplate");
                });

            modelBuilder.Entity("NewLMS.UMKM.Data.Entities.RfParameterDetail", b =>
                {
                    b.HasOne("NewLMS.UMKM.Data.Entities.RfParameter", "RfParameter")
                        .WithMany("RfParameterDetails")
                        .HasForeignKey("ParameterId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("RfParameter");
                });

            modelBuilder.Entity("NewLMS.UMKM.Data.Entities.RfPledgeType", b =>
                {
                    b.HasOne("NewLMS.UMKM.Data.Entities.RfCollateral", "RfCollateral")
                        .WithMany("RfPledgeTypes")
                        .HasForeignKey("CollateralCode");

                    b.HasOne("NewLMS.UMKM.Data.Entities.RfPledge", "RfPledge")
                        .WithMany()
                        .HasForeignKey("PledgeTypeCode");

                    b.Navigation("RfCollateral");

                    b.Navigation("RfPledge");
                });

            modelBuilder.Entity("NewLMS.UMKM.Data.Entities.RfPremi", b =>
                {
                    b.HasOne("NewLMS.UMKM.Data.Entities.RfInsuranceCoverage", "RfInsuranceCoverage")
                        .WithMany()
                        .HasForeignKey("RiskCode");

                    b.Navigation("RfInsuranceCoverage");
                });

            modelBuilder.Entity("NewLMS.UMKM.Data.Entities.RfProgramBranch", b =>
                {
                    b.HasOne("NewLMS.UMKM.Data.Entities.RfBranch", "RfBranches")
                        .WithMany("RfProgramBranches")
                        .HasForeignKey("BranchId");

                    b.HasOne("NewLMS.UMKM.Data.Entities.RfProgram", "RfPrograms")
                        .WithMany("RfProgramBranches")
                        .HasForeignKey("ProgramId");

                    b.Navigation("RfBranches");

                    b.Navigation("RfPrograms");
                });

            modelBuilder.Entity("NewLMS.UMKM.Data.Entities.RfProgramSubProduct", b =>
                {
                    b.HasOne("NewLMS.UMKM.Data.Entities.RfProgram", "Program")
                        .WithMany("ProgramSubProducts")
                        .HasForeignKey("ProgramId");

                    b.HasOne("NewLMS.UMKM.Data.Entities.RfSubProduct", "SubProduct")
                        .WithMany("ProgramSubProducts")
                        .HasForeignKey("SubProductId");

                    b.Navigation("Program");

                    b.Navigation("SubProduct");
                });

            modelBuilder.Entity("NewLMS.UMKM.Data.Entities.RfRate", b =>
                {
                    b.HasOne("NewLMS.UMKM.Data.Entities.RfSubProduct", "SubProduct")
                        .WithMany()
                        .HasForeignKey("SubProductId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("SubProduct");
                });

            modelBuilder.Entity("NewLMS.UMKM.Data.Entities.RfRateBranch", b =>
                {
                    b.HasOne("NewLMS.UMKM.Data.Entities.RfBranch", "RfBranches")
                        .WithMany("RfRateBranches")
                        .HasForeignKey("BranchId")
                        .OnDelete(DeleteBehavior.Restrict);

                    b.HasOne("NewLMS.UMKM.Data.Entities.RfRate", "RfRates")
                        .WithMany("RfRateBranches")
                        .HasForeignKey("RateId")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired();

                    b.Navigation("RfBranches");

                    b.Navigation("RfRates");
                });

            modelBuilder.Entity("NewLMS.UMKM.Data.Entities.RfRateCompany", b =>
                {
                    b.HasOne("NewLMS.UMKM.Data.Entities.RfCompany", "RfCompanies")
                        .WithMany("RfRateCompanies")
                        .HasForeignKey("CompanyId")
                        .OnDelete(DeleteBehavior.Restrict);

                    b.HasOne("NewLMS.UMKM.Data.Entities.RfRate", "RfRates")
                        .WithMany("RfRateCompanies")
                        .HasForeignKey("RateId")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired();

                    b.Navigation("RfCompanies");

                    b.Navigation("RfRates");
                });

            modelBuilder.Entity("NewLMS.UMKM.Data.Entities.RfSandiBI", b =>
                {
                    b.HasOne("NewLMS.UMKM.Data.Entities.RfSandiBIGroup", "RfSandiBIGroup")
                        .WithMany("RfSandiBIs")
                        .HasForeignKey("BIGroup")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("RfSandiBIGroup");
                });

            modelBuilder.Entity("NewLMS.UMKM.Data.Entities.RfScoringParamDetail", b =>
                {
                    b.HasOne("NewLMS.UMKM.Data.Entities.RfScoringParam", "RfScoringParam")
                        .WithMany("ScoringParamDetails")
                        .HasForeignKey("RfScoringParamId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("RfScoringParam");
                });

            modelBuilder.Entity("NewLMS.UMKM.Data.Entities.RfSectorLBU2", b =>
                {
                    b.HasOne("NewLMS.UMKM.Data.Entities.RfSectorLBU1", "RfSectorLBU1")
                        .WithMany("RfSectorLBU2s")
                        .HasForeignKey("RfSectorLBU1Code");

                    b.Navigation("RfSectorLBU1");
                });

            modelBuilder.Entity("NewLMS.UMKM.Data.Entities.RfSectorLBU3", b =>
                {
                    b.HasOne("NewLMS.UMKM.Data.Entities.RfSectorLBU2", "RfSectorLBU2")
                        .WithMany("RfSectorLBU3s")
                        .HasForeignKey("RfSectorLBU2Code");

                    b.Navigation("RfSectorLBU2");
                });

            modelBuilder.Entity("NewLMS.UMKM.Data.Entities.RfSubProduct", b =>
                {
                    b.HasOne("NewLMS.UMKM.Data.Entities.RfProduct", "Product")
                        .WithMany("RfSubProducts")
                        .HasForeignKey("ProductId");

                    b.Navigation("Product");
                });

            modelBuilder.Entity("NewLMS.UMKM.Data.Entities.RfSubProductAdministration", b =>
                {
                    b.HasOne("NewLMS.UMKM.Data.Entities.RfBranch", "RfBranch")
                        .WithMany()
                        .HasForeignKey("RfBranchCode")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("NewLMS.UMKM.Data.Entities.RfSubProduct", "RfSubProduct")
                        .WithMany()
                        .HasForeignKey("RfSubProductId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("RfBranch");

                    b.Navigation("RfSubProduct");
                });

            modelBuilder.Entity("NewLMS.UMKM.Data.Entities.RfSubProductInsuranceTier", b =>
                {
                    b.HasOne("NewLMS.UMKM.Data.Entities.RfSubProduct", "RfSubProduct")
                        .WithMany()
                        .HasForeignKey("RfSubProductId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("RfSubProduct");
                });

            modelBuilder.Entity("NewLMS.UMKM.Data.Entities.RfSubProductJobCode", b =>
                {
                    b.HasOne("NewLMS.UMKM.Data.Entities.RfParameterDetail", "Job")
                        .WithMany()
                        .HasForeignKey("JobCode")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("NewLMS.UMKM.Data.Entities.RfJobFieldTpl", "RfJobFieldTpl")
                        .WithMany("RfSubProductJobCodes")
                        .HasForeignKey("ShowTpl");

                    b.HasOne("NewLMS.UMKM.Data.Entities.RfSubProduct", "RfSubProduct")
                        .WithMany()
                        .HasForeignKey("SubProductId");

                    b.Navigation("Job");

                    b.Navigation("RfJobFieldTpl");

                    b.Navigation("RfSubProduct");
                });

            modelBuilder.Entity("NewLMS.UMKM.Data.Entities.RfSubProductTermTemplate", b =>
                {
                    b.HasOne("NewLMS.UMKM.Data.Entities.RfSubProduct", "SubProduct")
                        .WithMany()
                        .HasForeignKey("SubProuctId");

                    b.HasOne("NewLMS.UMKM.Data.Entities.RfTermTemplate", "TermTemplate")
                        .WithMany()
                        .HasForeignKey("TermTemplateId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("SubProduct");

                    b.Navigation("TermTemplate");
                });

            modelBuilder.Entity("NewLMS.UMKM.Data.Entities.RfSubProgram", b =>
                {
                    b.HasOne("NewLMS.UMKM.Data.Entities.RfProgram", "Program")
                        .WithMany()
                        .HasForeignKey("ProgramId");

                    b.Navigation("Program");
                });

            modelBuilder.Entity("NewLMS.UMKM.Data.Entities.RfTermTemplate", b =>
                {
                    b.HasOne("NewLMS.UMKM.Data.Entities.RfTermCondition", "RfTermCondition")
                        .WithMany("RfTermTemplates")
                        .HasForeignKey("TermConditionCode");

                    b.Navigation("RfTermCondition");
                });

            modelBuilder.Entity("NewLMS.UMKM.Data.Entities.Role", b =>
                {
                    b.HasOne("NewLMS.UMKM.Data.Entities.User", "CreatedByUser")
                        .WithMany()
                        .HasForeignKey("CreatedBy")
                        .OnDelete(DeleteBehavior.NoAction);

                    b.HasOne("NewLMS.UMKM.Data.Entities.User", "DeletedByUser")
                        .WithMany()
                        .HasForeignKey("DeletedBy")
                        .OnDelete(DeleteBehavior.NoAction);

                    b.HasOne("NewLMS.UMKM.Data.Entities.User", "ModifiedByUser")
                        .WithMany()
                        .HasForeignKey("ModifiedBy")
                        .OnDelete(DeleteBehavior.NoAction)
                        .IsRequired();

                    b.Navigation("CreatedByUser");

                    b.Navigation("DeletedByUser");

                    b.Navigation("ModifiedByUser");
                });

            modelBuilder.Entity("NewLMS.UMKM.Data.Entities.RoleClaim", b =>
                {
                    b.HasOne("NewLMS.UMKM.Data.Entities.Action", "Action")
                        .WithMany()
                        .HasForeignKey("ActionId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("NewLMS.UMKM.Data.Entities.Page", "Page")
                        .WithMany()
                        .HasForeignKey("PageId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("NewLMS.UMKM.Data.Entities.Role", "Role")
                        .WithMany("RoleClaims")
                        .HasForeignKey("RoleId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Action");

                    b.Navigation("Page");

                    b.Navigation("Role");
                });

            modelBuilder.Entity("NewLMS.UMKM.Data.Entities.SCJabatan", b =>
                {
                    b.HasOne("NewLMS.UMKM.Data.Entities.ScSuratKeputusan", "SCSURATKEPUTUSAN")
                        .WithMany("SCJabatans")
                        .HasForeignKey("SKCode");

                    b.Navigation("SCSURATKEPUTUSAN");
                });

            modelBuilder.Entity("NewLMS.UMKM.Data.Entities.ScSkLimit", b =>
                {
                    b.HasOne("NewLMS.UMKM.Data.Entities.RfProduct", "RfProduct")
                        .WithMany("SCSKLIMITs")
                        .HasForeignKey("ProductId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("NewLMS.UMKM.Data.Entities.ScSuratKeputusan", "SCSURATKEPUTUSAN")
                        .WithMany("SCSKLIMITs")
                        .HasForeignKey("SkCode")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("RfProduct");

                    b.Navigation("SCSURATKEPUTUSAN");
                });

            modelBuilder.Entity("NewLMS.UMKM.Data.Entities.ScUserDetail", b =>
                {
                    b.HasOne("NewLMS.UMKM.Data.Entities.SCJabatan", "SCJabatan")
                        .WithMany("ScUserDetails")
                        .HasForeignKey("JabCode");

                    b.HasOne("NewLMS.UMKM.Data.Entities.SCUser", "SCUser")
                        .WithOne("ScUserDetail")
                        .HasForeignKey("NewLMS.UMKM.Data.Entities.ScUserDetail", "UserId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("SCJabatan");

                    b.Navigation("SCUser");
                });

            modelBuilder.Entity("NewLMS.UMKM.Data.Entities.SCUserGroup", b =>
                {
                    b.HasOne("NewLMS.UMKM.Data.Entities.SCUser", "UplinerSCUser")
                        .WithMany()
                        .HasForeignKey("Upliner");

                    b.HasOne("NewLMS.UMKM.Data.Entities.SCUser", "UserIdSCUser")
                        .WithMany()
                        .HasForeignKey("UserId");

                    b.Navigation("UplinerSCUser");

                    b.Navigation("UserIdSCUser");
                });

            modelBuilder.Entity("NewLMS.UMKM.Data.Entities.SkkSp3k", b =>
                {
                    b.HasOne("NewLMS.UMKM.Data.Entities.LoanApplication", "LoanApplication")
                        .WithOne("SkkSp3K")
                        .HasForeignKey("NewLMS.UMKM.Data.Entities.SkkSp3k", "LoanApplicationId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("NewLMS.UMKM.Data.Entities.SCJabatan", "SCJabatan1")
                        .WithMany()
                        .HasForeignKey("Position1");

                    b.HasOne("NewLMS.UMKM.Data.Entities.SCJabatan", "SCJabatan2")
                        .WithMany()
                        .HasForeignKey("Position2");

                    b.Navigation("LoanApplication");

                    b.Navigation("SCJabatan1");

                    b.Navigation("SCJabatan2");
                });

            modelBuilder.Entity("NewLMS.UMKM.Data.Entities.SLIKRequest", b =>
                {
                    b.HasOne("NewLMS.UMKM.Data.Entities.RfBranch", "Branch")
                        .WithMany()
                        .HasForeignKey("BranchId");

                    b.HasOne("NewLMS.UMKM.Data.Entities.LoanApplication", "LoanApplication")
                        .WithOne("SLIKRequest")
                        .HasForeignKey("NewLMS.UMKM.Data.Entities.SLIKRequest", "LoanApplicationId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Branch");

                    b.Navigation("LoanApplication");
                });

            modelBuilder.Entity("NewLMS.UMKM.Data.Entities.SLIKRequestDebtor", b =>
                {
                    b.HasOne("NewLMS.UMKM.Data.Entities.FileUrl", "FileUrl")
                        .WithMany()
                        .HasForeignKey("SLIKDocumentUrl");

                    b.HasOne("NewLMS.UMKM.Data.Entities.SLIKRequest", "SLIKRequest")
                        .WithMany("SLIKRequestDebtors")
                        .HasForeignKey("SLIKRequestId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("FileUrl");

                    b.Navigation("SLIKRequest");
                });

            modelBuilder.Entity("NewLMS.UMKM.Data.Entities.SubmittedFacility", b =>
                {
                    b.HasOne("NewLMS.UMKM.Data.Entities.DebtorExistingFacility", "ClosedExistingFacility")
                        .WithMany()
                        .HasForeignKey("ClosedExistingFacilityId");

                    b.HasOne("NewLMS.UMKM.Data.Entities.LoanApplication", "LoanApplication")
                        .WithMany("SubmittedFacility")
                        .HasForeignKey("LoanApplicationId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("NewLMS.UMKM.Data.Entities.RfStage", "Stage")
                        .WithMany()
                        .HasForeignKey("StageId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("ClosedExistingFacility");

                    b.Navigation("LoanApplication");

                    b.Navigation("Stage");
                });

            modelBuilder.Entity("NewLMS.UMKM.Data.Entities.SubmittedFacilityLog", b =>
                {
                    b.HasOne("NewLMS.UMKM.Data.Entities.LoanApplication", "LoanApplication")
                        .WithMany("SubmittedFacilityLog")
                        .HasForeignKey("LoanApplicationId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("NewLMS.UMKM.Data.Entities.RfStage", "Stage")
                        .WithMany()
                        .HasForeignKey("StageMark")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("LoanApplication");

                    b.Navigation("Stage");
                });

            modelBuilder.Entity("NewLMS.UMKM.Data.Entities.TestEntity", b =>
                {
                    b.HasOne("NewLMS.UMKM.Data.Entities.RfTest", "RfTest")
                        .WithMany("TestEntities")
                        .HasForeignKey("RfTestId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("RfTest");
                });

            modelBuilder.Entity("NewLMS.UMKM.Data.Entities.ThridPartyDisbursement", b =>
                {
                    b.HasOne("NewLMS.UMKM.Data.Entities.ThridParty", "ThridParty")
                        .WithMany("ThridPartyDisbursements")
                        .HasForeignKey("Source");

                    b.Navigation("ThridParty");
                });

            modelBuilder.Entity("NewLMS.UMKM.Data.Entities.ThridPartyDisbursementDocument", b =>
                {
                    b.HasOne("NewLMS.UMKM.Data.Entities.ThridPartyDisbursement", "ThridPartyDisbursement")
                        .WithMany("ThridPartyDisbursementDocuments")
                        .HasForeignKey("DisbursementId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("ThridPartyDisbursement");
                });

            modelBuilder.Entity("NewLMS.UMKM.Data.Entities.ThridPartyDisbursementMonitoring", b =>
                {
                    b.HasOne("NewLMS.UMKM.Data.Entities.ThridPartyDisbursement", "ThridPartyDisbursement")
                        .WithMany("ThridPartyDisbursementMonitorings")
                        .HasForeignKey("ThridPartyDisbursementId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("ThridPartyDisbursement");
                });

            modelBuilder.Entity("NewLMS.UMKM.Data.Entities.UserAllowedIP", b =>
                {
                    b.HasOne("NewLMS.UMKM.Data.Entities.User", "User")
                        .WithMany("UserAllowedIPs")
                        .HasForeignKey("UserId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("User");
                });

            modelBuilder.Entity("NewLMS.UMKM.Data.Entities.UserClaim", b =>
                {
                    b.HasOne("NewLMS.UMKM.Data.Entities.Action", "Action")
                        .WithMany()
                        .HasForeignKey("ActionId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("NewLMS.UMKM.Data.Entities.Page", "Page")
                        .WithMany()
                        .HasForeignKey("PageId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("NewLMS.UMKM.Data.Entities.User", "User")
                        .WithMany("UserClaims")
                        .HasForeignKey("UserId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Action");

                    b.Navigation("Page");

                    b.Navigation("User");
                });

            modelBuilder.Entity("NewLMS.UMKM.Data.Entities.UserDevice", b =>
                {
                    b.HasOne("NewLMS.UMKM.Data.Entities.User", "User")
                        .WithMany("UserDevices")
                        .HasForeignKey("UserId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("User");
                });

            modelBuilder.Entity("NewLMS.UMKM.Data.Entities.UserLogin", b =>
                {
                    b.HasOne("NewLMS.UMKM.Data.Entities.User", "User")
                        .WithMany("UserLogins")
                        .HasForeignKey("UserId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("User");
                });

            modelBuilder.Entity("NewLMS.UMKM.Data.Entities.UserRole", b =>
                {
                    b.HasOne("NewLMS.UMKM.Data.Entities.Role", "Role")
                        .WithMany("UserRoles")
                        .HasForeignKey("RoleId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("NewLMS.UMKM.Data.Entities.User", "User")
                        .WithMany("UserRoles")
                        .HasForeignKey("UserId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Role");

                    b.Navigation("User");
                });

            modelBuilder.Entity("NewLMS.UMKM.Data.Entities.UserToken", b =>
                {
                    b.HasOne("NewLMS.UMKM.Data.Entities.User", "User")
                        .WithMany("UserTokens")
                        .HasForeignKey("UserId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("User");
                });

            modelBuilder.Entity("NewLMS.UMKM.Data.Entities.Debtor", b =>
                {
                    b.Navigation("DebtorCollaterals");

                    b.Navigation("DebtorCouple");

                    b.Navigation("DebtorExistingFacilities");

                    b.Navigation("DebtorFinance");

                    b.Navigation("Emergency");

                    b.Navigation("LoanApplications");

                    b.Navigation("ReceivedFacilities");
                });

            modelBuilder.Entity("NewLMS.UMKM.Data.Entities.Document", b =>
                {
                    b.Navigation("Files");
                });

            modelBuilder.Entity("NewLMS.UMKM.Data.Entities.LoanApplication", b =>
                {
                    b.Navigation("AccountNumbers");

                    b.Navigation("DataPK");

                    b.Navigation("DebtorCollateral");

                    b.Navigation("DisbursementLogs");

                    b.Navigation("Documents");

                    b.Navigation("LegalSign");

                    b.Navigation("LoanApplicationApprovals");

                    b.Navigation("LoanApplicationComplienceSheet");

                    b.Navigation("LoanApplicationCreditContractTerm");

                    b.Navigation("LoanApplicationCreditHistories");

                    b.Navigation("LoanApplicationPrograms");

                    b.Navigation("LoanApplicationSandiBI");

                    b.Navigation("LoanApplicationStageLogs");

                    b.Navigation("LoanApplicationTermCredits");

                    b.Navigation("OfferingLetter");

                    b.Navigation("OtherTerm");

                    b.Navigation("ReceivedFacility");

                    b.Navigation("SLIKRequest");

                    b.Navigation("SkkSp3K");

                    b.Navigation("SubmittedFacility");

                    b.Navigation("SubmittedFacilityLog");
                });

            modelBuilder.Entity("NewLMS.UMKM.Data.Entities.RfBranch", b =>
                {
                    b.Navigation("RfBranchDetail");

                    b.Navigation("RfBranchInsuranceCompanies");

                    b.Navigation("RfProgramBranches");

                    b.Navigation("RfRateBranches");
                });

            modelBuilder.Entity("NewLMS.UMKM.Data.Entities.RfCollateral", b =>
                {
                    b.Navigation("RfPledgeTypes");
                });

            modelBuilder.Entity("NewLMS.UMKM.Data.Entities.RfColTypePledge", b =>
                {
                    b.Navigation("RfCollaterals");
                });

            modelBuilder.Entity("NewLMS.UMKM.Data.Entities.RfCompany", b =>
                {
                    b.Navigation("DebtorFinances");

                    b.Navigation("Prospects");

                    b.Navigation("RfRateCompanies");
                });

            modelBuilder.Entity("NewLMS.UMKM.Data.Entities.RfCSBPGroup", b =>
                {
                    b.Navigation("RfCSBPs");
                });

            modelBuilder.Entity("NewLMS.UMKM.Data.Entities.RfInsuranceCompany", b =>
                {
                    b.Navigation("LoanpApplicationInsuranceLifes");

                    b.Navigation("RfBranchInsuranceCompanies");
                });

            modelBuilder.Entity("NewLMS.UMKM.Data.Entities.RfInsuranceRateTemplate", b =>
                {
                    b.Navigation("RfBranchInsuranceCompanies");
                });

            modelBuilder.Entity("NewLMS.UMKM.Data.Entities.RfInsuranceTemplate", b =>
                {
                    b.Navigation("LoanpApplicationInsuranceLifes");
                });

            modelBuilder.Entity("NewLMS.UMKM.Data.Entities.RfJobFieldTpl", b =>
                {
                    b.Navigation("RfSubProductJobCodes");
                });

            modelBuilder.Entity("NewLMS.UMKM.Data.Entities.RfParameter", b =>
                {
                    b.Navigation("RfParameterDetails");
                });

            modelBuilder.Entity("NewLMS.UMKM.Data.Entities.RfProduct", b =>
                {
                    b.Navigation("RfSubProducts");

                    b.Navigation("SCSKLIMITs");
                });

            modelBuilder.Entity("NewLMS.UMKM.Data.Entities.RfProgram", b =>
                {
                    b.Navigation("LoanApplicationProgram");

                    b.Navigation("ProgramSubProducts");

                    b.Navigation("RfProgramBranches");
                });

            modelBuilder.Entity("NewLMS.UMKM.Data.Entities.RfRate", b =>
                {
                    b.Navigation("RfRateBranches");

                    b.Navigation("RfRateCompanies");
                });

            modelBuilder.Entity("NewLMS.UMKM.Data.Entities.RfSandiBIGroup", b =>
                {
                    b.Navigation("RfSandiBIs");
                });

            modelBuilder.Entity("NewLMS.UMKM.Data.Entities.RfScoringParam", b =>
                {
                    b.Navigation("ScoringParamDetails");
                });

            modelBuilder.Entity("NewLMS.UMKM.Data.Entities.RfSectorLBU1", b =>
                {
                    b.Navigation("RfSectorLBU2s");
                });

            modelBuilder.Entity("NewLMS.UMKM.Data.Entities.RfSectorLBU2", b =>
                {
                    b.Navigation("RfSectorLBU3s");
                });

            modelBuilder.Entity("NewLMS.UMKM.Data.Entities.RfSectorLBU3", b =>
                {
                    b.Navigation("Prospects");
                });

            modelBuilder.Entity("NewLMS.UMKM.Data.Entities.RfSubProduct", b =>
                {
                    b.Navigation("ProgramSubProducts");

                    b.Navigation("Prospects");
                });

            modelBuilder.Entity("NewLMS.UMKM.Data.Entities.RfSubProgram", b =>
                {
                    b.Navigation("LoanApplicationSubPrograms");
                });

            modelBuilder.Entity("NewLMS.UMKM.Data.Entities.RfTermCondition", b =>
                {
                    b.Navigation("RfTermTemplates");
                });

            modelBuilder.Entity("NewLMS.UMKM.Data.Entities.RfTermTemplate", b =>
                {
                    b.Navigation("LoanApplicationTermCredits");
                });

            modelBuilder.Entity("NewLMS.UMKM.Data.Entities.RfTest", b =>
                {
                    b.Navigation("TestEntities");
                });

            modelBuilder.Entity("NewLMS.UMKM.Data.Entities.RfZipCode", b =>
                {
                    b.Navigation("RfInsuranceCompany");
                });

            modelBuilder.Entity("NewLMS.UMKM.Data.Entities.Role", b =>
                {
                    b.Navigation("RoleClaims");

                    b.Navigation("UserRoles");
                });

            modelBuilder.Entity("NewLMS.UMKM.Data.Entities.SCJabatan", b =>
                {
                    b.Navigation("ScUserDetails");
                });

            modelBuilder.Entity("NewLMS.UMKM.Data.Entities.ScSuratKeputusan", b =>
                {
                    b.Navigation("SCJabatans");

                    b.Navigation("SCSKLIMITs");
                });

            modelBuilder.Entity("NewLMS.UMKM.Data.Entities.SCUser", b =>
                {
                    b.Navigation("ScUserDetail");
                });

            modelBuilder.Entity("NewLMS.UMKM.Data.Entities.SLIKRequest", b =>
                {
                    b.Navigation("SLIKRequestDebtors");
                });

            modelBuilder.Entity("NewLMS.UMKM.Data.Entities.SubmittedFacility", b =>
                {
                    b.Navigation("LoanApplicationInsuranceFee");
                });

            modelBuilder.Entity("NewLMS.UMKM.Data.Entities.SubmittedFacilityLog", b =>
                {
                    b.Navigation("LoanApplicationInsuranceFeeLog");
                });

            modelBuilder.Entity("NewLMS.UMKM.Data.Entities.ThridParty", b =>
                {
                    b.Navigation("LogSendCallbackThirdParties");

                    b.Navigation("ThridPartyDisbursements");
                });

            modelBuilder.Entity("NewLMS.UMKM.Data.Entities.ThridPartyDisbursement", b =>
                {
                    b.Navigation("ThridPartyDisbursementDocuments");

                    b.Navigation("ThridPartyDisbursementMonitorings");
                });

            modelBuilder.Entity("NewLMS.UMKM.Data.Entities.User", b =>
                {
                    b.Navigation("UserAllowedIPs");

                    b.Navigation("UserClaims");

                    b.Navigation("UserDevices");

                    b.Navigation("UserLogins");

                    b.Navigation("UserRoles");

                    b.Navigation("UserTokens");
                });
#pragma warning restore 612, 618
        }
    }
}
